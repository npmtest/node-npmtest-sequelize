{"/home/travis/build/npmtest/node-npmtest-sequelize/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_sequelize */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/lib.npmtest_sequelize.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/lib.npmtest_sequelize.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_sequelize */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_sequelize = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_sequelize = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":67},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-sequelize && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_sequelize */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_sequelize","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_sequelize.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_sequelize.rollup.js'] =","            local.assetsDict['/assets.npmtest_sequelize.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_sequelize.__dirname +","                    '/lib.npmtest_sequelize.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}}},"branchMap":{},"code":["'use strict';","","/**","  The entry point.","  @module Sequelize","**/","module.exports = require('./lib/sequelize');",""],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/sequelize.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/sequelize.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":37,"70":1,"71":0,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":1,"213":0,"214":1,"215":0,"216":1,"217":0,"218":1,"219":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":1,"260":0,"261":1,"262":0,"263":1,"264":1,"265":0,"266":1,"267":0,"268":1,"269":0,"270":1,"271":0,"272":1,"273":0,"274":1,"275":0,"276":1,"277":0,"278":1,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":1,"344":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0,0],"106":[0,0],"107":[0,0],"108":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"fnMap":{"1":{"name":"(anonymous_1)","line":112,"loc":{"start":{"line":112,"column":16},"end":{"line":112,"column":64}}},"2":{"name":"(anonymous_2)","line":250,"loc":{"start":{"line":250,"column":25},"end":{"line":250,"column":36}}},"3":{"name":"(anonymous_3)","line":253,"loc":{"start":{"line":253,"column":28},"end":{"line":253,"column":39}}},"4":{"name":"(anonymous_4)","line":314,"loc":{"start":{"line":314,"column":7},"end":{"line":314,"column":18}}},"5":{"name":"(anonymous_5)","line":478,"loc":{"start":{"line":478,"column":35},"end":{"line":478,"column":47}}},"6":{"name":"(anonymous_6)","line":487,"loc":{"start":{"line":487,"column":33},"end":{"line":487,"column":44}}},"7":{"name":"(anonymous_7)","line":499,"loc":{"start":{"line":499,"column":40},"end":{"line":499,"column":51}}},"8":{"name":"(anonymous_8)","line":602,"loc":{"start":{"line":602,"column":29},"end":{"line":602,"column":70}}},"9":{"name":"(anonymous_9)","line":647,"loc":{"start":{"line":647,"column":28},"end":{"line":647,"column":48}}},"10":{"name":"(anonymous_10)","line":661,"loc":{"start":{"line":661,"column":32},"end":{"line":661,"column":52}}},"11":{"name":"(anonymous_11)","line":663,"loc":{"start":{"line":663,"column":24},"end":{"line":663,"column":40}}},"12":{"name":"(anonymous_12)","line":675,"loc":{"start":{"line":675,"column":29},"end":{"line":675,"column":44}}},"13":{"name":"(anonymous_13)","line":740,"loc":{"start":{"line":740,"column":28},"end":{"line":740,"column":51}}},"14":{"name":"(anonymous_14)","line":845,"loc":{"start":{"line":845,"column":9},"end":{"line":845,"column":31}}},"15":{"name":"(anonymous_15)","line":848,"loc":{"start":{"line":848,"column":17},"end":{"line":848,"column":28}}},"16":{"name":"(anonymous_16)","line":849,"loc":{"start":{"line":849,"column":52},"end":{"line":849,"column":63}}},"17":{"name":"(anonymous_17)","line":854,"loc":{"start":{"line":854,"column":13},"end":{"line":854,"column":25}}},"18":{"name":"(anonymous_18)","line":872,"loc":{"start":{"line":872,"column":26},"end":{"line":872,"column":57}}},"19":{"name":"(anonymous_19)","line":893,"loc":{"start":{"line":893,"column":28},"end":{"line":893,"column":46}}},"20":{"name":"(anonymous_20)","line":906,"loc":{"start":{"line":906,"column":29},"end":{"line":906,"column":45}}},"21":{"name":"(anonymous_21)","line":922,"loc":{"start":{"line":922,"column":35},"end":{"line":922,"column":61}}},"22":{"name":"(anonymous_22)","line":935,"loc":{"start":{"line":935,"column":37},"end":{"line":935,"column":55}}},"23":{"name":"(anonymous_23)","line":949,"loc":{"start":{"line":949,"column":33},"end":{"line":949,"column":59}}},"24":{"name":"(anonymous_24)","line":962,"loc":{"start":{"line":962,"column":37},"end":{"line":962,"column":55}}},"25":{"name":"(anonymous_25)","line":978,"loc":{"start":{"line":978,"column":27},"end":{"line":978,"column":45}}},"26":{"name":"(anonymous_26)","line":992,"loc":{"start":{"line":992,"column":21},"end":{"line":992,"column":33}}},"27":{"name":"(anonymous_27)","line":996,"loc":{"start":{"line":996,"column":10},"end":{"line":996,"column":22}}},"28":{"name":"(anonymous_28)","line":1000,"loc":{"start":{"line":1000,"column":10},"end":{"line":1000,"column":21}}},"29":{"name":"(anonymous_29)","line":1005,"loc":{"start":{"line":1005,"column":35},"end":{"line":1005,"column":51}}},"30":{"name":"(anonymous_30)","line":1013,"loc":{"start":{"line":1013,"column":32},"end":{"line":1013,"column":48}}},"31":{"name":"(anonymous_31)","line":1016,"loc":{"start":{"line":1016,"column":10},"end":{"line":1016,"column":22}}},"32":{"name":"(anonymous_32)","line":1034,"loc":{"start":{"line":1034,"column":31},"end":{"line":1034,"column":49}}},"33":{"name":"(anonymous_33)","line":1037,"loc":{"start":{"line":1037,"column":33},"end":{"line":1037,"column":49}}},"34":{"name":"(anonymous_34)","line":1043,"loc":{"start":{"line":1043,"column":22},"end":{"line":1043,"column":38}}},"35":{"name":"(anonymous_35)","line":1062,"loc":{"start":{"line":1062,"column":27},"end":{"line":1062,"column":45}}},"36":{"name":"(anonymous_36)","line":1065,"loc":{"start":{"line":1065,"column":33},"end":{"line":1065,"column":49}}},"37":{"name":"(anonymous_37)","line":1071,"loc":{"start":{"line":1071,"column":30},"end":{"line":1071,"column":46}}},"38":{"name":"(anonymous_38)","line":1084,"loc":{"start":{"line":1084,"column":35},"end":{"line":1084,"column":53}}},"39":{"name":"(anonymous_39)","line":1088,"loc":{"start":{"line":1088,"column":38},"end":{"line":1088,"column":56}}},"40":{"name":"(anonymous_40)","line":1117,"loc":{"start":{"line":1117,"column":40},"end":{"line":1117,"column":53}}},"41":{"name":"(anonymous_41)","line":1130,"loc":{"start":{"line":1130,"column":42},"end":{"line":1130,"column":56}}},"42":{"name":"(anonymous_42)","line":1144,"loc":{"start":{"line":1144,"column":44},"end":{"line":1144,"column":64}}},"43":{"name":"(anonymous_43)","line":1157,"loc":{"start":{"line":1157,"column":94},"end":{"line":1157,"column":108}}},"44":{"name":"(anonymous_44)","line":1170,"loc":{"start":{"line":1170,"column":42},"end":{"line":1170,"column":53}}},"45":{"name":"(anonymous_45)","line":1183,"loc":{"start":{"line":1183,"column":40},"end":{"line":1183,"column":51}}},"46":{"name":"(anonymous_46)","line":1196,"loc":{"start":{"line":1196,"column":44},"end":{"line":1196,"column":79}}},"47":{"name":"(anonymous_47)","line":1218,"loc":{"start":{"line":1218,"column":100},"end":{"line":1218,"column":134}}},"48":{"name":"(anonymous_48)","line":1272,"loc":{"start":{"line":1272,"column":34},"end":{"line":1272,"column":66}}},"49":{"name":"(anonymous_49)","line":1283,"loc":{"start":{"line":1283,"column":30},"end":{"line":1283,"column":57}}},"50":{"name":"(anonymous_50)","line":1284,"loc":{"start":{"line":1284,"column":44},"end":{"line":1284,"column":56}}},"51":{"name":"(anonymous_51)","line":1292,"loc":{"start":{"line":1292,"column":27},"end":{"line":1292,"column":45}}},"52":{"name":"(anonymous_52)","line":1293,"loc":{"start":{"line":1293,"column":43},"end":{"line":1293,"column":55}}},"53":{"name":"(anonymous_53)","line":1297,"loc":{"start":{"line":1297,"column":15},"end":{"line":1297,"column":29}}},"54":{"name":"(anonymous_54)","line":1302,"loc":{"start":{"line":1302,"column":48},"end":{"line":1302,"column":60}}},"55":{"name":"(anonymous_55)","line":1319,"loc":{"start":{"line":1319,"column":26},"end":{"line":1319,"column":37}}},"56":{"name":"(anonymous_56)","line":1354,"loc":{"start":{"line":1354,"column":28},"end":{"line":1354,"column":40}}},"57":{"name":"(anonymous_57)","line":1358,"loc":{"start":{"line":1358,"column":40},"end":{"line":1358,"column":55}}},"58":{"name":"(anonymous_58)","line":1371,"loc":{"start":{"line":1371,"column":41},"end":{"line":1371,"column":61}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":19,"column":26}},"2":{"start":{"line":112,"column":0},"end":{"line":259,"column":2}},"3":{"start":{"line":113,"column":2},"end":{"line":113,"column":13}},"4":{"start":{"line":115,"column":2},"end":{"line":147,"column":3}},"5":{"start":{"line":117,"column":4},"end":{"line":117,"column":23}},"6":{"start":{"line":118,"column":4},"end":{"line":118,"column":81}},"7":{"start":{"line":119,"column":9},"end":{"line":147,"column":3}},"8":{"start":{"line":122,"column":4},"end":{"line":122,"column":16}},"9":{"start":{"line":123,"column":4},"end":{"line":123,"column":29}},"10":{"start":{"line":125,"column":4},"end":{"line":125,"column":43}},"11":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"12":{"start":{"line":129,"column":6},"end":{"line":129,"column":61}},"13":{"start":{"line":132,"column":4},"end":{"line":132,"column":58}},"14":{"start":{"line":133,"column":4},"end":{"line":133,"column":37}},"15":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"16":{"start":{"line":136,"column":6},"end":{"line":136,"column":35}},"17":{"start":{"line":139,"column":4},"end":{"line":142,"column":5}},"18":{"start":{"line":140,"column":6},"end":{"line":140,"column":52}},"19":{"start":{"line":141,"column":6},"end":{"line":141,"column":52}},"20":{"start":{"line":145,"column":4},"end":{"line":145,"column":28}},"21":{"start":{"line":146,"column":4},"end":{"line":146,"column":74}},"22":{"start":{"line":149,"column":2},"end":{"line":149,"column":52}},"23":{"start":{"line":151,"column":2},"end":{"line":174,"column":20}},"24":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"25":{"start":{"line":177,"column":4},"end":{"line":177,"column":38}},"26":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"27":{"start":{"line":181,"column":4},"end":{"line":181,"column":156}},"28":{"start":{"line":184,"column":2},"end":{"line":187,"column":3}},"29":{"start":{"line":185,"column":4},"end":{"line":185,"column":118}},"30":{"start":{"line":186,"column":4},"end":{"line":186,"column":39}},"31":{"start":{"line":189,"column":2},"end":{"line":189,"column":67}},"32":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"33":{"start":{"line":192,"column":4},"end":{"line":192,"column":27}},"34":{"start":{"line":195,"column":2},"end":{"line":209,"column":4}},"35":{"start":{"line":211,"column":2},"end":{"line":211,"column":14}},"36":{"start":{"line":214,"column":2},"end":{"line":232,"column":3}},"37":{"start":{"line":216,"column":6},"end":{"line":216,"column":46}},"38":{"start":{"line":217,"column":6},"end":{"line":217,"column":12}},"39":{"start":{"line":219,"column":6},"end":{"line":219,"column":44}},"40":{"start":{"line":220,"column":6},"end":{"line":220,"column":12}},"41":{"start":{"line":222,"column":6},"end":{"line":222,"column":44}},"42":{"start":{"line":223,"column":6},"end":{"line":223,"column":12}},"43":{"start":{"line":225,"column":6},"end":{"line":225,"column":47}},"44":{"start":{"line":226,"column":6},"end":{"line":226,"column":12}},"45":{"start":{"line":228,"column":6},"end":{"line":228,"column":45}},"46":{"start":{"line":229,"column":6},"end":{"line":229,"column":12}},"47":{"start":{"line":231,"column":6},"end":{"line":231,"column":146}},"48":{"start":{"line":233,"column":2},"end":{"line":233,"column":35}},"49":{"start":{"line":235,"column":2},"end":{"line":235,"column":70}},"50":{"start":{"line":241,"column":2},"end":{"line":241,"column":19}},"51":{"start":{"line":242,"column":2},"end":{"line":242,"column":45}},"52":{"start":{"line":243,"column":2},"end":{"line":243,"column":58}},"53":{"start":{"line":245,"column":2},"end":{"line":245,"column":24}},"54":{"start":{"line":247,"column":2},"end":{"line":256,"column":4}},"55":{"start":{"line":251,"column":6},"end":{"line":251,"column":39}},"56":{"start":{"line":254,"column":6},"end":{"line":254,"column":130}},"57":{"start":{"line":254,"column":36},"end":{"line":254,"column":130}},"58":{"start":{"line":258,"column":2},"end":{"line":258,"column":40}},"59":{"start":{"line":265,"column":0},"end":{"line":265,"column":55}},"60":{"start":{"line":267,"column":0},"end":{"line":267,"column":32}},"61":{"start":{"line":274,"column":0},"end":{"line":274,"column":42}},"62":{"start":{"line":280,"column":0},"end":{"line":280,"column":52}},"63":{"start":{"line":286,"column":0},"end":{"line":286,"column":58}},"64":{"start":{"line":292,"column":0},"end":{"line":292,"column":67}},"65":{"start":{"line":299,"column":0},"end":{"line":299,"column":75}},"66":{"start":{"line":301,"column":0},"end":{"line":301,"column":52}},"67":{"start":{"line":307,"column":0},"end":{"line":307,"column":32}},"68":{"start":{"line":309,"column":0},"end":{"line":311,"column":1}},"69":{"start":{"line":310,"column":2},"end":{"line":310,"column":44}},"70":{"start":{"line":313,"column":0},"end":{"line":317,"column":3}},"71":{"start":{"line":315,"column":4},"end":{"line":315,"column":57}},"72":{"start":{"line":325,"column":0},"end":{"line":325,"column":70}},"73":{"start":{"line":333,"column":0},"end":{"line":333,"column":67}},"74":{"start":{"line":340,"column":0},"end":{"line":340,"column":61}},"75":{"start":{"line":347,"column":0},"end":{"line":347,"column":70}},"76":{"start":{"line":353,"column":0},"end":{"line":353,"column":25}},"77":{"start":{"line":360,"column":0},"end":{"line":361,"column":28}},"78":{"start":{"line":368,"column":0},"end":{"line":369,"column":34}},"79":{"start":{"line":376,"column":0},"end":{"line":377,"column":38}},"80":{"start":{"line":383,"column":0},"end":{"line":384,"column":32}},"81":{"start":{"line":390,"column":0},"end":{"line":391,"column":31}},"82":{"start":{"line":397,"column":0},"end":{"line":398,"column":40}},"83":{"start":{"line":404,"column":0},"end":{"line":405,"column":43}},"84":{"start":{"line":411,"column":0},"end":{"line":412,"column":44}},"85":{"start":{"line":418,"column":0},"end":{"line":419,"column":34}},"86":{"start":{"line":425,"column":0},"end":{"line":426,"column":41}},"87":{"start":{"line":432,"column":0},"end":{"line":433,"column":36}},"88":{"start":{"line":439,"column":0},"end":{"line":440,"column":36}},"89":{"start":{"line":446,"column":0},"end":{"line":447,"column":40}},"90":{"start":{"line":453,"column":0},"end":{"line":454,"column":41}},"91":{"start":{"line":460,"column":0},"end":{"line":461,"column":42}},"92":{"start":{"line":467,"column":0},"end":{"line":468,"column":32}},"93":{"start":{"line":474,"column":0},"end":{"line":475,"column":35}},"94":{"start":{"line":478,"column":0},"end":{"line":480,"column":2}},"95":{"start":{"line":479,"column":2},"end":{"line":479,"column":54}},"96":{"start":{"line":487,"column":0},"end":{"line":489,"column":2}},"97":{"start":{"line":488,"column":2},"end":{"line":488,"column":30}},"98":{"start":{"line":499,"column":0},"end":{"line":502,"column":2}},"99":{"start":{"line":500,"column":2},"end":{"line":500,"column":72}},"100":{"start":{"line":501,"column":2},"end":{"line":501,"column":29}},"101":{"start":{"line":602,"column":0},"end":{"line":638,"column":2}},"102":{"start":{"line":603,"column":2},"end":{"line":603,"column":26}},"103":{"start":{"line":604,"column":2},"end":{"line":604,"column":35}},"104":{"start":{"line":606,"column":2},"end":{"line":608,"column":3}},"105":{"start":{"line":607,"column":4},"end":{"line":607,"column":70}},"106":{"start":{"line":610,"column":2},"end":{"line":617,"column":14}},"107":{"start":{"line":620,"column":2},"end":{"line":622,"column":3}},"108":{"start":{"line":621,"column":4},"end":{"line":621,"column":73}},"109":{"start":{"line":624,"column":2},"end":{"line":624,"column":27}},"110":{"start":{"line":626,"column":2},"end":{"line":626,"column":32}},"111":{"start":{"line":627,"column":2},"end":{"line":627,"column":53}},"112":{"start":{"line":628,"column":2},"end":{"line":628,"column":32}},"113":{"start":{"line":629,"column":2},"end":{"line":629,"column":27}},"114":{"start":{"line":631,"column":2},"end":{"line":631,"column":56}},"115":{"start":{"line":632,"column":2},"end":{"line":632,"column":40}},"116":{"start":{"line":633,"column":2},"end":{"line":633,"column":36}},"117":{"start":{"line":635,"column":2},"end":{"line":635,"column":38}},"118":{"start":{"line":637,"column":2},"end":{"line":637,"column":15}},"119":{"start":{"line":647,"column":0},"end":{"line":653,"column":2}},"120":{"start":{"line":648,"column":2},"end":{"line":650,"column":3}},"121":{"start":{"line":649,"column":4},"end":{"line":649,"column":57}},"122":{"start":{"line":652,"column":2},"end":{"line":652,"column":47}},"123":{"start":{"line":661,"column":0},"end":{"line":664,"column":2}},"124":{"start":{"line":662,"column":2},"end":{"line":662,"column":40}},"125":{"start":{"line":663,"column":2},"end":{"line":663,"column":92}},"126":{"start":{"line":663,"column":42},"end":{"line":663,"column":74}},"127":{"start":{"line":675,"column":0},"end":{"line":695,"column":2}},"128":{"start":{"line":677,"column":2},"end":{"line":683,"column":3}},"129":{"start":{"line":679,"column":4},"end":{"line":680,"column":50}},"130":{"start":{"line":682,"column":4},"end":{"line":682,"column":42}},"131":{"start":{"line":685,"column":2},"end":{"line":692,"column":3}},"132":{"start":{"line":686,"column":4},"end":{"line":686,"column":75}},"133":{"start":{"line":687,"column":4},"end":{"line":690,"column":5}},"134":{"start":{"line":689,"column":6},"end":{"line":689,"column":38}},"135":{"start":{"line":691,"column":4},"end":{"line":691,"column":57}},"136":{"start":{"line":694,"column":2},"end":{"line":694,"column":32}},"137":{"start":{"line":740,"column":0},"end":{"line":859,"column":2}},"138":{"start":{"line":741,"column":2},"end":{"line":744,"column":3}},"139":{"start":{"line":743,"column":4},"end":{"line":743,"column":138}},"140":{"start":{"line":746,"column":2},"end":{"line":746,"column":18}},"141":{"start":{"line":748,"column":2},"end":{"line":748,"column":54}},"142":{"start":{"line":750,"column":2},"end":{"line":752,"column":3}},"143":{"start":{"line":751,"column":4},"end":{"line":751,"column":43}},"144":{"start":{"line":755,"column":2},"end":{"line":757,"column":3}},"145":{"start":{"line":756,"column":4},"end":{"line":756,"column":56}},"146":{"start":{"line":759,"column":2},"end":{"line":779,"column":3}},"147":{"start":{"line":760,"column":4},"end":{"line":766,"column":5}},"148":{"start":{"line":761,"column":6},"end":{"line":763,"column":7}},"149":{"start":{"line":762,"column":8},"end":{"line":762,"column":103}},"150":{"start":{"line":765,"column":6},"end":{"line":765,"column":40}},"151":{"start":{"line":768,"column":4},"end":{"line":774,"column":5}},"152":{"start":{"line":769,"column":6},"end":{"line":771,"column":7}},"153":{"start":{"line":770,"column":8},"end":{"line":770,"column":93}},"154":{"start":{"line":773,"column":6},"end":{"line":773,"column":30}},"155":{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},"156":{"start":{"line":777,"column":6},"end":{"line":777,"column":22}},"157":{"start":{"line":781,"column":2},"end":{"line":781,"column":19}},"158":{"start":{"line":783,"column":2},"end":{"line":785,"column":3}},"159":{"start":{"line":784,"column":4},"end":{"line":784,"column":23}},"160":{"start":{"line":787,"column":2},"end":{"line":789,"column":3}},"161":{"start":{"line":788,"column":4},"end":{"line":788,"column":85}},"162":{"start":{"line":790,"column":2},"end":{"line":797,"column":3}},"163":{"start":{"line":791,"column":4},"end":{"line":796,"column":5}},"164":{"start":{"line":792,"column":6},"end":{"line":792,"column":83}},"165":{"start":{"line":795,"column":6},"end":{"line":795,"column":89}},"166":{"start":{"line":798,"column":2},"end":{"line":798,"column":21}},"167":{"start":{"line":799,"column":2},"end":{"line":803,"column":3}},"168":{"start":{"line":800,"column":4},"end":{"line":800,"column":99}},"169":{"start":{"line":801,"column":4},"end":{"line":801,"column":21}},"170":{"start":{"line":802,"column":4},"end":{"line":802,"column":32}},"171":{"start":{"line":805,"column":2},"end":{"line":808,"column":5}},"172":{"start":{"line":810,"column":2},"end":{"line":812,"column":3}},"173":{"start":{"line":811,"column":4},"end":{"line":811,"column":59}},"174":{"start":{"line":814,"column":2},"end":{"line":820,"column":3}},"175":{"start":{"line":815,"column":4},"end":{"line":819,"column":5}},"176":{"start":{"line":816,"column":6},"end":{"line":816,"column":39}},"177":{"start":{"line":818,"column":6},"end":{"line":818,"column":36}},"178":{"start":{"line":822,"column":2},"end":{"line":826,"column":3}},"179":{"start":{"line":823,"column":4},"end":{"line":823,"column":221}},"180":{"start":{"line":824,"column":4},"end":{"line":824,"column":20}},"181":{"start":{"line":825,"column":4},"end":{"line":825,"column":33}},"182":{"start":{"line":828,"column":2},"end":{"line":830,"column":3}},"183":{"start":{"line":829,"column":4},"end":{"line":829,"column":32}},"184":{"start":{"line":834,"column":2},"end":{"line":841,"column":3}},"185":{"start":{"line":836,"column":4},"end":{"line":836,"column":30}},"186":{"start":{"line":837,"column":9},"end":{"line":841,"column":3}},"187":{"start":{"line":840,"column":4},"end":{"line":840,"column":35}},"188":{"start":{"line":843,"column":2},"end":{"line":858,"column":5}},"189":{"start":{"line":847,"column":4},"end":{"line":847,"column":66}},"190":{"start":{"line":848,"column":4},"end":{"line":853,"column":64}},"191":{"start":{"line":849,"column":6},"end":{"line":852,"column":9}},"192":{"start":{"line":850,"column":8},"end":{"line":850,"column":40}},"193":{"start":{"line":850,"column":33},"end":{"line":850,"column":40}},"194":{"start":{"line":851,"column":8},"end":{"line":851,"column":68}},"195":{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},"196":{"start":{"line":856,"column":6},"end":{"line":856,"column":34}},"197":{"start":{"line":872,"column":0},"end":{"line":898,"column":2}},"198":{"start":{"line":873,"column":2},"end":{"line":873,"column":12}},"199":{"start":{"line":876,"column":2},"end":{"line":876,"column":95}},"200":{"start":{"line":878,"column":2},"end":{"line":880,"column":3}},"201":{"start":{"line":879,"column":4},"end":{"line":879,"column":65}},"202":{"start":{"line":881,"column":2},"end":{"line":883,"column":3}},"203":{"start":{"line":882,"column":4},"end":{"line":882,"column":59}},"204":{"start":{"line":886,"column":2},"end":{"line":886,"column":21}},"205":{"start":{"line":887,"column":2},"end":{"line":887,"column":23}},"206":{"start":{"line":888,"column":2},"end":{"line":888,"column":23}},"207":{"start":{"line":891,"column":2},"end":{"line":895,"column":18}},"208":{"start":{"line":894,"column":6},"end":{"line":894,"column":70}},"209":{"start":{"line":897,"column":2},"end":{"line":897,"column":36}},"210":{"start":{"line":906,"column":0},"end":{"line":908,"column":2}},"211":{"start":{"line":907,"column":2},"end":{"line":907,"column":48}},"212":{"start":{"line":922,"column":0},"end":{"line":924,"column":2}},"213":{"start":{"line":923,"column":2},"end":{"line":923,"column":64}},"214":{"start":{"line":935,"column":0},"end":{"line":937,"column":2}},"215":{"start":{"line":936,"column":2},"end":{"line":936,"column":58}},"216":{"start":{"line":949,"column":0},"end":{"line":951,"column":2}},"217":{"start":{"line":950,"column":2},"end":{"line":950,"column":62}},"218":{"start":{"line":962,"column":0},"end":{"line":964,"column":2}},"219":{"start":{"line":963,"column":2},"end":{"line":963,"column":58}},"220":{"start":{"line":978,"column":0},"end":{"line":1021,"column":2}},"221":{"start":{"line":979,"column":2},"end":{"line":979,"column":18}},"222":{"start":{"line":981,"column":2},"end":{"line":981,"column":35}},"223":{"start":{"line":982,"column":2},"end":{"line":982,"column":71}},"224":{"start":{"line":983,"column":2},"end":{"line":983,"column":76}},"225":{"start":{"line":984,"column":2},"end":{"line":984,"column":71}},"226":{"start":{"line":986,"column":2},"end":{"line":990,"column":3}},"227":{"start":{"line":987,"column":4},"end":{"line":989,"column":5}},"228":{"start":{"line":988,"column":6},"end":{"line":988,"column":87}},"229":{"start":{"line":992,"column":2},"end":{"line":1020,"column":18}},"230":{"start":{"line":993,"column":4},"end":{"line":995,"column":5}},"231":{"start":{"line":994,"column":6},"end":{"line":994,"column":54}},"232":{"start":{"line":997,"column":4},"end":{"line":999,"column":5}},"233":{"start":{"line":998,"column":6},"end":{"line":998,"column":32}},"234":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":20}},"235":{"start":{"line":1005,"column":4},"end":{"line":1011,"column":7}},"236":{"start":{"line":1006,"column":6},"end":{"line":1010,"column":7}},"237":{"start":{"line":1007,"column":8},"end":{"line":1007,"column":27}},"238":{"start":{"line":1013,"column":4},"end":{"line":1015,"column":7}},"239":{"start":{"line":1014,"column":6},"end":{"line":1014,"column":33}},"240":{"start":{"line":1017,"column":4},"end":{"line":1019,"column":5}},"241":{"start":{"line":1018,"column":6},"end":{"line":1018,"column":53}},"242":{"start":{"line":1034,"column":0},"end":{"line":1052,"column":2}},"243":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":18}},"244":{"start":{"line":1037,"column":2},"end":{"line":1041,"column":25}},"245":{"start":{"line":1038,"column":4},"end":{"line":1040,"column":5}},"246":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":25}},"247":{"start":{"line":1043,"column":2},"end":{"line":1045,"column":4}},"248":{"start":{"line":1044,"column":4},"end":{"line":1044,"column":35}},"249":{"start":{"line":1047,"column":2},"end":{"line":1051,"column":3}},"250":{"start":{"line":1048,"column":4},"end":{"line":1048,"column":47}},"251":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":46}},"252":{"start":{"line":1062,"column":0},"end":{"line":1074,"column":2}},"253":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":18}},"254":{"start":{"line":1065,"column":2},"end":{"line":1069,"column":25}},"255":{"start":{"line":1066,"column":4},"end":{"line":1068,"column":5}},"256":{"start":{"line":1067,"column":6},"end":{"line":1067,"column":25}},"257":{"start":{"line":1071,"column":2},"end":{"line":1073,"column":5}},"258":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":31}},"259":{"start":{"line":1084,"column":0},"end":{"line":1086,"column":2}},"260":{"start":{"line":1085,"column":2},"end":{"line":1085,"column":106}},"261":{"start":{"line":1088,"column":0},"end":{"line":1090,"column":2}},"262":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":59}},"263":{"start":{"line":1092,"column":0},"end":{"line":1092,"column":64}},"264":{"start":{"line":1117,"column":0},"end":{"line":1119,"column":2}},"265":{"start":{"line":1118,"column":2},"end":{"line":1118,"column":57}},"266":{"start":{"line":1130,"column":0},"end":{"line":1132,"column":2}},"267":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":28}},"268":{"start":{"line":1144,"column":0},"end":{"line":1146,"column":2}},"269":{"start":{"line":1145,"column":2},"end":{"line":1145,"column":35}},"270":{"start":{"line":1157,"column":0},"end":{"line":1159,"column":2}},"271":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":32}},"272":{"start":{"line":1170,"column":0},"end":{"line":1172,"column":2}},"273":{"start":{"line":1171,"column":2},"end":{"line":1171,"column":46}},"274":{"start":{"line":1183,"column":0},"end":{"line":1185,"column":2}},"275":{"start":{"line":1184,"column":2},"end":{"line":1184,"column":45}},"276":{"start":{"line":1196,"column":0},"end":{"line":1198,"column":2}},"277":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":49}},"278":{"start":{"line":1218,"column":0},"end":{"line":1220,"column":2}},"279":{"start":{"line":1219,"column":2},"end":{"line":1219,"column":50}},"280":{"start":{"line":1272,"column":0},"end":{"line":1317,"column":2}},"281":{"start":{"line":1273,"column":2},"end":{"line":1276,"column":3}},"282":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":27}},"283":{"start":{"line":1275,"column":4},"end":{"line":1275,"column":24}},"284":{"start":{"line":1279,"column":2},"end":{"line":1280,"column":25}},"285":{"start":{"line":1282,"column":2},"end":{"line":1316,"column":3}},"286":{"start":{"line":1283,"column":4},"end":{"line":1307,"column":6}},"287":{"start":{"line":1284,"column":6},"end":{"line":1306,"column":9}},"288":{"start":{"line":1285,"column":8},"end":{"line":1287,"column":9}},"289":{"start":{"line":1286,"column":10},"end":{"line":1286,"column":47}},"290":{"start":{"line":1289,"column":8},"end":{"line":1289,"column":47}},"291":{"start":{"line":1290,"column":8},"end":{"line":1290,"column":140}},"292":{"start":{"line":1290,"column":37},"end":{"line":1290,"column":140}},"293":{"start":{"line":1292,"column":8},"end":{"line":1296,"column":11}},"294":{"start":{"line":1293,"column":10},"end":{"line":1295,"column":13}},"295":{"start":{"line":1294,"column":12},"end":{"line":1294,"column":28}},"296":{"start":{"line":1299,"column":8},"end":{"line":1305,"column":9}},"297":{"start":{"line":1300,"column":10},"end":{"line":1300,"column":22}},"298":{"start":{"line":1302,"column":10},"end":{"line":1304,"column":13}},"299":{"start":{"line":1303,"column":12},"end":{"line":1303,"column":24}},"300":{"start":{"line":1309,"column":4},"end":{"line":1311,"column":5}},"301":{"start":{"line":1310,"column":6},"end":{"line":1310,"column":77}},"302":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":44}},"303":{"start":{"line":1315,"column":4},"end":{"line":1315,"column":64}},"304":{"start":{"line":1319,"column":0},"end":{"line":1346,"column":2}},"305":{"start":{"line":1320,"column":2},"end":{"line":1322,"column":14}},"306":{"start":{"line":1324,"column":2},"end":{"line":1331,"column":3}},"307":{"start":{"line":1325,"column":4},"end":{"line":1325,"column":19}},"308":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":34}},"309":{"start":{"line":1330,"column":4},"end":{"line":1330,"column":27}},"310":{"start":{"line":1333,"column":2},"end":{"line":1345,"column":3}},"311":{"start":{"line":1334,"column":4},"end":{"line":1337,"column":5}},"312":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":120}},"313":{"start":{"line":1336,"column":6},"end":{"line":1336,"column":36}},"314":{"start":{"line":1340,"column":4},"end":{"line":1342,"column":5}},"315":{"start":{"line":1341,"column":6},"end":{"line":1341,"column":60}},"316":{"start":{"line":1344,"column":4},"end":{"line":1344,"column":38}},"317":{"start":{"line":1354,"column":0},"end":{"line":1356,"column":2}},"318":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":33}},"319":{"start":{"line":1358,"column":0},"end":{"line":1370,"column":2}},"320":{"start":{"line":1359,"column":2},"end":{"line":1360,"column":50}},"321":{"start":{"line":1362,"column":2},"end":{"line":1364,"column":3}},"322":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":47}},"323":{"start":{"line":1366,"column":2},"end":{"line":1368,"column":3}},"324":{"start":{"line":1367,"column":4},"end":{"line":1367,"column":62}},"325":{"start":{"line":1369,"column":2},"end":{"line":1369,"column":14}},"326":{"start":{"line":1371,"column":0},"end":{"line":1404,"column":2}},"327":{"start":{"line":1372,"column":3},"end":{"line":1374,"column":3}},"328":{"start":{"line":1373,"column":4},"end":{"line":1373,"column":36}},"329":{"start":{"line":1376,"column":2},"end":{"line":1376,"column":40}},"330":{"start":{"line":1376,"column":23},"end":{"line":1376,"column":40}},"331":{"start":{"line":1378,"column":2},"end":{"line":1378,"column":58}},"332":{"start":{"line":1380,"column":2},"end":{"line":1388,"column":3}},"333":{"start":{"line":1381,"column":4},"end":{"line":1387,"column":5}},"334":{"start":{"line":1386,"column":6},"end":{"line":1386,"column":60}},"335":{"start":{"line":1390,"column":2},"end":{"line":1401,"column":3}},"336":{"start":{"line":1392,"column":4},"end":{"line":1396,"column":5}},"337":{"start":{"line":1393,"column":6},"end":{"line":1393,"column":79}},"338":{"start":{"line":1395,"column":6},"end":{"line":1395,"column":47}},"339":{"start":{"line":1398,"column":4},"end":{"line":1400,"column":5}},"340":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":64}},"341":{"start":{"line":1403,"column":2},"end":{"line":1403,"column":19}},"342":{"start":{"line":1407,"column":0},"end":{"line":1407,"column":47}},"343":{"start":{"line":1408,"column":0},"end":{"line":1408,"column":37}},"344":{"start":{"line":1409,"column":0},"end":{"line":1409,"column":35}}},"branchMap":{"1":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"2":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":28}},{"start":{"line":115,"column":32},"end":{"line":115,"column":60}}]},"3":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":9}},{"start":{"line":119,"column":9},"end":{"line":119,"column":9}}]},"4":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":14},"end":{"line":119,"column":36}},{"start":{"line":119,"column":40},"end":{"line":119,"column":68}},{"start":{"line":119,"column":74},"end":{"line":119,"column":96}},{"start":{"line":119,"column":100},"end":{"line":119,"column":128}}]},"5":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":14},"end":{"line":123,"column":22}},{"start":{"line":123,"column":26},"end":{"line":123,"column":28}}]},"6":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"7":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"8":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"9":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":14},"end":{"line":145,"column":21}},{"start":{"line":145,"column":25},"end":{"line":145,"column":27}}]},"10":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":5},"end":{"line":174,"column":12}},{"start":{"line":174,"column":16},"end":{"line":174,"column":18}}]},"11":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"12":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"13":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":39}},{"start":{"line":180,"column":43},"end":{"line":180,"column":77}}]},"14":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"15":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"16":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":7},"end":{"line":191,"column":54}},{"start":{"line":191,"column":60},"end":{"line":191,"column":98}}]},"17":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":21}},{"start":{"line":199,"column":25},"end":{"line":199,"column":42}}]},"18":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":10},"end":{"line":200,"column":21}},{"start":{"line":200,"column":25},"end":{"line":200,"column":42}}]},"19":{"line":214,"type":"switch","locations":[{"start":{"line":215,"column":4},"end":{"line":217,"column":12}},{"start":{"line":218,"column":4},"end":{"line":220,"column":12}},{"start":{"line":221,"column":4},"end":{"line":223,"column":12}},{"start":{"line":224,"column":4},"end":{"line":226,"column":12}},{"start":{"line":227,"column":4},"end":{"line":229,"column":12}},{"start":{"line":230,"column":4},"end":{"line":231,"column":146}}]},"20":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":6}},{"start":{"line":254,"column":6},"end":{"line":254,"column":6}}]},"21":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":24},"end":{"line":500,"column":43}},{"start":{"line":500,"column":47},"end":{"line":500,"column":71}}]},"22":{"line":603,"type":"binary-expr","locations":[{"start":{"line":603,"column":12},"end":{"line":603,"column":19}},{"start":{"line":603,"column":23},"end":{"line":603,"column":25}}]},"23":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":2},"end":{"line":606,"column":2}},{"start":{"line":606,"column":2},"end":{"line":606,"column":2}}]},"24":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":2},"end":{"line":620,"column":2}},{"start":{"line":620,"column":2},"end":{"line":620,"column":2}}]},"25":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":2},"end":{"line":648,"column":2}},{"start":{"line":648,"column":2},"end":{"line":648,"column":2}}]},"26":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":2},"end":{"line":677,"column":2}},{"start":{"line":677,"column":2},"end":{"line":677,"column":2}}]},"27":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"28":{"line":686,"type":"cond-expr","locations":[{"start":{"line":686,"column":45},"end":{"line":686,"column":57}},{"start":{"line":686,"column":60},"end":{"line":686,"column":73}}]},"29":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":4},"end":{"line":687,"column":4}},{"start":{"line":687,"column":4},"end":{"line":687,"column":4}}]},"30":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":2},"end":{"line":741,"column":2}},{"start":{"line":741,"column":2},"end":{"line":741,"column":2}}]},"31":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":2},"end":{"line":750,"column":2}},{"start":{"line":750,"column":2},"end":{"line":750,"column":2}}]},"32":{"line":750,"type":"binary-expr","locations":[{"start":{"line":750,"column":6},"end":{"line":750,"column":22}},{"start":{"line":750,"column":26},"end":{"line":750,"column":40}}]},"33":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":2},"end":{"line":755,"column":2}},{"start":{"line":755,"column":2},"end":{"line":755,"column":2}}]},"34":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":6},"end":{"line":755,"column":19}},{"start":{"line":755,"column":23},"end":{"line":755,"column":41}},{"start":{"line":755,"column":45},"end":{"line":755,"column":94}}]},"35":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":2},"end":{"line":759,"column":2}},{"start":{"line":759,"column":2},"end":{"line":759,"column":2}}]},"36":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":4},"end":{"line":760,"column":4}},{"start":{"line":760,"column":4},"end":{"line":760,"column":4}}]},"37":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":6},"end":{"line":761,"column":6}},{"start":{"line":761,"column":6},"end":{"line":761,"column":6}}]},"38":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":4},"end":{"line":768,"column":4}},{"start":{"line":768,"column":4},"end":{"line":768,"column":4}}]},"39":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":6},"end":{"line":769,"column":6}},{"start":{"line":769,"column":6},"end":{"line":769,"column":6}}]},"40":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":4},"end":{"line":776,"column":4}},{"start":{"line":776,"column":4},"end":{"line":776,"column":4}}]},"41":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":2},"end":{"line":783,"column":2}},{"start":{"line":783,"column":2},"end":{"line":783,"column":2}}]},"42":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":6},"end":{"line":783,"column":23}},{"start":{"line":783,"column":27},"end":{"line":783,"column":41}}]},"43":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":2},"end":{"line":787,"column":2}},{"start":{"line":787,"column":2},"end":{"line":787,"column":2}}]},"44":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":6},"end":{"line":787,"column":26}},{"start":{"line":787,"column":30},"end":{"line":787,"column":42}}]},"45":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"46":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":4},"end":{"line":791,"column":4}},{"start":{"line":791,"column":4},"end":{"line":791,"column":4}}]},"47":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":2},"end":{"line":799,"column":2}},{"start":{"line":799,"column":2},"end":{"line":799,"column":2}}]},"48":{"line":806,"type":"cond-expr","locations":[{"start":{"line":806,"column":54},"end":{"line":806,"column":74}},{"start":{"line":806,"column":77},"end":{"line":806,"column":88}}]},"49":{"line":807,"type":"cond-expr","locations":[{"start":{"line":807,"column":60},"end":{"line":807,"column":83}},{"start":{"line":807,"column":86},"end":{"line":807,"column":95}}]},"50":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":2},"end":{"line":810,"column":2}},{"start":{"line":810,"column":2},"end":{"line":810,"column":2}}]},"51":{"line":810,"type":"binary-expr","locations":[{"start":{"line":810,"column":6},"end":{"line":810,"column":39}},{"start":{"line":810,"column":43},"end":{"line":810,"column":56}}]},"52":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":2},"end":{"line":814,"column":2}},{"start":{"line":814,"column":2},"end":{"line":814,"column":2}}]},"53":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":4},"end":{"line":815,"column":4}},{"start":{"line":815,"column":4},"end":{"line":815,"column":4}}]},"54":{"line":815,"type":"binary-expr","locations":[{"start":{"line":815,"column":8},"end":{"line":815,"column":21}},{"start":{"line":815,"column":25},"end":{"line":815,"column":37}},{"start":{"line":815,"column":41},"end":{"line":815,"column":54}}]},"55":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":2},"end":{"line":822,"column":2}},{"start":{"line":822,"column":2},"end":{"line":822,"column":2}}]},"56":{"line":822,"type":"binary-expr","locations":[{"start":{"line":822,"column":6},"end":{"line":822,"column":25}},{"start":{"line":822,"column":29},"end":{"line":822,"column":57}}]},"57":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":2},"end":{"line":828,"column":2}},{"start":{"line":828,"column":2},"end":{"line":828,"column":2}}]},"58":{"line":834,"type":"if","locations":[{"start":{"line":834,"column":2},"end":{"line":834,"column":2}},{"start":{"line":834,"column":2},"end":{"line":834,"column":2}}]},"59":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":6},"end":{"line":834,"column":39}},{"start":{"line":834,"column":43},"end":{"line":834,"column":71}},{"start":{"line":834,"column":75},"end":{"line":834,"column":121}},{"start":{"line":835,"column":4},"end":{"line":835,"column":40}}]},"60":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":9},"end":{"line":837,"column":9}},{"start":{"line":837,"column":9},"end":{"line":837,"column":9}}]},"61":{"line":844,"type":"cond-expr","locations":[{"start":{"line":844,"column":26},"end":{"line":844,"column":56}},{"start":{"line":844,"column":59},"end":{"line":844,"column":104}}]},"62":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":8},"end":{"line":850,"column":8}},{"start":{"line":850,"column":8},"end":{"line":850,"column":8}}]},"63":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":42},"end":{"line":853,"column":55}},{"start":{"line":853,"column":59},"end":{"line":853,"column":61}}]},"64":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":4},"end":{"line":855,"column":4}},{"start":{"line":855,"column":4},"end":{"line":855,"column":4}}]},"65":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":49},"end":{"line":876,"column":76}},{"start":{"line":876,"column":80},"end":{"line":876,"column":87}},{"start":{"line":876,"column":91},"end":{"line":876,"column":93}}]},"66":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":2},"end":{"line":878,"column":2}},{"start":{"line":878,"column":2},"end":{"line":878,"column":2}}]},"67":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":2},"end":{"line":881,"column":2}},{"start":{"line":881,"column":2},"end":{"line":881,"column":2}}]},"68":{"line":881,"type":"binary-expr","locations":[{"start":{"line":881,"column":6},"end":{"line":881,"column":26}},{"start":{"line":881,"column":30},"end":{"line":881,"column":75}}]},"69":{"line":894,"type":"cond-expr","locations":[{"start":{"line":894,"column":54},"end":{"line":894,"column":63}},{"start":{"line":894,"column":66},"end":{"line":894,"column":67}}]},"70":{"line":981,"type":"binary-expr","locations":[{"start":{"line":981,"column":12},"end":{"line":981,"column":28}},{"start":{"line":981,"column":32},"end":{"line":981,"column":34}}]},"71":{"line":982,"type":"cond-expr","locations":[{"start":{"line":982,"column":48},"end":{"line":982,"column":52}},{"start":{"line":982,"column":55},"end":{"line":982,"column":70}}]},"72":{"line":983,"type":"cond-expr","locations":[{"start":{"line":983,"column":52},"end":{"line":983,"column":57}},{"start":{"line":983,"column":60},"end":{"line":983,"column":75}}]},"73":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":2},"end":{"line":986,"column":2}},{"start":{"line":986,"column":2},"end":{"line":986,"column":2}}]},"74":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":4},"end":{"line":987,"column":4}},{"start":{"line":987,"column":4},"end":{"line":987,"column":4}}]},"75":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":4},"end":{"line":993,"column":4}},{"start":{"line":993,"column":4},"end":{"line":993,"column":4}}]},"76":{"line":997,"type":"if","locations":[{"start":{"line":997,"column":4},"end":{"line":997,"column":4}},{"start":{"line":997,"column":4},"end":{"line":997,"column":4}}]},"77":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":6},"end":{"line":1006,"column":6}},{"start":{"line":1006,"column":6},"end":{"line":1006,"column":6}}]},"78":{"line":1017,"type":"if","locations":[{"start":{"line":1017,"column":4},"end":{"line":1017,"column":4}},{"start":{"line":1017,"column":4},"end":{"line":1017,"column":4}}]},"79":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}},{"start":{"line":1038,"column":4},"end":{"line":1038,"column":4}}]},"80":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":2},"end":{"line":1047,"column":2}},{"start":{"line":1047,"column":2},"end":{"line":1047,"column":2}}]},"81":{"line":1047,"type":"binary-expr","locations":[{"start":{"line":1047,"column":6},"end":{"line":1047,"column":13}},{"start":{"line":1047,"column":17},"end":{"line":1047,"column":32}}]},"82":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}},{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}}]},"83":{"line":1273,"type":"if","locations":[{"start":{"line":1273,"column":2},"end":{"line":1273,"column":2}},{"start":{"line":1273,"column":2},"end":{"line":1273,"column":2}}]},"84":{"line":1282,"type":"if","locations":[{"start":{"line":1282,"column":2},"end":{"line":1282,"column":2}},{"start":{"line":1282,"column":2},"end":{"line":1282,"column":2}}]},"85":{"line":1285,"type":"if","locations":[{"start":{"line":1285,"column":8},"end":{"line":1285,"column":8}},{"start":{"line":1285,"column":8},"end":{"line":1285,"column":8}}]},"86":{"line":1290,"type":"if","locations":[{"start":{"line":1290,"column":8},"end":{"line":1290,"column":8}},{"start":{"line":1290,"column":8},"end":{"line":1290,"column":8}}]},"87":{"line":1290,"type":"binary-expr","locations":[{"start":{"line":1290,"column":12},"end":{"line":1290,"column":19}},{"start":{"line":1290,"column":23},"end":{"line":1290,"column":35}}]},"88":{"line":1299,"type":"if","locations":[{"start":{"line":1299,"column":8},"end":{"line":1299,"column":8}},{"start":{"line":1299,"column":8},"end":{"line":1299,"column":8}}]},"89":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}},{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}}]},"90":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":2},"end":{"line":1324,"column":2}},{"start":{"line":1324,"column":2},"end":{"line":1324,"column":2}}]},"91":{"line":1324,"type":"binary-expr","locations":[{"start":{"line":1324,"column":6},"end":{"line":1324,"column":10}},{"start":{"line":1324,"column":14},"end":{"line":1324,"column":41}},{"start":{"line":1324,"column":45},"end":{"line":1324,"column":75}}]},"92":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":2},"end":{"line":1333,"column":2}},{"start":{"line":1333,"column":2},"end":{"line":1333,"column":2}}]},"93":{"line":1334,"type":"if","locations":[{"start":{"line":1334,"column":4},"end":{"line":1334,"column":4}},{"start":{"line":1334,"column":4},"end":{"line":1334,"column":4}}]},"94":{"line":1340,"type":"if","locations":[{"start":{"line":1340,"column":4},"end":{"line":1340,"column":4}},{"start":{"line":1340,"column":4},"end":{"line":1340,"column":4}}]},"95":{"line":1340,"type":"binary-expr","locations":[{"start":{"line":1340,"column":9},"end":{"line":1340,"column":31}},{"start":{"line":1340,"column":35},"end":{"line":1340,"column":52}},{"start":{"line":1340,"column":57},"end":{"line":1340,"column":88}}]},"96":{"line":1359,"type":"cond-expr","locations":[{"start":{"line":1359,"column":42},"end":{"line":1359,"column":52}},{"start":{"line":1359,"column":55},"end":{"line":1359,"column":59}}]},"97":{"line":1360,"type":"binary-expr","locations":[{"start":{"line":1360,"column":21},"end":{"line":1360,"column":43}},{"start":{"line":1360,"column":47},"end":{"line":1360,"column":49}}]},"98":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}},{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}}]},"99":{"line":1366,"type":"if","locations":[{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}},{"start":{"line":1366,"column":2},"end":{"line":1366,"column":2}}]},"100":{"line":1366,"type":"binary-expr","locations":[{"start":{"line":1366,"column":6},"end":{"line":1366,"column":37}},{"start":{"line":1366,"column":41},"end":{"line":1366,"column":68}}]},"101":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":3},"end":{"line":1372,"column":3}},{"start":{"line":1372,"column":3},"end":{"line":1372,"column":3}}]},"102":{"line":1376,"type":"if","locations":[{"start":{"line":1376,"column":2},"end":{"line":1376,"column":2}},{"start":{"line":1376,"column":2},"end":{"line":1376,"column":2}}]},"103":{"line":1380,"type":"if","locations":[{"start":{"line":1380,"column":2},"end":{"line":1380,"column":2}},{"start":{"line":1380,"column":2},"end":{"line":1380,"column":2}}]},"104":{"line":1381,"type":"if","locations":[{"start":{"line":1381,"column":4},"end":{"line":1381,"column":4}},{"start":{"line":1381,"column":4},"end":{"line":1381,"column":4}}]},"105":{"line":1381,"type":"binary-expr","locations":[{"start":{"line":1381,"column":8},"end":{"line":1381,"column":52}},{"start":{"line":1382,"column":8},"end":{"line":1382,"column":48}},{"start":{"line":1383,"column":8},"end":{"line":1383,"column":51}},{"start":{"line":1384,"column":8},"end":{"line":1384,"column":51}}]},"106":{"line":1390,"type":"if","locations":[{"start":{"line":1390,"column":2},"end":{"line":1390,"column":2}},{"start":{"line":1390,"column":2},"end":{"line":1390,"column":2}}]},"107":{"line":1392,"type":"if","locations":[{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}},{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}}]},"108":{"line":1398,"type":"if","locations":[{"start":{"line":1398,"column":4},"end":{"line":1398,"column":4}},{"start":{"line":1398,"column":4},"end":{"line":1398,"column":4}}]}},"code":["'use strict';","","var url = require('url')","  , Path = require('path')","  , retry = require('retry-as-promised')","  , Utils = require('./utils')","  , Model = require('./model')","  , DataTypes = require('./data-types')","  , Deferrable = require('./deferrable')","  , ModelManager = require('./model-manager')","  , QueryInterface = require('./query-interface')","  , Transaction = require('./transaction')","  , QueryTypes = require('./query-types')","  , sequelizeErrors = require('./errors')","  , Promise = require('./promise')","  , Hooks = require('./hooks')","  , Instance = require('./instance')","  , Association = require('./associations/index')","  , _ = require('lodash');","","/**"," * This is the main class, the entry point to sequelize. To use it, you just need to import sequelize:"," *"," * ```js"," * var Sequelize = require('sequelize');"," * ```"," *"," * In addition to sequelize, the connection library for the dialect you want to use should also be installed in your project. You don't need to import it however, as sequelize will take care of that."," *"," * @class Sequelize"," */",""," /**"," * Instantiate sequelize with name of database, username and password"," *"," * #### Example usage"," *"," * ```javascript"," * // without password and options"," * var sequelize = new Sequelize('database', 'username')"," *"," * // without options"," * var sequelize = new Sequelize('database', 'username', 'password')"," *"," * // without password / with blank password"," * var sequelize = new Sequelize('database', 'username', null, {})"," *"," * // with password and options"," * var sequelize = new Sequelize('my_database', 'john', 'doe', {})"," *"," * // with uri (see below)"," * var sequelize = new Sequelize('mysql://localhost:3306/database', {})"," * ```"," *"," * @name Sequelize"," * @constructor"," *"," * @param {String}   database The name of the database"," * @param {String}   [username=null] The username which is used to authenticate against the database."," * @param {String}   [password=null] The password which is used to authenticate against the database."," * @param {Object}   [options={}] An object with options."," * @param {String}   [options.host='localhost'] The host of the relational database."," * @param {Integer}  [options.port=] The port of the relational database."," * @param {String}   [options.username=null] The username which is used to authenticate against the database."," * @param {String}   [options.password=null] The password which is used to authenticate against the database."," * @param {String}   [options.database=null] The name of the database"," * @param {String}   [options.dialect='mysql'] The dialect of the database you are connecting to. One of mysql, postgres, sqlite, mariadb and mssql."," * @param {String}   [options.dialectModulePath=null] If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'pg.js' here"," * @param {Object}   [options.dialectOptions] An object of additional options, which are passed directly to the connection library"," * @param {String}   [options.storage] Only used by sqlite. Defaults to ':memory:'"," * @param {String}   [options.protocol='tcp'] The protocol of the relational database."," * @param {Object}   [options.define={}] Default options for model definitions. See sequelize.define for options"," * @param {Object}   [options.query={}] Default options for sequelize.query"," * @param {Object}   [options.set={}] Default options for sequelize.set"," * @param {Object}   [options.sync={}] Default options for sequelize.sync"," * @param {String}   [options.timezone='+00:00'] The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes."," * @param {Function} [options.logging=console.log] A function that gets executed every time Sequelize would log something."," * @param {Boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param {Boolean}  [options.omitNull=false] A flag that defines if null values should be passed to SQL queries or not."," * @param {Boolean}  [options.native=false] A flag that defines if native library shall be used or not. Currently only has an effect for postgres"," * @param {Boolean}  [options.replication=false] Use read / write replication. To enable replication, pass an object, with two properties, read and write. Write should be an object (a single server for handling writes), and read an array of object (several servers to handle reads). Each read/write server can have the following properties: `host`, `port`, `username`, `password`, `database`"," * @param {Object}   [options.pool={}] Should sequelize use a connection pool. Default is true"," * @param {Integer}  [options.pool.maxConnections]"," * @param {Integer}  [options.pool.minConnections]"," * @param {Integer}  [options.pool.maxIdleTime] The maximum time, in milliseconds, that a connection can be idle before being released"," * @param {Function} [options.pool.validateConnection] A function that validates a connection. Called with client. The default function checks that client is an object, and that its state is not disconnected"," * @param {Boolean}  [options.quoteIdentifiers=true] Set to `false` to make table names and attributes case-insensitive on Postgres and skip double quoting of them."," * @param {String}   [options.transactionType='DEFERRED'] Set the default transaction type. See `Sequelize.Transaction.TYPES` for possible options. Sqlite only."," * @param {String}   [options.isolationLevel='REPEATABLE_READ'] Set the default transaction isolation level. See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options."," * @param {Object}   [options.retry] Set of flags that control when a query is automatically retried."," * @param {Array}    [options.retry.match] Only retry a query if the error matches one of these strings."," * @param {Integer}  [options.retry.max] How many times a failing query is automatically retried.  Set to 0 to disable retrying on SQL_BUSY error."," * @param {Boolean}  [options.typeValidation=false] Run built in type validators on insert and update, e.g. validate that arguments passed to integer fields are integer-like.","*/","","/**"," * Instantiate sequelize with an URI"," * @name Sequelize"," * @constructor"," *"," * @param {String} uri A full database URI"," * @param {object} [options={}] See above for possible options","*/","","/**"," * Instantiate sequelize with an options object"," * @name Sequelize"," * @constructor"," *"," * @param {object} [options={}] See above for possible options","*/","var Sequelize = function(database, username, password, options) {","  var config;","","  if (arguments.length === 1 && typeof database === 'object') {","    // new Sequelize({ ... options })","    options = database;","    config = _.pick(options, 'host', 'port', 'database', 'username', 'password');","  } else if ((arguments.length === 1 && typeof database === 'string') || (arguments.length === 2 && typeof username === 'object')) {","    // new Sequelize(URI, { ... options })","","    config = {};","    options = username || {};","","    var urlParts = url.parse(arguments[0]);","","    // SQLite don't have DB in connection url","    if (urlParts.pathname) {","      config.database = urlParts.pathname.replace(/^\\//, '');","    }","","    options.dialect = urlParts.protocol.replace(/:$/, '');","    options.host = urlParts.hostname;","","    if (urlParts.port) {","      options.port = urlParts.port;","    }","","    if (urlParts.auth) {","      config.username = urlParts.auth.split(':')[0];","      config.password = urlParts.auth.split(':')[1];","    }","  } else {","    // new Sequelize(database, username, password, { ... options })","    options = options || {};","    config = {database: database, username: username, password: password};","  }","","  Sequelize.runHooks('beforeInit', config, options);","","  this.options = Utils._.extend({","    dialect: 'mysql',","    dialectModulePath: null,","    host: 'localhost',","    protocol: 'tcp',","    define: {},","    query: {},","    sync: {},","    timezone:'+00:00',","    logging: console.log,","    omitNull: false,","    native: false,","    replication: false,","    ssl: undefined,","    pool: {},","    quoteIdentifiers: true,","    hooks: {},","    retry: {max: 5, match: ['SQLITE_BUSY: database is locked']},","    transactionType: Transaction.TYPES.DEFERRED,","    isolationLevel: Transaction.ISOLATION_LEVELS.REPEATABLE_READ,","    databaseVersion: 0,","    typeValidation: false,","    benchmark: false","  }, options || {});","","  if (this.options.dialect === 'postgresql') {","    this.options.dialect = 'postgres';","  }","","  if (this.options.dialect === 'sqlite' && this.options.timezone !== '+00:00') {","    throw new Error('Setting a custom timezone is not supported by SQLite, dates are always returned as UTC. Please remove the custom timezone parameter.');","  }","","  if (this.options.logging === true) {","    console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log');","    this.options.logging = console.log;","  }","","  this.options.hooks = this.replaceHookAliases(this.options.hooks);","","  if ((['', null, false].indexOf(config.password) > -1) || (typeof config.password === 'undefined')) {","    config.password = null;","  }","","  this.config = {","    database: config.database,","    username: config.username,","    password: config.password,","    host: config.host || this.options.host,","    port: config.port || this.options.port,","    pool: this.options.pool,","    protocol: this.options.protocol,","    native: this.options.native,","    ssl: this.options.ssl,","    replication: this.options.replication,","    dialectModulePath: this.options.dialectModulePath,","    keepDefaultTimezone: this.options.keepDefaultTimezone,","    dialectOptions: this.options.dialectOptions","  };","","  var Dialect;","  // Requiring the dialect in a switch-case to keep the","  // require calls static. (Browserify fix)","  switch (this.getDialect()){","    case 'mariadb':","      Dialect = require('./dialects/mariadb');","      break;","    case 'mssql':","      Dialect = require('./dialects/mssql');","      break;","    case 'mysql':","      Dialect = require('./dialects/mysql');","      break;","    case 'postgres':","      Dialect = require('./dialects/postgres');","      break;","    case 'sqlite':","      Dialect = require('./dialects/sqlite');","      break;","    default:","      throw new Error('The dialect ' + this.getDialect() + ' is not supported. Supported dialects: mariadb, mssql, mysql, postgres, and sqlite.');","  }","  this.dialect = new Dialect(this);","","  this.dialect.QueryGenerator.typeValidation = options.typeValidation;","","  /**","   * Models are stored here under the name given to `sequelize.define`","   * @property models","   */","  this.models = {};","  this.modelManager = new ModelManager(this);","  this.connectionManager = this.dialect.connectionManager;","","  this.importCache = {};","","  this.test = {","    $trackRunningQueries: false,","    $runningQueries: 0,","    trackRunningQueries: function() {","      this.$trackRunningQueries = true;","    },","    verifyNoRunningQueries: function() {","      if (this.$runningQueries > 0) throw new Error('Expected 0 running queries. '+this.$runningQueries+' queries still running');","    }","  };","","  Sequelize.runHooks('afterInit', this);","};","","/**"," * Sequelize version number."," * @property version"," */","Sequelize.version = require('../package.json').version;","","Sequelize.options = {hooks: {}};","","/**"," * A reference to Sequelize constructor from sequelize. Useful for accessing DataTypes, Errors etc."," * @property Sequelize"," * @see {Sequelize}"," */","Sequelize.prototype.Sequelize = Sequelize;","","/**"," * A reference to sequelize utilities. Most users will not need to use these utils directly. However, you might want to use `Sequelize.Utils._`, which is a reference to the lodash library, if you don't already have it imported in your project."," * @property Utils"," */","Sequelize.prototype.Utils = Sequelize.Utils = Utils;","","/**"," * A handy reference to the bluebird Promise class"," * @property Promise"," */","Sequelize.prototype.Promise = Sequelize.Promise = Promise;","","/**"," * Available query types for use with `sequelize.query`"," * @property QueryTypes"," */","Sequelize.prototype.QueryTypes = Sequelize.QueryTypes = QueryTypes;","","/**"," * Exposes the validator.js object, so you can extend it with custom validation functions. The validator is exposed both on the instance, and on the constructor."," * @property Validator"," * @see https://github.com/chriso/validator.js"," */","Sequelize.prototype.Validator = Sequelize.Validator = require('validator');","","Sequelize.prototype.Model = Sequelize.Model = Model;","","/**"," * A reference to the sequelize class holding commonly used data types. The datatypes are used when defining a new model using `sequelize.define`"," * @property DataTypes"," */","Sequelize.DataTypes = DataTypes;","","for (var dataType in DataTypes) {","  Sequelize[dataType] = DataTypes[dataType];","}","","Object.defineProperty(Sequelize.prototype, 'connectorManager', {","  get: function() {","    return this.transactionManager.getConnectorManager();","  }","});","","/**"," * A reference to the sequelize transaction class. Use this to access isolationLevels and types when creating a transaction"," * @property Transaction"," * @see {Transaction}"," * @see {Sequelize#transaction}"," */","Sequelize.prototype.Transaction = Sequelize.Transaction = Transaction;","","/**"," * A reference to the deferrable collection. Use this to access the different deferrable options."," * @property Deferrable"," * @see {Deferrable}"," * @see {Sequelize#transaction}"," */","Sequelize.prototype.Deferrable = Sequelize.Deferrable = Deferrable;","","/**"," * A reference to the sequelize instance class."," * @property Instance"," * @see {Instance}"," */","Sequelize.prototype.Instance = Sequelize.Instance = Instance;","","/**"," * A reference to the sequelize association class."," * @property Association"," * @see {Association}"," */","Sequelize.prototype.Association = Sequelize.Association = Association;","","/**"," * Allow hooks to be defined on Sequelize + on sequelize instance as universal hooks to run on all models"," * and on Sequelize/sequelize methods e.g. Sequelize(), Sequelize#define()"," */","Hooks.applyTo(Sequelize);","","/**"," * A general error class"," * @property Error"," * @see {Errors#BaseError}"," */","Sequelize.prototype.Error = Sequelize.Error =","  sequelizeErrors.BaseError;","","/**"," * Emitted when a validation fails"," * @property ValidationError"," * @see {Errors#ValidationError}"," */","Sequelize.prototype.ValidationError = Sequelize.ValidationError =","  sequelizeErrors.ValidationError;","","/**"," * Describes a validation error on an instance path"," * @property ValidationErrorItem"," * @see {Errors#ValidationErrorItem}"," */","Sequelize.prototype.ValidationErrorItem = Sequelize.ValidationErrorItem =","  sequelizeErrors.ValidationErrorItem;","","/**"," * A base class for all database related errors."," * @see {Errors#DatabaseError}"," */","Sequelize.prototype.DatabaseError = Sequelize.DatabaseError =","  sequelizeErrors.DatabaseError;","","/**"," * Thrown when a database query times out because of a deadlock"," * @see {Errors#TimeoutError}"," */","Sequelize.prototype.TimeoutError = Sequelize.TimeoutError =","  sequelizeErrors.TimeoutError;","","/**"," * Thrown when a unique constraint is violated in the database"," * @see {Errors#UniqueConstraintError}"," */","Sequelize.prototype.UniqueConstraintError = Sequelize.UniqueConstraintError =","  sequelizeErrors.UniqueConstraintError;","","/**"," * Thrown when an exclusion constraint is violated in the database"," * @see {Errors#ExclusionConstraintError}"," */","Sequelize.prototype.ExclusionConstraintError = Sequelize.ExclusionConstraintError =","  sequelizeErrors.ExclusionConstraintError;","","/**"," * Thrown when a foreign key constraint is violated in the database"," * @see {Errors#ForeignKeyConstraintError}"," */","Sequelize.prototype.ForeignKeyConstraintError = Sequelize.ForeignKeyConstraintError =","  sequelizeErrors.ForeignKeyConstraintError;","","/**"," * A base class for all connection related errors."," * @see {Errors#ConnectionError}"," */","Sequelize.prototype.ConnectionError = Sequelize.ConnectionError =","  sequelizeErrors.ConnectionError;","","/**"," * Thrown when a connection to a database is refused"," * @see {Errors#ConnectionRefusedError}"," */","Sequelize.prototype.ConnectionRefusedError = Sequelize.ConnectionRefusedError =","  sequelizeErrors.ConnectionRefusedError;","","/**"," * Thrown when a connection to a database is refused due to insufficient access"," * @see {Errors#AccessDeniedError}"," */","Sequelize.prototype.AccessDeniedError = Sequelize.AccessDeniedError =","  sequelizeErrors.AccessDeniedError;","","/**"," * Thrown when a connection to a database has a hostname that was not found"," * @see {Errors#HostNotFoundError}"," */","Sequelize.prototype.HostNotFoundError = Sequelize.HostNotFoundError =","  sequelizeErrors.HostNotFoundError;","","/**"," * Thrown when a connection to a database has a hostname that was not reachable"," * @see {Errors#HostNotReachableError}"," */","Sequelize.prototype.HostNotReachableError = Sequelize.HostNotReachableError =","  sequelizeErrors.HostNotReachableError;","","/**"," * Thrown when a connection to a database has invalid values for any of the connection parameters"," * @see {Errors#InvalidConnectionError}"," */","Sequelize.prototype.InvalidConnectionError = Sequelize.InvalidConnectionError =","  sequelizeErrors.InvalidConnectionError;","","/**"," * Thrown when a connection to a database times out"," * @see {Errors#ConnectionTimedOutError}"," */","Sequelize.prototype.ConnectionTimedOutError = Sequelize.ConnectionTimedOutError =","  sequelizeErrors.ConnectionTimedOutError;","","/**"," * Thrown when a some problem occurred with Instance methods (see message for details)"," * @see {Errors#InstanceError}"," */","Sequelize.prototype.InstanceError = Sequelize.InstanceError =","  sequelizeErrors.InstanceError;","","/**","  * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)","  * @see {Errors#RecordNotFoundError}","  */","Sequelize.prototype.EmptyResultError = Sequelize.EmptyResultError =","  sequelizeErrors.EmptyResultError;","","","Sequelize.prototype.refreshTypes = function () {","  this.connectionManager.refreshTypeParser(DataTypes);","};","","/**"," * Returns the specified dialect."," *"," * @return {String} The specified dialect."," */","Sequelize.prototype.getDialect = function() {","  return this.options.dialect;","};","","/**"," * Returns an instance of QueryInterface.",""," * @method getQueryInterface"," * @return {QueryInterface} An instance (singleton) of QueryInterface."," *"," * @see {QueryInterface}"," */","Sequelize.prototype.getQueryInterface = function() {","  this.queryInterface = this.queryInterface || new QueryInterface(this);","  return this.queryInterface;","};","","/**"," * Define a new model, representing a table in the DB."," *"," * The table columns are define by the hash that is given as the second argument. Each attribute of the hash represents a column. A short table definition might look like this:"," *"," * ```js"," * sequelize.define('modelName', {"," *     columnA: {"," *         type: Sequelize.BOOLEAN,"," *         validate: {"," *           is: [\"[a-z]\",'i'],        // will only allow letters"," *           max: 23,                  // only allow values <= 23"," *           isIn: {"," *             args: [['en', 'zh']],"," *             msg: \"Must be English or Chinese\""," *           }"," *         },"," *         field: 'column_a'"," *         // Other attributes here"," *     },"," *     columnB: Sequelize.STRING,"," *     columnC: 'MY VERY OWN COLUMN TYPE'"," * })"," *"," * sequelize.models.modelName // The model will now be available in models under the name given to define"," * ```"," *"," *"," * As shown above, column definitions can be either strings, a reference to one of the datatypes that are predefined on the Sequelize constructor, or an object that allows you to specify both the type of the column, and other attributes such as default values, foreign key constraints and custom setters and getters."," *"," * For a list of possible data types, see http://docs.sequelizejs.com/en/latest/docs/models-definition/#data-types"," *"," * For more about getters and setters, see http://docs.sequelizejs.com/en/latest/docs/models-definition/#getters-setters"," *"," * For more about instance and class methods, see http://docs.sequelizejs.com/en/latest/docs/models-definition/#expansion-of-models"," *"," * For more about validation, see http://docs.sequelizejs.com/en/latest/docs/models-definition/#validations"," *"," * @see {DataTypes}"," * @see {Hooks}"," * @param {String}                  modelName The name of the model. The model will be stored in `sequelize.models` under this name"," * @param {Object}                  attributes An object, where each attribute is a column of the table. Each column can be either a DataType, a string or a type-description object, with the properties described below:"," * @param {String|DataType|Object}  attributes.column The description of a database column"," * @param {String|DataType}         attributes.column.type A string or a data type"," * @param {Boolean}                 [attributes.column.allowNull=true] If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved."," * @param {Any}                     [attributes.column.defaultValue=null] A literal default value, a JavaScript function, or an SQL function (see `sequelize.fn`)"," * @param {String|Boolean}          [attributes.column.unique=false] If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index"," * @param {Boolean}                 [attributes.column.primaryKey=false]"," * @param {String}                  [attributes.column.field=null] If set, sequelize will map the attribute name to a different name in the database"," * @param {Boolean}                 [attributes.column.autoIncrement=false]"," * @param {String}                  [attributes.column.comment=null]"," * @param {String|Model}            [attributes.column.references=null] An object with reference configurations"," * @param {String|Model}            [attributes.column.references.model] If this column references another table, provide it here as a Model, or a string"," * @param {String}                  [attributes.column.references.key='id'] The column of the foreign table that this column references"," * @param {String}                  [attributes.column.onUpdate] What should happen when the referenced key is updated. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION"," * @param {String}                  [attributes.column.onDelete] What should happen when the referenced key is deleted. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION"," * @param {Function}                [attributes.column.get] Provide a custom getter for this column. Use `this.getDataValue(String)` to manipulate the underlying values."," * @param {Function}                [attributes.column.set] Provide a custom setter for this column. Use `this.setDataValue(String, Value)` to manipulate the underlying values."," * @param {Object}                  [attributes.validate] An object of validations to execute for this column every time the model is saved. Can be either the name of a validation provided by validator.js, a validation function provided by extending validator.js (see the `DAOValidator` property for more details), or a custom validation function. Custom validation functions are called with the value of the field, and can possibly take a second callback argument, to signal that they are asynchronous. If the validator is sync, it should throw in the case of a failed validation, it it is async, the callback should be called with the error text.",""," * @param {Object}                  [options] These options are merged with the default define options provided to the Sequelize constructor"," * @param {Object}                  [options.defaultScope={}] Define the default search scope to use for this model. Scopes have the same form as the options passed to find / findAll"," * @param {Object}                  [options.scopes] More scopes, defined in the same way as defaultScope above. See `Model.scope` for more information about how scopes are defined, and what you can do with them"," * @param {Boolean}                 [options.omitNull] Don't persist null values. This means that all columns with null values will not be saved"," * @param {Boolean}                 [options.timestamps=true] Adds createdAt and updatedAt timestamps to the model."," * @param {Boolean}                 [options.paranoid=false] Calling `destroy` will not delete the model, but instead set a `deletedAt` timestamp if this is true. Needs `timestamps=true` to work"," * @param {Boolean}                 [options.underscored=false] Converts all camelCased columns to underscored if true"," * @param {Boolean}                 [options.underscoredAll=false] Converts camelCased model names to underscored table names if true"," * @param {Boolean}                 [options.freezeTableName=false] If freezeTableName is true, sequelize will not try to alter the DAO name to get the table name. Otherwise, the model name will be pluralized"," * @param {Object}                  [options.name] An object with two attributes, `singular` and `plural`, which are used when this model is associated to others."," * @param {String}                  [options.name.singular=inflection.singularize(modelName)]"," * @param {String}                  [options.name.plural=inflection.pluralize(modelName)]"," * @param {Array<Object>}           [options.indexes]"," * @param {String}                  [options.indexes[].name] The name of the index. Defaults to model name + _ + fields concatenated"," * @param {String}                  [options.indexes[].type] Index type. Only used by mysql. One of `UNIQUE`, `FULLTEXT` and `SPATIAL`"," * @param {String}                  [options.indexes[].method] The method to create the index by (`USING` statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN."," * @param {Boolean}                 [options.indexes[].unique=false] Should the index by unique? Can also be triggered by setting type to `UNIQUE`"," * @param {Boolean}                 [options.indexes[].concurrently=false] PostgreSQL will build the index without taking any write locks. Postgres only"," * @param {Array<String|Object>}    [options.indexes[].fields] An array of the fields to index. Each field can either be a string containing the name of the field, a sequelize object (e.g `sequelize.fn`), or an object with the following attributes: `attribute` (field name), `length` (create a prefix index of length chars), `order` (the direction the column should be sorted in), `collate` (the collation (sort order) for the column)"," * @param {String|Boolean}          [options.createdAt] Override the name of the createdAt column if a string is provided, or disable it if false. Timestamps must be true. Not affected by underscored setting."," * @param {String|Boolean}          [options.updatedAt] Override the name of the updatedAt column if a string is provided, or disable it if false. Timestamps must be true. Not affected by underscored setting."," * @param {String|Boolean}          [options.deletedAt] Override the name of the deletedAt column if a string is provided, or disable it if false. Timestamps must be true. Not affected by underscored setting."," * @param {String}                  [options.tableName] Defaults to pluralized model name, unless freezeTableName is true, in which case it uses model name verbatim"," * @param {Object}                  [options.getterMethods] Provide getter functions that work like those defined per column. If you provide a getter method with the same name as a column, it will be used to access the value of that column. If you provide a name that does not match a column, this function will act as a virtual getter, that can fetch multiple other values"," * @param {Object}                  [options.setterMethods] Provide setter functions that work like those defined per column. If you provide a setter method with the same name as a column, it will be used to update the value of that column. If you provide a name that does not match a column, this function will act as a virtual setter, that can act on and set other values, but will not be persisted"," * @param {Object}                  [options.instanceMethods] Provide functions that are added to each instance (DAO). If you override methods provided by sequelize, you can access the original method using `this.constructor.super_.prototype`, e.g. `this.constructor.super_.prototype.toJSON.apply(this, arguments)`"," * @param {Object}                  [options.classMethods] Provide functions that are added to the model (Model). If you override methods provided by sequelize, you can access the original method using `this.constructor.prototype`, e.g. `this.constructor.prototype.find.apply(this, arguments)`"," * @param {String}                  [options.schema='public']"," * @param {String}                  [options.engine]"," * @param {String}                  [options.charset]"," * @param {String}                  [options.comment]"," * @param {String}                  [options.collate]"," * @param {String}                  [options.initialAutoIncrement] Set the initial AUTO_INCREMENT value for the table in MySQL."," * @param {Object}                  [options.hooks] An object of hook function that are called before and after certain lifecycle events. The possible hooks are: beforeValidate, afterValidate, validationFailed, beforeBulkCreate, beforeBulkDestroy, beforeBulkUpdate, beforeCreate, beforeDestroy, beforeUpdate, afterCreate, afterDestroy, afterUpdate, afterBulkCreate, afterBulkDestory and afterBulkUpdate. See Hooks for more information about hook functions and their signatures. Each property can either be a function, or an array of functions."," * @param {Object}                  [options.validate] An object of model wide validations. Validations have access to all model values via `this`. If the validator function takes an argument, it is assumed to be async, and is called with a callback that accepts an optional error."," *"," * @return {Model}"," */","Sequelize.prototype.define = function(modelName, attributes, options) { // testhint options:none","  options = options || {};","  var globalOptions = this.options;","","  if (globalOptions.define) {","    options = Utils.merge(_.cloneDeep(globalOptions.define), options);","  }","","  options = Utils.merge({","    name: {","      plural: Utils.inflection.pluralize(modelName),","      singular: Utils.inflection.singularize(modelName)","    },","    indexes: [],","    omitNul: globalOptions.omitNull","  }, options);","","  // if you call \"define\" multiple times for the same modelName, do not clutter the factory","  if (this.isDefined(modelName)) {","    this.modelManager.removeModel(this.modelManager.getModel(modelName));","  }","","  options.sequelize = this;","","  options.modelName = modelName;","  this.runHooks('beforeDefine', attributes, options);","  modelName = options.modelName;","  delete options.modelName;","","  var model = new Model(modelName, attributes, options);","  model = model.init(this.modelManager);","  this.modelManager.addModel(model);","","  this.runHooks('afterDefine', model);","","  return model;","};","","/**"," * Fetch a Model which is already defined"," *"," * @param {String} modelName The name of a model defined with Sequelize.define"," * @throws Will throw an error if the model is not defined (that is, if sequelize#isDefined returns false)"," * @return {Model}"," */","Sequelize.prototype.model = function(modelName) {","  if (!this.isDefined(modelName)) {","    throw new Error(modelName + ' has not been defined');","  }","","  return this.modelManager.getModel(modelName);","};","","/**"," * Checks whether a model with the given name is defined"," *"," * @param {String} modelName The name of a model defined with Sequelize.define"," * @return {Boolean}"," */","Sequelize.prototype.isDefined = function(modelName) {","  var models = this.modelManager.models;","  return (models.filter(function(model) { return model.name === modelName; }).length !== 0);","};","","/**"," * Imports a model defined in another file"," *"," * Imported models are cached, so multiple calls to import with the same path will not load the file multiple times"," *"," * See https://github.com/sequelize/express-example for a short example of how to define your models in separate files so that they can be imported by sequelize.import"," * @param {String} path The path to the file that holds the model you want to import. If the part is relative, it will be resolved relatively to the calling file"," * @return {Model}"," */","Sequelize.prototype.import = function(path) {","  // is it a relative path?","  if(Path.normalize(path) !== Path.resolve(path)){","    // make path relative to the caller","    var callerFilename = Utils.stack()[1].getFileName()","      , callerPath = Path.dirname(callerFilename);","","    path = Path.resolve(callerPath, path);","  }","","  if (!this.importCache[path]) {","    var defineCall = (arguments.length > 1 ? arguments[1] : require(path));","    if (typeof defineCall === 'object') {","      // Babel/ES6 module compatability","      defineCall = defineCall.default;","    }","    this.importCache[path] = defineCall(this, DataTypes);","  }","","  return this.importCache[path];","};","","/**"," * Execute a query on the DB, with the possibility to bypass all the sequelize goodness."," *"," * By default, the function will return two arguments: an array of results, and a metadata object, containing number of affected rows etc. Use `.spread` to access the results."," *"," * If you are running a type of query where you don't need the metadata, for example a `SELECT` query, you can pass in a query type to make sequelize format the results:"," *"," * ```js"," * sequelize.query('SELECT...').spread(function (results, metadata) {"," *   // Raw query - use spread"," * });"," *"," * sequelize.query('SELECT...', { type: sequelize.QueryTypes.SELECT }).then(function (results) {"," *   // SELECT query - use then"," * })"," * ```"," *"," * @method query"," * @param {String}          sql"," * @param {Object}          [options={}] Query options."," * @param {Boolean}         [options.raw] If true, sequelize will not try to format the results of the query, or build an instance of a model from the result"," * @param {Transaction}     [options.transaction=null] The transaction that the query should be executed under"," * @param {String}          [options.type='RAW'] The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but `Sequelize.QueryTypes` is provided as convenience shortcuts."," * @param {Boolean}         [options.nest=false] If true, transforms objects with `.` separated property names into nested objects using [dottie.js](https://github.com/mickhansen/dottie.js). For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When `nest` is true, the query type is assumed to be `'SELECT'`, unless otherwise specified"," * @param {Boolean}         [options.plain=false] Sets the query type to `SELECT` and return a single row"," * @param {Object|Array}    [options.replacements] Either an object of named parameter replacements in the format `:param` or an array of unnamed replacements to replace `?` in your SQL."," * @param {Object|Array}    [options.bind] Either an object of named bind parameter in the format `$param` or an array of unnamed bind parameter to replace `$1, $2, ...` in your SQL."," * @param {Boolean}         [options.useMaster=false] Force the query to use the write pool, regardless of the query type."," * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Instance}        [options.instance] A sequelize instance used to build the return instance"," * @param {Model}           [options.model] A sequelize model used to build the returned model instances (used to be called callee)"," * @param {Object}          [options.retry] Set of flags that control when a query is automatically retried."," * @param {Array}           [options.retry.match] Only retry a query if the error matches one of these strings."," * @param {Integer}         [options.retry.max] How many times a failing query is automatically retried."," * @param {String}          [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," * @param {Boolean}         [options.supportsSearchPath] If false do not prepend the query with the search_path (Postgres only)"," * @param {Object}          [options.mapToModel=false] Map returned fields to model's fields if `options.model` or `options.instance` is present. Mapping will occur before building the model instance."," * @param {Object}          [options.fieldMap] Map returned fields to arbitrary names for `SELECT` query type."," *"," * @return {Promise}"," *"," * @see {Model#build} for more information about instance option."," */","Sequelize.prototype.query = function(sql, options) {","  if (arguments.length > 2) {","    // TODO: Remove this note in the next major version (4.0)","    throw new Error('Sequelize.query was refactored to only use the parameters `sql` and `options`. Please read the changelog about BC.');","  }","","  var self = this;","","  options = _.assign({}, this.options.query, options);","","  if (options.instance && !options.model) {","    options.model = options.instance.Model;","  }","","  // Map raw fields to model field names using the `fieldAttributeMap`","  if (options.model && options.mapToModel && !Utils._.isEmpty(options.model.fieldAttributeMap)) {","    options.fieldMap =  options.model.fieldAttributeMap;","  }","","  if (typeof sql === 'object') {","    if (sql.values !== undefined) {","      if (options.replacements !== undefined) {","        throw new Error('Both `sql.values` and `options.replacements` cannot be set at the same time');","      }","","      options.replacements = sql.values;","    }","","    if (sql.bind !== undefined) {","      if (options.bind !== undefined) {","        throw new Error('Both `sql.bind` and `options.bind` cannot be set at the same time');","      }","","      options.bind = sql.bind;","    }","","    if (sql.query !== undefined) {","      sql = sql.query;","    }","  }","","  sql = sql.trim();","","  if (!options.instance && !options.model) {","    options.raw = true;","  }","","  if (options.replacements && options.bind) {","    throw new Error('Both `replacements` and `bind` cannot be set at the same time');","  }","  if (options.replacements) {","    if (Array.isArray(options.replacements)) {","      sql = Utils.format([sql].concat(options.replacements), this.options.dialect);","    }","    else {","      sql = Utils.formatNamedParameters(sql, options.replacements, this.options.dialect);","    }","  }","  var bindParameters;","  if (options.bind) {","    var bindSql = self.dialect.Query.formatBindParameters(sql, options.bind, this.options.dialect);","    sql = bindSql[0];","    bindParameters = bindSql[1];","  }","","  options = _.defaults(options, {","    logging: this.options.hasOwnProperty('logging') ? this.options.logging : console.log,","    searchPath: this.options.hasOwnProperty('searchPath') ? this.options.searchPath : 'DEFAULT',","  });","","  if (options.transaction === undefined && Sequelize.cls) {","    options.transaction = Sequelize.cls.get('transaction');","  }","","  if (!options.type) {","    if (options.model || options.nest || options.plain) {","      options.type = QueryTypes.SELECT;","    } else {","      options.type = QueryTypes.RAW;","    }","  }","","  if (options.transaction && options.transaction.finished) {","    var error = new Error(options.transaction.finished+' has been called on this transaction('+options.transaction.id+'), you can no longer use it. (The rejected query is attached as the \\'sql\\' property of this error)');","    error.sql = sql;","    return Promise.reject(error);","  }","","  if (this.test.$trackRunningQueries) {","    this.test.$runningQueries++;","  }","","  //if dialect doesn't support search_path or dialect option","  //to prepend searchPath is not true delete the searchPath option","  if (!self.dialect.supports.searchPath || !this.options.dialectOptions || !this.options.dialectOptions.prependSearchPath ||","    options.supportsSearchPath === false) {","    delete options.searchPath;","  } else if (!options.searchPath) {","    //if user wants to always prepend searchPath (dialectOptions.preprendSearchPath = true)","    //then set to DEFAULT if none is provided","    options.searchPath = 'DEFAULT';","  }","","  return Promise.resolve(","    options.transaction ? options.transaction.connection : self.connectionManager.getConnection(options)","  ).then(function (connection) {","","    var query = new self.dialect.Query(connection, self, options);","    return retry(function() {","      return query.run(sql, bindParameters).finally(function() {","        if (options.transaction) return;","        return self.connectionManager.releaseConnection(connection);","      });","    }, Utils._.extend(self.options.retry, options.retry || {}));","  }).finally(function () {","    if (self.test.$trackRunningQueries) {","      self.test.$runningQueries--;","    }","  });","};","","/**"," * Execute a query which would set an environment or user variable. The variables are set per connection, so this function needs a transaction."," * Only works for MySQL."," *"," * @method set"," * @param {Object}        variables Object with multiple variables."," * @param {Object}        options Query options."," * @param {Transaction}   options.transaction The transaction that the query should be executed under"," *"," * @return {Promise}"," */","Sequelize.prototype.set = function( variables, options ) {","  var query;","","  // Prepare options","  options = Utils._.extend({}, this.options.set, typeof options === 'object' && options || {});","","  if (['mysql', 'mariadb'].indexOf(this.options.dialect) === -1) {","    throw new Error('sequelize.set is only supported for mysql');","  }","  if (!options.transaction || !(options.transaction instanceof Transaction) ) {","    throw new TypeError('options.transaction is required');","  }","","  // Override some options, since this isn't a SELECT","  options.raw = true;","  options.plain = true;","  options.type = 'SET';","","  // Generate SQL Query","  query =","    'SET '+","    Utils._.map( variables, function ( v, k ) {","      return '@'+k +' := '+ ( typeof v === 'string' ? '\"'+v+'\"' : v );","    }).join(', ');","","  return this.query(query, options);","};","","/**"," * Escape value."," *"," * @param {String} value"," * @return {String}"," */","Sequelize.prototype.escape = function(value) {","  return this.getQueryInterface().escape(value);","};","","/**"," * Create a new database schema."," *"," * Note,that this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),"," * not a database table. In mysql and sqlite, this command will do nothing."," *"," * @see {Model#schema}"," * @param {String} schema Name of the schema"," * @param {Object} options={}"," * @param {Boolean|function} options.logging A function that logs sql queries, or false for no logging"," * @return {Promise}"," */","Sequelize.prototype.createSchema = function(schema, options) {","  return this.getQueryInterface().createSchema(schema, options);","};","","/**"," * Show all defined schemas"," *"," * Note,that this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),"," * not a database table. In mysql and sqlite, this will show all tables."," * @param {Object} options={}"," * @param {Boolean|function} options.logging A function that logs sql queries, or false for no logging"," * @return {Promise}"," */","Sequelize.prototype.showAllSchemas = function(options) {","  return this.getQueryInterface().showAllSchemas(options);","};","","/**"," * Drop a single schema"," *"," * Note,that this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),"," * not a database table. In mysql and sqlite, this drop a table matching the schema name"," * @param {String} schema Name of the schema"," * @param {Object} options={}"," * @param {Boolean|function} options.logging A function that logs sql queries, or false for no logging"," * @return {Promise}"," */","Sequelize.prototype.dropSchema = function(schema, options) {","  return this.getQueryInterface().dropSchema(schema, options);","};","","/**"," * Drop all schemas"," *"," * Note,that this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),"," * not a database table. In mysql and sqlite, this is the equivalent of drop all tables."," * @param {Object} options={}"," * @param {Boolean|function} options.logging A function that logs sql queries, or false for no logging"," * @return {Promise}"," */","Sequelize.prototype.dropAllSchemas = function(options) {","  return this.getQueryInterface().dropAllSchemas(options);","};","","/**"," * Sync all defined models to the DB."," *"," * @param {Object} [options={}]"," * @param {Boolean} [options.force=false] If force is true, each DAO will do DROP TABLE IF EXISTS ..., before it tries to create its own table"," * @param {RegEx} [options.match] Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code"," * @param {Boolean|function} [options.logging=console.log] A function that logs sql queries, or false for no logging"," * @param {String} [options.schema='public'] The schema that the tables should be created in. This can be overriden for each table in sequelize.define"," * @param  {String} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," * @param {Boolean} [options.hooks=true] If hooks is true then beforeSync, afterSync, beforBulkSync, afterBulkSync hooks will be called"," * @return {Promise}"," */","Sequelize.prototype.sync = function(options) {","  var self = this;","","  options = _.clone(options) || {};","  options.hooks = options.hooks === undefined ? true : !!options.hooks;","  options.logging = options.logging === undefined ? false : options.logging;","  options = Utils._.defaults(options, this.options.sync, this.options);","","  if (options.match) {","    if (!options.match.test(this.config.database)) {","      return Promise.reject(new Error('Database does not match sync match parameter'));","    }","  }","","  return Promise.try(function () {","    if (options.hooks) {","      return self.runHooks('beforeBulkSync', options);","    }","  }).then(function () {","    if (options.force) {","      return self.drop(options);","    }","  }).then(function() {","    var models = [];","","    // Topologically sort by foreign key constraints to give us an appropriate","    // creation order","    self.modelManager.forEachModel(function(model) {","      if (model) {","        models.push(model);","      } else {","        // DB should throw an SQL error if referencing inexistant table","      }","    });","","    return Promise.each(models, function(model) {","      return model.sync(options);","    });","  }).then(function () {","    if (options.hooks) {","      return self.runHooks('afterBulkSync', options);","    }","  }).return(self);","};","","/**"," * Truncate all tables defined through the sequelize models. This is done"," * by calling Model.truncate() on each model."," *"," * @param {object} [options] The options passed to Model.destroy in addition to truncate"," * @param {Boolean|function} [options.transaction]"," * @param {Boolean|function} [options.logging] A function that logs sql queries, or false for no logging"," * @return {Promise}"," *"," * @see {Model#truncate} for more information"," */","Sequelize.prototype.truncate = function(options) {","  var models = [];","","  this.modelManager.forEachModel(function(model) {","    if (model) {","      models.push(model);","    }","  }, { reverse: false });","","  var truncateModel = function(model) {","    return model.truncate(options);","  };","","  if (options && options.cascade) {","    return Promise.each(models, truncateModel);","  } else {","    return Promise.map(models, truncateModel);","  }","};","","/**"," * Drop all tables defined through this sequelize instance. This is done by calling Model.drop on each model"," * @see {Model#drop} for options"," *"," * @param {object} options  The options passed to each call to Model.drop"," * @param {Boolean|function} options.logging A function that logs sql queries, or false for no logging"," * @return {Promise}"," */","Sequelize.prototype.drop = function(options) {","  var models = [];","","  this.modelManager.forEachModel(function(model) {","    if (model) {","      models.push(model);","    }","  }, { reverse: false });","","  return Promise.each(models, function(model) {","    return model.drop(options);","  });","};","","/**"," * Test the connection by trying to authenticate"," *"," * @fires success If authentication was successful"," * @error 'Invalid credentials' if the authentication failed (even if the database did not respond at all...)"," * @alias validate"," * @return {Promise}"," */","Sequelize.prototype.authenticate = function(options) {","  return this.query('SELECT 1+1 AS result', Utils._.assign({ raw: true, plain: true }, options)).return();","};","","Sequelize.prototype.databaseVersion = function(options) {","  return this.getQueryInterface().databaseVersion(options);","};","","Sequelize.prototype.validate = Sequelize.prototype.authenticate;","","/**"," * Creates a object representing a database function. This can be used in search queries, both in where and order parts, and as default values in column definitions."," * If you want to refer to columns in your function, you should use `sequelize.col`, so that the columns are properly interpreted as columns and not a strings."," *"," * Convert a user's username to upper case"," * ```js"," * instance.updateAttributes({"," *   username: self.sequelize.fn('upper', self.sequelize.col('username'))"," * })"," * ```"," *"," * @see {Model#find}"," * @see {Model#findAll}"," * @see {Model#define}"," * @see {Sequelize#col}"," * @method fn"," *"," * @param {String} fn The function you want to call"," * @param {any} args All further arguments will be passed as arguments to the function"," *"," * @since v2.0.0-dev3"," * @return {Sequelize.fn}"," */","Sequelize.fn = Sequelize.prototype.fn = function(fn) {","  return new Utils.fn(fn, Utils.sliceArgs(arguments, 1));","};","","/**"," * Creates a object representing a column in the DB. This is often useful in conjunction with `sequelize.fn`, since raw string arguments to fn will be escaped."," * @see {Sequelize#fn}"," *"," * @method col"," * @param {String} col The name of the column"," * @since v2.0.0-dev3"," * @return {Sequelize.col}"," */","Sequelize.col = Sequelize.prototype.col = function(col) {","  return new Utils.col(col);","};","","","/**"," * Creates a object representing a call to the cast function."," *"," * @method cast"," * @param {any} val The value to cast"," * @param {String} type The type to cast it to"," * @since v2.0.0-dev3"," * @return {Sequelize.cast}"," */","Sequelize.cast = Sequelize.prototype.cast = function(val, type) {","  return new Utils.cast(val, type);","};","","/**"," * Creates a object representing a literal, i.e. something that will not be escaped."," *"," * @method literal"," * @param {any} val"," * @alias asIs"," * @since v2.0.0-dev3"," * @return {Sequelize.literal}"," */","Sequelize.literal = Sequelize.asIs = Sequelize.prototype.asIs = Sequelize.prototype.literal = function(val) {","  return new Utils.literal(val);","};","","/**"," * An AND query"," * @see {Model#find}"," *"," * @method and"," * @param {String|Object} args Each argument will be joined by AND"," * @since v2.0.0-dev3"," * @return {Sequelize.and}"," */","Sequelize.and = Sequelize.prototype.and = function() {","  return { $and: Utils.sliceArgs(arguments) };","};","","/**"," * An OR query"," * @see {Model#find}"," *"," * @method or"," * @param {String|Object} args Each argument will be joined by OR"," * @since v2.0.0-dev3"," * @return {Sequelize.or}"," */","Sequelize.or = Sequelize.prototype.or = function() {","  return { $or: Utils.sliceArgs(arguments) };","};","","/**"," * Creates an object representing nested where conditions for postgres's json data-type."," * @see {Model#find}"," *"," * @method json"," * @param {String|Object} conditions A hash containing strings/numbers or other nested hash, a string using dot notation or a string using postgres json syntax."," * @param {String|Number|Boolean} [value] An optional value to compare against. Produces a string of the form \"<json path> = '<value>'\"."," * @return {Sequelize.json}"," */","Sequelize.json = Sequelize.prototype.json = function (conditionsOrPath, value) {","  return new Utils.json(conditionsOrPath, value);","};","","/*"," * A way of specifying attr = condition."," *"," * The attr can either be an object taken from `Model.rawAttributes` (for example `Model.rawAttributes.id` or `Model.rawAttributes.name`). The"," * attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (`sequelize.fn`, `sequelize.col` etc.)"," *"," * For string attributes, use the regular `{ where: { attr: something }}` syntax. If you don't want your string to be escaped, use `sequelize.literal`."," *"," * @see {Model#find}"," *"," * @param {Object} attr The attribute, which can be either an attribute object from `Model.rawAttributes` or a sequelize object, for example an instance of `sequelize.fn`. For simple string attributes, use the POJO syntax"," * @param {string} [comparator='=']"," * @param {String|Object} logic The condition. Can be both a simply type, or a further condition (`$or`, `$and`, `.literal` etc.)"," * @method where"," * @alias condition"," * @since v2.0.0-dev3"," * @return {Sequelize.where}"," */","Sequelize.where = Sequelize.condition = Sequelize.prototype.condition = Sequelize.prototype.where = function(attr, comparator, logic) {","  return new Utils.where(attr, comparator, logic);","};","","/**"," * Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction"," *"," * ```js"," * sequelize.transaction().then(function (t) {"," *   return User.find(..., { transaction: t}).then(function (user) {"," *     return user.updateAttributes(..., { transaction: t});"," *   })"," *   .then(t.commit.bind(t))"," *   .catch(t.rollback.bind(t));"," * })"," * ```"," *"," * A syntax for automatically committing or rolling back based on the promise chain resolution is also supported:"," *"," * ```js"," * sequelize.transaction(function (t) { // Note that we use a callback rather than a promise.then()"," *   return User.find(..., { transaction: t}).then(function (user) {"," *     return user.updateAttributes(..., { transaction: t});"," *   });"," * }).then(function () {"," *   // Committed"," * }).catch(function (err) {"," *   // Rolled back"," *   console.error(err);"," * });"," * ```"," *"," * If you have [CLS](https://github.com/othiym23/node-continuation-local-storage) enabled, the transaction will automatically be passed to any query that runs within the callback."," * To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:"," *"," * ```js"," * var cls = require('continuation-local-storage'),"," *     ns = cls.createNamespace('....');"," * var Sequelize = require('sequelize');"," * Sequelize.cls = ns;"," * ```"," * Note, that CLS is enabled for all sequelize instances, and all instances will share the same namespace"," *"," * @see {Transaction}",""," * @param {Object}   [options={}]"," * @param {Boolean}  [options.autocommit=true]"," * @param {String}   [options.type='DEFERRED'] See `Sequelize.Transaction.TYPES` for possible options. Sqlite only."," * @param {String}   [options.isolationLevel='REPEATABLE_READ'] See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options"," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @return {Promise}"," * @fires error If there is an uncaught error during the transaction"," * @fires success When the transaction has ended (either committed or rolled back)"," */","Sequelize.prototype.transaction = function(options, autoCallback) {","  if (typeof options === 'function') {","    autoCallback = options;","    options = undefined;","  }","  // testhint argsConform.end","","  var transaction = new Transaction(this, options)","    , ns = Sequelize.cls;","","  if (autoCallback) {","    var transactionResolver = function (resolve, reject) {","      transaction.prepareEnvironment().then(function () {","        if (ns) {","          autoCallback = ns.bind(autoCallback);","        }","","        var result = autoCallback(transaction);","        if (!result || !result.then) throw new Error('You need to return a promise chain/thenable to the sequelize.transaction() callback');","","        return result.then(function (result) {","          return transaction.commit().then(function () {","            resolve(result);","          });","        });","      }).catch(function(err) {","        // If the transaction has already finished (commit, rollback, etc), reject with the original error","        if (transaction.finished) {","          reject(err);","        } else {","          return transaction.rollback().finally(function () {","            reject(err);","          });","        }","      });","    };","","    if (ns) {","      transactionResolver = ns.bind(transactionResolver, ns.createContext());","    }","","    return new Promise(transactionResolver);","  } else {","    return transaction.prepareEnvironment().return(transaction);","  }","};","","Sequelize.prototype.log = function() {","  var args = Utils.sliceArgs(arguments)","    , last = Utils._.last(args)","    , options;","","  if (last && Utils._.isPlainObject(last) && last.hasOwnProperty('logging')) {","    options = last;","","    // remove options from set of logged arguments","    args.splice(args.length-1, 1);","  } else {","    options = this.options;","  }","","  if (options.logging) {","    if (options.logging === true) {","      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log');","      options.logging = console.log;","    }","","    // second argument is sql-timings, when benchmarking option enabled","    if ((this.options.benchmark || options.benchmark) && options.logging === console.log) {","      args = [args[0] + ' Elapsed time: ' + args[1] + 'ms'];","    }","","    options.logging.apply(null, args);","  }","};","","/**"," * Close all connections used by this sequelize instance, and free all references so the instance can be garbage collected."," *"," * Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want"," * to garbage collect some of them."," */","Sequelize.prototype.close = function () {","  this.connectionManager.close();","};","","Sequelize.prototype.normalizeDataType = function(Type) {","  var type = typeof Type === 'function' ? new Type() : Type","    , dialectTypes = this.dialect.DataTypes || {};","","  if (dialectTypes[type.key]) {","    type = dialectTypes[type.key].extend(type);","  }","","  if (type instanceof DataTypes.ARRAY && dialectTypes[type.type.key]) {","    type.type = dialectTypes[type.type.key].extend(type.type);","  }","  return type;","};","Sequelize.prototype.normalizeAttribute = function(attribute) {","   if (!Utils._.isPlainObject(attribute)) {","    attribute = { type: attribute };","  }","","  if (!attribute.type) return attribute;","","  attribute.type = this.normalizeDataType(attribute.type);","","  if (attribute.hasOwnProperty('defaultValue')) {","    if (typeof attribute.defaultValue === 'function' && (","        attribute.defaultValue === DataTypes.NOW ||","        attribute.defaultValue === DataTypes.UUIDV1 ||","        attribute.defaultValue === DataTypes.UUIDV4","    )) {","      attribute.defaultValue = new attribute.defaultValue();","    }","  }","","  if (attribute.type instanceof DataTypes.ENUM) {","    // The ENUM is a special case where the type is an object containing the values","    if (attribute.values) {","      attribute.type.values = attribute.type.options.values = attribute.values;","    } else {","      attribute.values = attribute.type.values;","    }","","    if (!attribute.values.length) {","      throw new Error('Values for ENUM have not been defined.');","    }","  }","","  return attribute;","};","","// Allows the promise to access cls namespaces","module.exports = Promise.Sequelize = Sequelize;","module.exports.Sequelize = Sequelize;","module.exports.default = Sequelize;",""],"l":{"3":1,"112":1,"113":0,"115":0,"117":0,"118":0,"119":0,"122":0,"123":0,"125":0,"128":0,"129":0,"132":0,"133":0,"135":0,"136":0,"139":0,"140":0,"141":0,"145":0,"146":0,"149":0,"151":0,"176":0,"177":0,"180":0,"181":0,"184":0,"185":0,"186":0,"189":0,"191":0,"192":0,"195":0,"211":0,"214":0,"216":0,"217":0,"219":0,"220":0,"222":0,"223":0,"225":0,"226":0,"228":0,"229":0,"231":0,"233":0,"235":0,"241":0,"242":0,"243":0,"245":0,"247":0,"251":0,"254":0,"258":0,"265":1,"267":1,"274":1,"280":1,"286":1,"292":1,"299":1,"301":1,"307":1,"309":1,"310":37,"313":1,"315":0,"325":1,"333":1,"340":1,"347":1,"353":1,"360":1,"368":1,"376":1,"383":1,"390":1,"397":1,"404":1,"411":1,"418":1,"425":1,"432":1,"439":1,"446":1,"453":1,"460":1,"467":1,"474":1,"478":1,"479":0,"487":1,"488":0,"499":1,"500":0,"501":0,"602":1,"603":0,"604":0,"606":0,"607":0,"610":0,"620":0,"621":0,"624":0,"626":0,"627":0,"628":0,"629":0,"631":0,"632":0,"633":0,"635":0,"637":0,"647":1,"648":0,"649":0,"652":0,"661":1,"662":0,"663":0,"675":1,"677":0,"679":0,"682":0,"685":0,"686":0,"687":0,"689":0,"691":0,"694":0,"740":1,"741":0,"743":0,"746":0,"748":0,"750":0,"751":0,"755":0,"756":0,"759":0,"760":0,"761":0,"762":0,"765":0,"768":0,"769":0,"770":0,"773":0,"776":0,"777":0,"781":0,"783":0,"784":0,"787":0,"788":0,"790":0,"791":0,"792":0,"795":0,"798":0,"799":0,"800":0,"801":0,"802":0,"805":0,"810":0,"811":0,"814":0,"815":0,"816":0,"818":0,"822":0,"823":0,"824":0,"825":0,"828":0,"829":0,"834":0,"836":0,"837":0,"840":0,"843":0,"847":0,"848":0,"849":0,"850":0,"851":0,"855":0,"856":0,"872":1,"873":0,"876":0,"878":0,"879":0,"881":0,"882":0,"886":0,"887":0,"888":0,"891":0,"894":0,"897":0,"906":1,"907":0,"922":1,"923":0,"935":1,"936":0,"949":1,"950":0,"962":1,"963":0,"978":1,"979":0,"981":0,"982":0,"983":0,"984":0,"986":0,"987":0,"988":0,"992":0,"993":0,"994":0,"997":0,"998":0,"1001":0,"1005":0,"1006":0,"1007":0,"1013":0,"1014":0,"1017":0,"1018":0,"1034":1,"1035":0,"1037":0,"1038":0,"1039":0,"1043":0,"1044":0,"1047":0,"1048":0,"1050":0,"1062":1,"1063":0,"1065":0,"1066":0,"1067":0,"1071":0,"1072":0,"1084":1,"1085":0,"1088":1,"1089":0,"1092":1,"1117":1,"1118":0,"1130":1,"1131":0,"1144":1,"1145":0,"1157":1,"1158":0,"1170":1,"1171":0,"1183":1,"1184":0,"1196":1,"1197":0,"1218":1,"1219":0,"1272":1,"1273":0,"1274":0,"1275":0,"1279":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1289":0,"1290":0,"1292":0,"1293":0,"1294":0,"1299":0,"1300":0,"1302":0,"1303":0,"1309":0,"1310":0,"1313":0,"1315":0,"1319":1,"1320":0,"1324":0,"1325":0,"1328":0,"1330":0,"1333":0,"1334":0,"1335":0,"1336":0,"1340":0,"1341":0,"1344":0,"1354":1,"1355":0,"1358":1,"1359":0,"1362":0,"1363":0,"1366":0,"1367":0,"1369":0,"1371":1,"1372":0,"1373":0,"1376":0,"1378":0,"1380":0,"1381":0,"1386":0,"1390":0,"1392":0,"1393":0,"1395":0,"1398":0,"1399":0,"1403":0,"1407":1,"1408":1,"1409":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":1,"209":0,"210":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":42}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":30}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":17},"end":{"line":37,"column":33}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":29},"end":{"line":38,"column":65}}},"6":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":9},"end":{"line":48,"column":21}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":51},"end":{"line":51,"column":66}}},"8":{"name":"(anonymous_8)","line":52,"loc":{"start":{"line":52,"column":20},"end":{"line":52,"column":42}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":31}}},"10":{"name":"(anonymous_10)","line":72,"loc":{"start":{"line":72,"column":18},"end":{"line":72,"column":31}}},"11":{"name":"(anonymous_11)","line":75,"loc":{"start":{"line":75,"column":13},"end":{"line":75,"column":47}}},"12":{"name":"(anonymous_12)","line":78,"loc":{"start":{"line":78,"column":12},"end":{"line":78,"column":25}}},"13":{"name":"(anonymous_13)","line":79,"loc":{"start":{"line":79,"column":46},"end":{"line":79,"column":64}}},"14":{"name":"(anonymous_14)","line":81,"loc":{"start":{"line":81,"column":10},"end":{"line":81,"column":33}}},"15":{"name":"(anonymous_15)","line":86,"loc":{"start":{"line":86,"column":25},"end":{"line":86,"column":60}}},"16":{"name":"(anonymous_16)","line":90,"loc":{"start":{"line":90,"column":13},"end":{"line":90,"column":27}}},"17":{"name":"(anonymous_17)","line":92,"loc":{"start":{"line":92,"column":32},"end":{"line":92,"column":48}}},"18":{"name":"(anonymous_18)","line":111,"loc":{"start":{"line":111,"column":20},"end":{"line":111,"column":45}}},"19":{"name":"(anonymous_19)","line":113,"loc":{"start":{"line":113,"column":33},"end":{"line":113,"column":54}}},"20":{"name":"(anonymous_20)","line":128,"loc":{"start":{"line":128,"column":23},"end":{"line":128,"column":48}}},"21":{"name":"(anonymous_21)","line":130,"loc":{"start":{"line":130,"column":50},"end":{"line":130,"column":65}}},"22":{"name":"(anonymous_22)","line":146,"loc":{"start":{"line":146,"column":28},"end":{"line":146,"column":45}}},"23":{"name":"(anonymous_23)","line":179,"loc":{"start":{"line":179,"column":22},"end":{"line":179,"column":51}}},"24":{"name":"(anonymous_24)","line":199,"loc":{"start":{"line":199,"column":60},"end":{"line":199,"column":77}}},"25":{"name":"(anonymous_25)","line":214,"loc":{"start":{"line":214,"column":22},"end":{"line":214,"column":59}}},"26":{"name":"(anonymous_26)","line":217,"loc":{"start":{"line":217,"column":19},"end":{"line":217,"column":34}}},"27":{"name":"(anonymous_27)","line":231,"loc":{"start":{"line":231,"column":15},"end":{"line":231,"column":31}}},"28":{"name":"(anonymous_28)","line":235,"loc":{"start":{"line":235,"column":22},"end":{"line":235,"column":50}}},"29":{"name":"(anonymous_29)","line":238,"loc":{"start":{"line":238,"column":25},"end":{"line":238,"column":39}}},"30":{"name":"(anonymous_30)","line":250,"loc":{"start":{"line":250,"column":22},"end":{"line":250,"column":36}}},"31":{"name":"(anonymous_31)","line":251,"loc":{"start":{"line":251,"column":22},"end":{"line":251,"column":48}}},"32":{"name":"(anonymous_32)","line":260,"loc":{"start":{"line":260,"column":21},"end":{"line":260,"column":54}}},"33":{"name":"(anonymous_33)","line":264,"loc":{"start":{"line":264,"column":15},"end":{"line":264,"column":27}}},"34":{"name":"(anonymous_34)","line":268,"loc":{"start":{"line":268,"column":13},"end":{"line":268,"column":25}}},"35":{"name":"(anonymous_35)","line":272,"loc":{"start":{"line":272,"column":36},"end":{"line":272,"column":48}}},"36":{"name":"(anonymous_36)","line":279,"loc":{"start":{"line":279,"column":18},"end":{"line":279,"column":34}}},"37":{"name":"(anonymous_37)","line":307,"loc":{"start":{"line":307,"column":25},"end":{"line":307,"column":41}}},"38":{"name":"(anonymous_38)","line":323,"loc":{"start":{"line":323,"column":28},"end":{"line":323,"column":62}}},"39":{"name":"(anonymous_39)","line":332,"loc":{"start":{"line":332,"column":26},"end":{"line":332,"column":45}}},"40":{"name":"(anonymous_40)","line":344,"loc":{"start":{"line":344,"column":11},"end":{"line":344,"column":42}}},"41":{"name":"_stackGrabber","line":361,"loc":{"start":{"line":361,"column":9},"end":{"line":361,"column":34}}},"42":{"name":"(anonymous_42)","line":363,"loc":{"start":{"line":363,"column":30},"end":{"line":363,"column":49}}},"43":{"name":"(anonymous_43)","line":371,"loc":{"start":{"line":371,"column":13},"end":{"line":371,"column":36}}},"44":{"name":"(anonymous_44)","line":380,"loc":{"start":{"line":380,"column":7},"end":{"line":380,"column":25}}},"45":{"name":"(anonymous_45)","line":388,"loc":{"start":{"line":388,"column":8},"end":{"line":388,"column":23}}},"46":{"name":"(anonymous_46)","line":397,"loc":{"start":{"line":397,"column":12},"end":{"line":397,"column":34}}},"47":{"name":"(anonymous_47)","line":401,"loc":{"start":{"line":401,"column":15},"end":{"line":401,"column":37}}},"48":{"name":"(anonymous_48)","line":410,"loc":{"start":{"line":410,"column":6},"end":{"line":410,"column":25}}},"49":{"name":"(anonymous_49)","line":415,"loc":{"start":{"line":415,"column":7},"end":{"line":415,"column":21}}},"50":{"name":"(anonymous_50)","line":422,"loc":{"start":{"line":422,"column":8},"end":{"line":422,"column":28}}},"51":{"name":"(anonymous_51)","line":427,"loc":{"start":{"line":427,"column":11},"end":{"line":427,"column":25}}},"52":{"name":"(anonymous_52)","line":431,"loc":{"start":{"line":431,"column":8},"end":{"line":431,"column":42}}},"53":{"name":"(anonymous_53)","line":442,"loc":{"start":{"line":442,"column":9},"end":{"line":442,"column":48}}},"54":{"name":"(anonymous_54)","line":455,"loc":{"start":{"line":455,"column":20},"end":{"line":455,"column":35}}},"55":{"name":"(anonymous_55)","line":474,"loc":{"start":{"line":474,"column":27},"end":{"line":474,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":49}},"2":{"start":{"line":12,"column":0},"end":{"line":465,"column":2}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"4":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":19,"column":38}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":24}},"8":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":45}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":49}},"12":{"start":{"line":38,"column":4},"end":{"line":43,"column":18}},"13":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"14":{"start":{"line":41,"column":8},"end":{"line":41,"column":27}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"16":{"start":{"line":51,"column":4},"end":{"line":65,"column":7}},"17":{"start":{"line":52,"column":6},"end":{"line":64,"column":9}},"18":{"start":{"line":53,"column":8},"end":{"line":63,"column":9}},"19":{"start":{"line":54,"column":10},"end":{"line":62,"column":11}},"20":{"start":{"line":55,"column":12},"end":{"line":55,"column":32}},"21":{"start":{"line":56,"column":17},"end":{"line":62,"column":11}},"22":{"start":{"line":57,"column":12},"end":{"line":57,"column":58}},"23":{"start":{"line":58,"column":17},"end":{"line":62,"column":11}},"24":{"start":{"line":59,"column":12},"end":{"line":59,"column":52}},"25":{"start":{"line":61,"column":12},"end":{"line":61,"column":32}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":18}},"27":{"start":{"line":70,"column":4},"end":{"line":70,"column":43}},"28":{"start":{"line":73,"column":4},"end":{"line":73,"column":43}},"29":{"start":{"line":76,"column":4},"end":{"line":76,"column":64}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":93}},"31":{"start":{"line":79,"column":66},"end":{"line":79,"column":89}},"32":{"start":{"line":82,"column":4},"end":{"line":82,"column":24}},"33":{"start":{"line":84,"column":4},"end":{"line":84,"column":69}},"34":{"start":{"line":87,"column":4},"end":{"line":87,"column":24}},"35":{"start":{"line":88,"column":4},"end":{"line":88,"column":79}},"36":{"start":{"line":91,"column":4},"end":{"line":91,"column":20}},"37":{"start":{"line":92,"column":4},"end":{"line":107,"column":7}},"38":{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},"39":{"start":{"line":95,"column":8},"end":{"line":95,"column":25}},"40":{"start":{"line":99,"column":6},"end":{"line":101,"column":7}},"41":{"start":{"line":100,"column":8},"end":{"line":100,"column":20}},"42":{"start":{"line":104,"column":6},"end":{"line":106,"column":7}},"43":{"start":{"line":105,"column":8},"end":{"line":105,"column":28}},"44":{"start":{"line":112,"column":4},"end":{"line":120,"column":5}},"45":{"start":{"line":113,"column":6},"end":{"line":117,"column":21}},"46":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"47":{"start":{"line":115,"column":10},"end":{"line":115,"column":101}},"48":{"start":{"line":118,"column":6},"end":{"line":118,"column":101}},"49":{"start":{"line":119,"column":6},"end":{"line":119,"column":54}},"50":{"start":{"line":122,"column":4},"end":{"line":122,"column":46}},"51":{"start":{"line":124,"column":4},"end":{"line":124,"column":19}},"52":{"start":{"line":129,"column":4},"end":{"line":139,"column":5}},"53":{"start":{"line":130,"column":6},"end":{"line":138,"column":9}},"54":{"start":{"line":132,"column":8},"end":{"line":132,"column":50}},"55":{"start":{"line":132,"column":38},"end":{"line":132,"column":50}},"56":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"57":{"start":{"line":135,"column":10},"end":{"line":135,"column":57}},"58":{"start":{"line":137,"column":8},"end":{"line":137,"column":20}},"59":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"60":{"start":{"line":142,"column":6},"end":{"line":142,"column":69}},"61":{"start":{"line":145,"column":4},"end":{"line":174,"column":5}},"62":{"start":{"line":146,"column":6},"end":{"line":173,"column":9}},"63":{"start":{"line":147,"column":8},"end":{"line":147,"column":41}},"64":{"start":{"line":149,"column":8},"end":{"line":172,"column":9}},"65":{"start":{"line":150,"column":10},"end":{"line":150,"column":29}},"66":{"start":{"line":153,"column":10},"end":{"line":159,"column":11}},"67":{"start":{"line":154,"column":12},"end":{"line":154,"column":27}},"68":{"start":{"line":158,"column":12},"end":{"line":158,"column":27}},"69":{"start":{"line":161,"column":10},"end":{"line":161,"column":52}},"70":{"start":{"line":162,"column":10},"end":{"line":167,"column":11}},"71":{"start":{"line":163,"column":12},"end":{"line":163,"column":66}},"72":{"start":{"line":164,"column":12},"end":{"line":166,"column":13}},"73":{"start":{"line":165,"column":14},"end":{"line":165,"column":44}},"74":{"start":{"line":169,"column":10},"end":{"line":171,"column":11}},"75":{"start":{"line":170,"column":12},"end":{"line":170,"column":86}},"76":{"start":{"line":176,"column":4},"end":{"line":176,"column":19}},"77":{"start":{"line":180,"column":4},"end":{"line":181,"column":21}},"78":{"start":{"line":183,"column":4},"end":{"line":208,"column":5}},"79":{"start":{"line":184,"column":6},"end":{"line":207,"column":7}},"80":{"start":{"line":185,"column":8},"end":{"line":185,"column":54}},"81":{"start":{"line":187,"column":8},"end":{"line":190,"column":9}},"82":{"start":{"line":188,"column":10},"end":{"line":188,"column":65}},"83":{"start":{"line":189,"column":10},"end":{"line":189,"column":39}},"84":{"start":{"line":192,"column":8},"end":{"line":196,"column":9}},"85":{"start":{"line":193,"column":10},"end":{"line":195,"column":26}},"86":{"start":{"line":198,"column":8},"end":{"line":206,"column":9}},"87":{"start":{"line":199,"column":10},"end":{"line":205,"column":13}},"88":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"89":{"start":{"line":201,"column":14},"end":{"line":201,"column":60}},"90":{"start":{"line":204,"column":12},"end":{"line":204,"column":25}},"91":{"start":{"line":210,"column":4},"end":{"line":210,"column":22}},"92":{"start":{"line":215,"column":4},"end":{"line":215,"column":20}},"93":{"start":{"line":217,"column":4},"end":{"line":226,"column":7}},"94":{"start":{"line":218,"column":6},"end":{"line":225,"column":7}},"95":{"start":{"line":220,"column":8},"end":{"line":224,"column":9}},"96":{"start":{"line":221,"column":10},"end":{"line":221,"column":69}},"97":{"start":{"line":223,"column":10},"end":{"line":223,"column":42}},"98":{"start":{"line":228,"column":4},"end":{"line":228,"column":18}},"99":{"start":{"line":232,"column":4},"end":{"line":232,"column":112}},"100":{"start":{"line":236,"column":4},"end":{"line":236,"column":67}},"101":{"start":{"line":237,"column":4},"end":{"line":247,"column":5}},"102":{"start":{"line":238,"column":6},"end":{"line":246,"column":9}},"103":{"start":{"line":239,"column":8},"end":{"line":245,"column":9}},"104":{"start":{"line":240,"column":10},"end":{"line":244,"column":11}},"105":{"start":{"line":241,"column":12},"end":{"line":241,"column":26}},"106":{"start":{"line":243,"column":12},"end":{"line":243,"column":67}},"107":{"start":{"line":248,"column":4},"end":{"line":248,"column":18}},"108":{"start":{"line":251,"column":4},"end":{"line":257,"column":14}},"109":{"start":{"line":252,"column":6},"end":{"line":256,"column":7}},"110":{"start":{"line":253,"column":8},"end":{"line":253,"column":26}},"111":{"start":{"line":255,"column":8},"end":{"line":255,"column":42}},"112":{"start":{"line":261,"column":4},"end":{"line":261,"column":121}},"113":{"start":{"line":265,"column":4},"end":{"line":265,"column":37}},"114":{"start":{"line":269,"column":4},"end":{"line":269,"column":35}},"115":{"start":{"line":273,"column":4},"end":{"line":273,"column":38}},"116":{"start":{"line":274,"column":4},"end":{"line":274,"column":50}},"117":{"start":{"line":276,"column":4},"end":{"line":276,"column":13}},"118":{"start":{"line":280,"column":4},"end":{"line":297,"column":5}},"119":{"start":{"line":281,"column":6},"end":{"line":281,"column":24}},"120":{"start":{"line":282,"column":6},"end":{"line":286,"column":7}},"121":{"start":{"line":283,"column":8},"end":{"line":283,"column":27}},"122":{"start":{"line":285,"column":8},"end":{"line":285,"column":19}},"123":{"start":{"line":287,"column":11},"end":{"line":297,"column":5}},"124":{"start":{"line":288,"column":6},"end":{"line":288,"column":23}},"125":{"start":{"line":289,"column":11},"end":{"line":297,"column":5}},"126":{"start":{"line":290,"column":6},"end":{"line":290,"column":23}},"127":{"start":{"line":291,"column":11},"end":{"line":297,"column":5}},"128":{"start":{"line":292,"column":6},"end":{"line":292,"column":25}},"129":{"start":{"line":293,"column":11},"end":{"line":297,"column":5}},"130":{"start":{"line":294,"column":6},"end":{"line":294,"column":28}},"131":{"start":{"line":296,"column":6},"end":{"line":296,"column":19}},"132":{"start":{"line":308,"column":4},"end":{"line":308,"column":55}},"133":{"start":{"line":308,"column":40},"end":{"line":308,"column":53}},"134":{"start":{"line":312,"column":4},"end":{"line":312,"column":57}},"135":{"start":{"line":312,"column":42},"end":{"line":312,"column":55}},"136":{"start":{"line":314,"column":4},"end":{"line":314,"column":97}},"137":{"start":{"line":314,"column":82},"end":{"line":314,"column":95}},"138":{"start":{"line":316,"column":4},"end":{"line":318,"column":5}},"139":{"start":{"line":317,"column":6},"end":{"line":317,"column":19}},"140":{"start":{"line":320,"column":4},"end":{"line":320,"column":16}},"141":{"start":{"line":324,"column":4},"end":{"line":324,"column":22}},"142":{"start":{"line":326,"column":4},"end":{"line":326,"column":28}},"143":{"start":{"line":327,"column":4},"end":{"line":327,"column":48}},"144":{"start":{"line":329,"column":4},"end":{"line":339,"column":5}},"145":{"start":{"line":330,"column":6},"end":{"line":330,"column":21}},"146":{"start":{"line":332,"column":6},"end":{"line":336,"column":9}},"147":{"start":{"line":333,"column":8},"end":{"line":335,"column":9}},"148":{"start":{"line":334,"column":10},"end":{"line":334,"column":27}},"149":{"start":{"line":338,"column":6},"end":{"line":338,"column":21}},"150":{"start":{"line":341,"column":4},"end":{"line":341,"column":18}},"151":{"start":{"line":345,"column":4},"end":{"line":355,"column":5}},"152":{"start":{"line":347,"column":6},"end":{"line":347,"column":44}},"153":{"start":{"line":348,"column":6},"end":{"line":348,"column":48}},"154":{"start":{"line":349,"column":6},"end":{"line":349,"column":55}},"155":{"start":{"line":352,"column":6},"end":{"line":352,"column":38}},"156":{"start":{"line":353,"column":6},"end":{"line":353,"column":48}},"157":{"start":{"line":354,"column":6},"end":{"line":354,"column":45}},"158":{"start":{"line":357,"column":4},"end":{"line":357,"column":20}},"159":{"start":{"line":362,"column":4},"end":{"line":362,"column":39}},"160":{"start":{"line":363,"column":4},"end":{"line":363,"column":67}},"161":{"start":{"line":363,"column":51},"end":{"line":363,"column":64}},"162":{"start":{"line":364,"column":4},"end":{"line":364,"column":26}},"163":{"start":{"line":365,"column":4},"end":{"line":365,"column":48}},"164":{"start":{"line":366,"column":4},"end":{"line":366,"column":29}},"165":{"start":{"line":367,"column":4},"end":{"line":367,"column":35}},"166":{"start":{"line":368,"column":4},"end":{"line":368,"column":20}},"167":{"start":{"line":372,"column":4},"end":{"line":372,"column":23}},"168":{"start":{"line":373,"column":4},"end":{"line":373,"column":45}},"169":{"start":{"line":374,"column":4},"end":{"line":376,"column":5}},"170":{"start":{"line":375,"column":8},"end":{"line":375,"column":33}},"171":{"start":{"line":377,"column":4},"end":{"line":377,"column":15}},"172":{"start":{"line":381,"column":4},"end":{"line":381,"column":25}},"173":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"174":{"start":{"line":383,"column":6},"end":{"line":383,"column":29}},"175":{"start":{"line":385,"column":4},"end":{"line":385,"column":15}},"176":{"start":{"line":389,"column":4},"end":{"line":389,"column":96}},"177":{"start":{"line":390,"column":4},"end":{"line":390,"column":15}},"178":{"start":{"line":398,"column":4},"end":{"line":398,"column":43}},"179":{"start":{"line":399,"column":4},"end":{"line":399,"column":64}},"180":{"start":{"line":402,"column":4},"end":{"line":402,"column":43}},"181":{"start":{"line":403,"column":4},"end":{"line":403,"column":52}},"182":{"start":{"line":411,"column":4},"end":{"line":411,"column":17}},"183":{"start":{"line":412,"column":4},"end":{"line":412,"column":21}},"184":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"185":{"start":{"line":417,"column":6},"end":{"line":417,"column":38}},"186":{"start":{"line":419,"column":4},"end":{"line":419,"column":19}},"187":{"start":{"line":423,"column":4},"end":{"line":423,"column":19}},"188":{"start":{"line":424,"column":4},"end":{"line":424,"column":36}},"189":{"start":{"line":428,"column":4},"end":{"line":428,"column":19}},"190":{"start":{"line":432,"column":4},"end":{"line":439,"column":5}},"191":{"start":{"line":433,"column":6},"end":{"line":433,"column":41}},"192":{"start":{"line":435,"column":6},"end":{"line":435,"column":35}},"193":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"194":{"start":{"line":437,"column":8},"end":{"line":437,"column":27}},"195":{"start":{"line":443,"column":4},"end":{"line":446,"column":5}},"196":{"start":{"line":444,"column":6},"end":{"line":444,"column":25}},"197":{"start":{"line":445,"column":6},"end":{"line":445,"column":23}},"198":{"start":{"line":448,"column":4},"end":{"line":448,"column":31}},"199":{"start":{"line":449,"column":4},"end":{"line":449,"column":33}},"200":{"start":{"line":450,"column":4},"end":{"line":450,"column":23}},"201":{"start":{"line":456,"column":4},"end":{"line":461,"column":5}},"202":{"start":{"line":457,"column":6},"end":{"line":457,"column":218}},"203":{"start":{"line":458,"column":6},"end":{"line":458,"column":111}},"204":{"start":{"line":459,"column":6},"end":{"line":459,"column":36}},"205":{"start":{"line":460,"column":6},"end":{"line":460,"column":43}},"206":{"start":{"line":463,"column":4},"end":{"line":463,"column":15}},"207":{"start":{"line":467,"column":0},"end":{"line":472,"column":47}},"208":{"start":{"line":474,"column":0},"end":{"line":476,"column":2}},"209":{"start":{"line":475,"column":2},"end":{"line":475,"column":42}},"210":{"start":{"line":478,"column":0},"end":{"line":478,"column":37}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":10},"end":{"line":40,"column":44}},{"start":{"line":40,"column":48},"end":{"line":40,"column":73}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":10},"end":{"line":54,"column":10}},{"start":{"line":54,"column":10},"end":{"line":54,"column":10}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":17},"end":{"line":56,"column":17}},{"start":{"line":56,"column":17},"end":{"line":56,"column":17}}]},"8":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":21},"end":{"line":56,"column":43}},{"start":{"line":56,"column":47},"end":{"line":56,"column":75}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":17},"end":{"line":58,"column":17}},{"start":{"line":58,"column":17},"end":{"line":58,"column":17}}]},"10":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":21},"end":{"line":58,"column":41}},{"start":{"line":58,"column":45},"end":{"line":58,"column":71}}]},"11":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":13}},{"start":{"line":91,"column":17},"end":{"line":91,"column":19}}]},"12":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]},"13":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":10},"end":{"line":94,"column":29}},{"start":{"line":94,"column":33},"end":{"line":94,"column":54}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"15":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"16":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":10},"end":{"line":104,"column":14}},{"start":{"line":104,"column":18},"end":{"line":104,"column":50}}]},"17":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"18":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":35}},{"start":{"line":112,"column":39},"end":{"line":112,"column":72}}]},"19":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"20":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":48}},{"start":{"line":114,"column":52},"end":{"line":114,"column":94}}]},"21":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"22":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"23":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"24":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":37}},{"start":{"line":134,"column":41},"end":{"line":134,"column":81}}]},"25":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"26":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":21}},{"start":{"line":141,"column":25},"end":{"line":141,"column":55}}]},"27":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"28":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"29":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":10},"end":{"line":153,"column":10}},{"start":{"line":153,"column":10},"end":{"line":153,"column":10}}]},"30":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":10}},{"start":{"line":162,"column":10},"end":{"line":162,"column":10}}]},"31":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":12}},{"start":{"line":164,"column":12},"end":{"line":164,"column":12}}]},"32":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":10}},{"start":{"line":169,"column":10},"end":{"line":169,"column":10}}]},"33":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":14},"end":{"line":169,"column":38}},{"start":{"line":169,"column":42},"end":{"line":169,"column":72}},{"start":{"line":169,"column":76},"end":{"line":169,"column":121}}]},"34":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"35":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"36":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":12},"end":{"line":187,"column":24}},{"start":{"line":187,"column":28},"end":{"line":187,"column":73}}]},"37":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":8}},{"start":{"line":192,"column":8},"end":{"line":192,"column":8}}]},"38":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"39":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":12}},{"start":{"line":200,"column":12},"end":{"line":200,"column":12}}]},"40":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":6}},{"start":{"line":218,"column":6},"end":{"line":218,"column":6}}]},"41":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":10},"end":{"line":218,"column":40}},{"start":{"line":218,"column":44},"end":{"line":218,"column":76}}]},"42":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":8}},{"start":{"line":220,"column":8},"end":{"line":220,"column":8}}]},"43":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":12},"end":{"line":220,"column":37}},{"start":{"line":220,"column":41},"end":{"line":220,"column":72}},{"start":{"line":220,"column":76},"end":{"line":220,"column":116}}]},"44":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":11},"end":{"line":232,"column":36}},{"start":{"line":232,"column":40},"end":{"line":232,"column":66}},{"start":{"line":232,"column":70},"end":{"line":232,"column":111}}]},"45":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"46":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"47":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":10},"end":{"line":240,"column":10}},{"start":{"line":240,"column":10},"end":{"line":240,"column":10}}]},"48":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":22},"end":{"line":243,"column":41}},{"start":{"line":243,"column":46},"end":{"line":243,"column":66}}]},"49":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":6},"end":{"line":252,"column":6}},{"start":{"line":252,"column":6},"end":{"line":252,"column":6}}]},"50":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":68},"end":{"line":261,"column":91}},{"start":{"line":261,"column":96},"end":{"line":261,"column":119}}]},"51":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"52":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":6}},{"start":{"line":282,"column":6},"end":{"line":282,"column":6}}]},"53":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":11},"end":{"line":287,"column":11}},{"start":{"line":287,"column":11},"end":{"line":287,"column":11}}]},"54":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":11},"end":{"line":289,"column":11}},{"start":{"line":289,"column":11},"end":{"line":289,"column":11}}]},"55":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":11},"end":{"line":291,"column":11}},{"start":{"line":291,"column":11},"end":{"line":291,"column":11}}]},"56":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":11},"end":{"line":293,"column":11}},{"start":{"line":293,"column":11},"end":{"line":293,"column":11}}]},"57":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":14},"end":{"line":293,"column":36}},{"start":{"line":293,"column":40},"end":{"line":293,"column":56}}]},"58":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"59":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"60":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"61":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":8},"end":{"line":314,"column":41}},{"start":{"line":314,"column":45},"end":{"line":314,"column":78}}]},"62":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"63":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":14},"end":{"line":326,"column":21}},{"start":{"line":326,"column":25},"end":{"line":326,"column":27}}]},"64":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":24},"end":{"line":327,"column":41}},{"start":{"line":327,"column":45},"end":{"line":327,"column":47}}]},"65":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"66":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":8}},{"start":{"line":333,"column":8},"end":{"line":333,"column":8}}]},"67":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":47}},{"start":{"line":333,"column":51},"end":{"line":333,"column":67}},{"start":{"line":333,"column":73},"end":{"line":333,"column":85}},{"start":{"line":333,"column":91},"end":{"line":333,"column":108}}]},"68":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"69":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":12},"end":{"line":372,"column":17}},{"start":{"line":372,"column":21},"end":{"line":372,"column":22}}]},"70":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"71":{"line":389,"type":"cond-expr","locations":[{"start":{"line":389,"column":56},"end":{"line":389,"column":75}},{"start":{"line":389,"column":78},"end":{"line":389,"column":94}}]},"72":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":15},"end":{"line":398,"column":23}},{"start":{"line":398,"column":27},"end":{"line":398,"column":42}}]},"73":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":15},"end":{"line":402,"column":23}},{"start":{"line":402,"column":27},"end":{"line":402,"column":42}}]},"74":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":416,"column":4}},{"start":{"line":416,"column":4},"end":{"line":416,"column":4}}]},"75":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":17},"end":{"line":424,"column":21}},{"start":{"line":424,"column":25},"end":{"line":424,"column":27}}]},"76":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"77":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":436,"column":6}},{"start":{"line":436,"column":6},"end":{"line":436,"column":6}}]},"78":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":4},"end":{"line":443,"column":4}},{"start":{"line":443,"column":4},"end":{"line":443,"column":4}}]},"79":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":456,"column":4}},{"start":{"line":456,"column":4},"end":{"line":456,"column":4}}]}},"code":["'use strict';","","var DataTypes = require('./data-types')","  , SqlString = require('./sql-string')","  , _ = require('lodash').runInContext() // Prevent anyone messing with template settings by creating a fresh copy","  , parameterValidator = require('./utils/parameter-validator')","  , inflection = require('inflection')","  , uuid = require('uuid')","  , deprecate = require('depd')('Utils')","  , primitives = ['string', 'number', 'boolean'];","","var Utils = module.exports = {","  inflection: inflection,","  _: _,","  camelizeIf: function(string, condition) {","    var result = string;","","    if (condition) {","      result = Utils.camelize(string);","    }","","    return result;","  },","  underscoredIf: function(string, condition) {","    var result = string;","","    if (condition) {","      result = inflection.underscore(string);","    }","","    return result;","  },","  isPrimitive: function (val) {","    return primitives.indexOf(typeof val) !== -1;","  },","  // Same concept as _.merge, but don't overwrite properties that have already been assigned","  mergeDefaults: function (a, b) {","    return _.mergeWith(a, b, function (objectValue, sourceValue) {","      // If it's an object, let _ handle it this time, we will be called again for each property","      if (!this._.isPlainObject(objectValue) && objectValue !== undefined) {","        return objectValue;","      }","    }.bind(this));","  },","  // An alternative to _.merge, which doesn't clone its arguments","  // Cloning is a bad idea because options arguments may contain references to sequelize","  // models - which again reference database libs which don't like to be cloned (in particular pg-native)","  merge: function () {","    var result = {};","","    Array.prototype.slice.apply(arguments).forEach(function (obj) {","      _.forOwn(obj, function (value, key) {","        if (typeof value !== 'undefined') {","          if (!result[key]) {","            result[key] = value;","          } else if (_.isPlainObject(value) && _.isPlainObject(result[key])) {","            result[key] = Utils.merge(result[key], value);","          } else if (Array.isArray(value) && Array.isArray(result[key])) {","            result[key] = value.concat(result[key]);","          } else {","            result[key] = value;","          }","        }","      });","    });","","    return result;","  },","  lowercaseFirst: function (s) {","    return s[0].toLowerCase() + s.slice(1);","  },","  uppercaseFirst: function (s) {","    return s[0].toUpperCase() + s.slice(1);","  },","  spliceStr: function (str, index, count, add) {","    return str.slice(0, index) + add + str.slice(index + count);","  },","  camelize: function(str){","    return str.trim().replace(/[-_\\s]+(.)?/g, function(match, c){ return c.toUpperCase(); });","  },","  format: function(arr, dialect) {","    var timeZone = null;","    // Make a clone of the array beacuse format modifies the passed args","    return SqlString.format(arr[0], arr.slice(1), timeZone, dialect);","  },","  formatNamedParameters: function(sql, parameters, dialect) {","    var timeZone = null;","    return SqlString.formatNamedParameters(sql, parameters, timeZone, dialect);","  },","  cloneDeep: function(obj) {","    obj = obj || {};","    return _.cloneDeepWith(obj, function (elem) {","      // Do not try to customize cloning of arrays or POJOs","      if (Array.isArray(elem) || _.isPlainObject(elem)) {","        return undefined;","      }","","      // Don't clone stuff that's an object, but not a plain one - fx example sequelize models and instances","      if (typeof elem === 'object') {","        return elem;","      }","","      // Preserve special data-types like `fn` across clones. _.get() is used for checking up the prototype chain","      if (elem && typeof elem.clone === 'function') {","        return elem.clone();","      }","    });","  },","","  /* Expand and normalize finder options */","  mapFinderOptions: function(options, Model) {","    if (Model._hasVirtualAttributes && Array.isArray(options.attributes)) {","      options.attributes.forEach(function (attribute) {","        if (Model._isVirtualAttribute(attribute) && Model.rawAttributes[attribute].type.fields) {","          options.attributes = options.attributes.concat(Model.rawAttributes[attribute].type.fields);","        }","      }.bind(Model));","      options.attributes = _.without.apply(_, [options.attributes].concat(Model._virtualAttributes));","      options.attributes = _.uniq(options.attributes);","    }","","    Utils.mapOptionFieldNames(options, Model);","","    return options;","  },","","  /* Used to map field names in attributes and where conditions */","  mapOptionFieldNames: function(options, Model) {","    if (Array.isArray(options.attributes)) {","      options.attributes = options.attributes.map(function(attr) {","        // Object lookups will force any variable to strings, we don't want that for special objects etc","        if (typeof attr !== 'string') return attr;","        // Map attributes to aliased syntax attributes","        if (Model.rawAttributes[attr] && attr !== Model.rawAttributes[attr].field) {","          return [Model.rawAttributes[attr].field, attr];","        }","        return attr;","      });","    }","","    if (options.where && _.isPlainObject(options.where)) {","      options.where = Utils.mapWhereFieldNames(options.where, Model);","    }","","    if (Array.isArray(options.order)) {","      options.order.forEach(function(oGroup) {","        var OrderModel, attr, attrOffset;","","        if (Array.isArray(oGroup)) {","          OrderModel = Model;","","          // Check if we have ['attr', 'DESC'] or [Model, 'attr', 'DESC']","          if (typeof oGroup[oGroup.length - 2] === 'string') {","            attrOffset = 2;","","          // Assume ['attr'], [Model, 'attr'] or [seq.fn('somefn', 1), 'DESC']","          } else {","            attrOffset = 1;","          }","","          attr = oGroup[oGroup.length - attrOffset];","          if (oGroup.length > attrOffset) {","            OrderModel = oGroup[oGroup.length - (attrOffset + 1)];","            if (OrderModel.model) {","              OrderModel = OrderModel.model;","            }","          }","","          if (OrderModel.rawAttributes && OrderModel.rawAttributes[attr] && attr !== OrderModel.rawAttributes[attr].field) {","            oGroup[oGroup.length - attrOffset] = OrderModel.rawAttributes[attr].field;","          }","        }","      });","    }","","    return options;","  },","","  mapWhereFieldNames: function (attributes, Model) {","    var attribute","      , rawAttribute;","","    if (attributes) {","      for (attribute in attributes) {","        rawAttribute = Model.rawAttributes[attribute];","","        if (rawAttribute && rawAttribute.field !== rawAttribute.fieldName) {","          attributes[rawAttribute.field] = attributes[attribute];","          delete attributes[attribute];","        }","","        if (_.isPlainObject(attributes[attribute])) {","          attributes[attribute] = Utils.mapOptionFieldNames({","            where: attributes[attribute]","          }, Model).where;","        }","","        if (Array.isArray(attributes[attribute])) {","          attributes[attribute] = attributes[attribute].map(function (where) {","            if (_.isPlainObject(where)) {","              return Utils.mapWhereFieldNames(where, Model);","            }","","            return where;","          });","        }","      }","    }","","    return attributes;","  },","","  /* Used to map field names in values */","  mapValueFieldNames: function (dataValues, fields, Model) {","    var values = {};","","    fields.forEach(function(attr) {","      if (dataValues[attr] !== undefined && !Model._isVirtualAttribute(attr)) {","        // Field name mapping","        if (Model.rawAttributes[attr] && Model.rawAttributes[attr].field && Model.rawAttributes[attr].field !== attr) {","          values[Model.rawAttributes[attr].field] = dataValues[attr];","        } else {","          values[attr] = dataValues[attr];","        }","      }","    });","","    return values;","  },","","  isColString: function(value) {","    return typeof value === 'string' && value.substr(0, 1) === '$' && value.substr(value.length - 1, 1) === '$';","  },","","  argsArePrimaryKeys: function(args, primaryKeys) {","    var result = (args.length === Object.keys(primaryKeys).length);","    if (result) {","      Utils._.each(args, function(arg) {","        if (result) {","          if (['number', 'string'].indexOf(typeof arg) !== -1) {","            result = true;","          } else {","            result = (arg instanceof Date) || Buffer.isBuffer(arg);","          }","        }","      });","    }","    return result;","  },","  canTreatArrayAsAnd: function(arr) {","    return arr.reduce(function(treatAsAnd, arg) {","      if (treatAsAnd) {","        return treatAsAnd;","      } else {","        return Utils._.isPlainObject(arg);","      }","    }, false);","  },","","  combineTableNames: function(tableName1, tableName2) {","    return (tableName1.toLowerCase() < tableName2.toLowerCase()) ? (tableName1 + tableName2) : (tableName2 + tableName1);","  },","","  singularize: function(s) {","    return inflection.singularize(s);","  },","","  pluralize: function(s) {","    return inflection.pluralize(s);","  },","","  removeCommentsFromFunctionString: function(s) {","    s = s.replace(/\\s*(\\/\\/.*)/g, '');","    s = s.replace(/(\\/\\*[\\n\\r\\s\\S]*?\\*\\/)/mg, '');","","    return s;","  },","","  toDefaultValue: function(value) {","    if (typeof value === 'function') {","      var tmp = value();","      if (tmp instanceof DataTypes.ABSTRACT) {","        return tmp.toSql();","      } else {","        return tmp;","      }","    } else if (value instanceof DataTypes.UUIDV1) {","      return uuid.v1();","    } else if (value instanceof DataTypes.UUIDV4) {","      return uuid.v4();","    } else if (value instanceof DataTypes.NOW) {","      return Utils.now();","    } else if(_.isPlainObject(value) || _.isArray(value)) {","      return _.clone(value);","    } else {","      return value;","    }","  },","","  /**","   * Determine if the default value provided exists and can be described","   * in a db schema using the DEFAULT directive.","   *","   * @param  {*} value Any default value.","   * @return {boolean} yes / no.","   */","  defaultValueSchemable: function(value) {","    if (typeof value === 'undefined') { return false; }","","    // TODO this will be schemable when all supported db","    // have been normalized for this case","    if (value instanceof DataTypes.NOW) { return false; }","","    if (value instanceof DataTypes.UUIDV1 || value instanceof DataTypes.UUIDV4) { return false; }","","    if (_.isFunction(value)) {","      return false;","    }","","    return true;","  },","","  removeNullValuesFromHash: function(hash, omitNull, options) {","    var result = hash;","","    options = options || {};","    options.allowNull = options.allowNull || [];","","    if (omitNull) {","      var _hash = {};","","      Utils._.forIn(hash, function(val, key) {","        if (options.allowNull.indexOf(key) > -1 || key.match(/Id$/) || ((val !== null) && (val !== undefined))) {","          _hash[key] = val;","        }","      });","","      result = _hash;","    }","","    return result;","  },","","  inherit: function(SubClass, SuperClass) {","    if (SuperClass.constructor === Function) {","      // Normal Inheritance","      SubClass.prototype = new SuperClass();","      SubClass.prototype.constructor = SubClass;","      SubClass.prototype.parent = SuperClass.prototype;","    } else {","      // Pure Virtual Inheritance","      SubClass.prototype = SuperClass;","      SubClass.prototype.constructor = SubClass;","      SubClass.prototype.parent = SuperClass;","    }","","    return SubClass;","  },","","","  stack: function _stackGrabber() {","    var orig = Error.prepareStackTrace;","    Error.prepareStackTrace = function(_, stack) { return stack; };","    var err = new Error();","    Error.captureStackTrace(err, _stackGrabber);","    var errStack = err.stack;","    Error.prepareStackTrace = orig;","    return errStack;","  },","","  sliceArgs: function (args, begin) {","    begin = begin || 0;","    var tmp = new Array(args.length - begin);","    for (var i = begin; i < args.length; ++i) {","        tmp[i - begin] = args[i];","    }","    return tmp;","  },","","  now: function(dialect) {","    var now = new Date();","    if (['postgres', 'sqlite'].indexOf(dialect) === -1) {","      now.setMilliseconds(0);","    }","    return now;","  },","","  tick: function(func) {","    var tick = (global.hasOwnProperty('setImmediate') ? global.setImmediate : process.nextTick);","    tick(func);","  },","","  // Note: Use the `quoteIdentifier()` and `escape()` methods on the","  // `QueryInterface` instead for more portable code.","","  TICK_CHAR: '`',","  addTicks: function(s, tickChar) {","    tickChar = tickChar || Utils.TICK_CHAR;","    return tickChar + Utils.removeTicks(s, tickChar) + tickChar;","  },","  removeTicks: function(s, tickChar) {","    tickChar = tickChar || Utils.TICK_CHAR;","    return s.replace(new RegExp(tickChar, 'g'), '');","  },","","  /*","   * Utility functions for representing SQL functions, and columns that should be escaped.","   * Please do not use these functions directly, use Sequelize.fn and Sequelize.col instead.","   */","  fn: function(fn, args) {","    this.fn = fn;","    this.args = args;","  },","","  col: function(col) {","    if (arguments.length > 1) {","      col = this.sliceArgs(arguments);","    }","    this.col = col;","  },","","  cast: function(val, type) {","    this.val = val;","    this.type = (type || '').trim();","  },","","  literal: function(val) {","    this.val = val;","  },","","  json: function(conditionsOrPath, value) {","    if (Utils._.isObject(conditionsOrPath)) {","      this.conditions = conditionsOrPath;","    } else {","      this.path = conditionsOrPath;","      if (value) {","        this.value = value;","      }","    }","  },","","  where: function(attribute, comparator, logic) {","    if (logic === undefined) {","      logic = comparator;","      comparator = '=';","    }","","    this.attribute = attribute;","    this.comparator = comparator;","    this.logic = logic;","  },","","  validateParameter: parameterValidator,","","  formatReferences: function (obj) {","    if (!_.isPlainObject(obj.references)) {","      deprecate('Non-object references property found. Support for that will be removed in version 4. Expected { references: { model: \"value\", key: \"key\" } } instead of { references: \"value\", referencesKey: \"key\" }.');","      obj.references = { model: obj.references, key: obj.referencesKey, deferrable: obj.referencesDeferrable };","      obj.referencesKey = undefined;","      obj.referencesDeferrable = undefined;","    }","","    return obj;","  }","};","","Utils.where.prototype._isSequelizeMethod =","Utils.literal.prototype._isSequelizeMethod =","Utils.cast.prototype._isSequelizeMethod =","Utils.fn.prototype._isSequelizeMethod =","Utils.col.prototype._isSequelizeMethod =","Utils.json.prototype._isSequelizeMethod = true;","","Utils.fn.prototype.clone = function() {","  return new Utils.fn(this.fn, this.args);","};","","Utils.Promise = require('./promise');",""],"l":{"3":1,"12":1,"16":0,"18":0,"19":0,"22":0,"25":0,"27":0,"28":0,"31":0,"34":0,"38":0,"40":0,"41":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"67":0,"70":0,"73":0,"76":0,"79":0,"82":0,"84":0,"87":0,"88":0,"91":0,"92":0,"94":0,"95":0,"99":0,"100":0,"104":0,"105":0,"112":0,"113":0,"114":0,"115":0,"118":0,"119":0,"122":0,"124":0,"129":0,"130":0,"132":0,"134":0,"135":0,"137":0,"141":0,"142":0,"145":0,"146":0,"147":0,"149":0,"150":0,"153":0,"154":0,"158":0,"161":0,"162":0,"163":0,"164":0,"165":0,"169":0,"170":0,"176":0,"180":0,"183":0,"184":0,"185":0,"187":0,"188":0,"189":0,"192":0,"193":0,"198":0,"199":0,"200":0,"201":0,"204":0,"210":0,"215":0,"217":0,"218":0,"220":0,"221":0,"223":0,"228":0,"232":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"243":0,"248":0,"251":0,"252":0,"253":0,"255":0,"261":0,"265":0,"269":0,"273":0,"274":0,"276":0,"280":0,"281":0,"282":0,"283":0,"285":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"296":0,"308":0,"312":0,"314":0,"316":0,"317":0,"320":0,"324":0,"326":0,"327":0,"329":0,"330":0,"332":0,"333":0,"334":0,"338":0,"341":0,"345":0,"347":0,"348":0,"349":0,"352":0,"353":0,"354":0,"357":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"372":0,"373":0,"374":0,"375":0,"377":0,"381":0,"382":0,"383":0,"385":0,"389":0,"390":0,"398":0,"399":0,"402":0,"403":0,"411":0,"412":0,"416":0,"417":0,"419":0,"423":0,"424":0,"428":0,"432":0,"433":0,"435":0,"436":0,"437":0,"443":0,"444":0,"445":0,"448":0,"449":0,"450":0,"456":0,"457":0,"458":0,"459":0,"460":0,"463":0,"467":1,"474":1,"475":0,"478":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/data-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/data-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":64,"18":64,"19":32,"20":0,"21":0,"22":0,"23":0,"24":0,"25":64,"26":64,"27":64,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":1,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":1,"112":1,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":1,"122":1,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":1,"132":1,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":1,"142":1,"143":0,"144":0,"145":0,"146":0,"147":1,"148":1,"149":0,"150":0,"151":0,"152":0,"153":1,"154":1,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":1,"163":3,"164":3,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":1,"173":1,"174":0,"175":1,"176":0,"177":0,"178":0,"179":1,"180":1,"181":1,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":1,"191":0,"192":1,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":1,"211":1,"212":1,"213":0,"214":1,"215":1,"216":1,"217":0,"218":0,"219":0,"220":1,"221":0,"222":0,"223":0,"224":1,"225":1,"226":1,"227":0,"228":1,"229":0,"230":1,"231":0,"232":0,"233":0,"234":1,"235":1,"236":1,"237":1,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":1,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":1,"278":1,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":1,"290":1,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":1,"299":1,"300":1,"301":0,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":1,"309":1,"310":1,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":1,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":1,"331":1,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":1,"341":1,"342":1,"343":0,"344":1,"345":0,"346":0,"347":0,"348":1,"349":0,"350":1,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":1,"359":1,"360":1,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":1,"371":1,"372":0,"373":1,"374":5,"375":16,"376":16,"377":0,"378":0,"379":0,"380":0,"381":1,"382":1,"383":32,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1},"b":{"1":[0,0],"2":[0,0],"3":[32,32],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0,0,0],"75":[0,0],"76":[0,0],"77":[0,0,0,0],"78":[0,0],"79":[0,0],"80":[0,0,0,0],"81":[0,0],"82":[0,0],"83":[0,0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[16,0],"97":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":64,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":3,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":5,"76":16,"77":0,"78":32},"fnMap":{"1":{"name":"(anonymous_1)","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":33}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":30},"end":{"line":63,"column":48}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":27},"end":{"line":66,"column":38}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":16},"end":{"line":69,"column":37}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":31},"end":{"line":75,"column":57}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":43}}},"7":{"name":"(anonymous_7)","line":86,"loc":{"start":{"line":86,"column":18},"end":{"line":86,"column":30}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":31},"end":{"line":110,"column":56}}},"9":{"name":"(anonymous_9)","line":124,"loc":{"start":{"line":124,"column":25},"end":{"line":124,"column":36}}},"10":{"name":"(anonymous_10)","line":127,"loc":{"start":{"line":127,"column":28},"end":{"line":127,"column":44}}},"11":{"name":"(anonymous_11)","line":138,"loc":{"start":{"line":138,"column":7},"end":{"line":138,"column":18}}},"12":{"name":"(anonymous_12)","line":152,"loc":{"start":{"line":152,"column":27},"end":{"line":152,"column":52}}},"13":{"name":"(anonymous_13)","line":163,"loc":{"start":{"line":163,"column":23},"end":{"line":163,"column":34}}},"14":{"name":"(anonymous_14)","line":171,"loc":{"start":{"line":171,"column":29},"end":{"line":171,"column":46}}},"15":{"name":"(anonymous_15)","line":181,"loc":{"start":{"line":181,"column":23},"end":{"line":181,"column":34}}},"16":{"name":"(anonymous_16)","line":193,"loc":{"start":{"line":193,"column":26},"end":{"line":193,"column":42}}},"17":{"name":"(anonymous_17)","line":201,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":49}}},"18":{"name":"(anonymous_18)","line":212,"loc":{"start":{"line":212,"column":25},"end":{"line":212,"column":36}}},"19":{"name":"(anonymous_19)","line":230,"loc":{"start":{"line":230,"column":28},"end":{"line":230,"column":44}}},"20":{"name":"(anonymous_20)","line":239,"loc":{"start":{"line":239,"column":7},"end":{"line":239,"column":18}}},"21":{"name":"(anonymous_21)","line":246,"loc":{"start":{"line":246,"column":7},"end":{"line":246,"column":18}}},"22":{"name":"(anonymous_22)","line":260,"loc":{"start":{"line":260,"column":30},"end":{"line":260,"column":47}}},"23":{"name":"(anonymous_23)","line":269,"loc":{"start":{"line":269,"column":29},"end":{"line":269,"column":45}}},"24":{"name":"(anonymous_24)","line":287,"loc":{"start":{"line":287,"column":29},"end":{"line":287,"column":46}}},"25":{"name":"(anonymous_25)","line":296,"loc":{"start":{"line":296,"column":28},"end":{"line":296,"column":44}}},"26":{"name":"(anonymous_26)","line":311,"loc":{"start":{"line":311,"column":28},"end":{"line":311,"column":55}}},"27":{"name":"(anonymous_27)","line":321,"loc":{"start":{"line":321,"column":27},"end":{"line":321,"column":43}}},"28":{"name":"(anonymous_28)","line":336,"loc":{"start":{"line":336,"column":27},"end":{"line":336,"column":54}}},"29":{"name":"(anonymous_29)","line":354,"loc":{"start":{"line":354,"column":29},"end":{"line":354,"column":56}}},"30":{"name":"(anonymous_30)","line":372,"loc":{"start":{"line":372,"column":30},"end":{"line":372,"column":57}}},"31":{"name":"(anonymous_31)","line":382,"loc":{"start":{"line":382,"column":26},"end":{"line":382,"column":37}}},"32":{"name":"(anonymous_32)","line":389,"loc":{"start":{"line":389,"column":29},"end":{"line":389,"column":45}}},"33":{"name":"(anonymous_33)","line":397,"loc":{"start":{"line":397,"column":30},"end":{"line":397,"column":50}}},"34":{"name":"(anonymous_34)","line":399,"loc":{"start":{"line":399,"column":34},"end":{"line":399,"column":51}}},"35":{"name":"(anonymous_35)","line":418,"loc":{"start":{"line":418,"column":26},"end":{"line":418,"column":37}}},"36":{"name":"(anonymous_36)","line":421,"loc":{"start":{"line":421,"column":29},"end":{"line":421,"column":45}}},"37":{"name":"(anonymous_37)","line":437,"loc":{"start":{"line":437,"column":23},"end":{"line":437,"column":34}}},"38":{"name":"(anonymous_38)","line":445,"loc":{"start":{"line":445,"column":29},"end":{"line":445,"column":47}}},"39":{"name":"(anonymous_39)","line":457,"loc":{"start":{"line":457,"column":23},"end":{"line":457,"column":34}}},"40":{"name":"(anonymous_40)","line":460,"loc":{"start":{"line":460,"column":26},"end":{"line":460,"column":42}}},"41":{"name":"(anonymous_41)","line":468,"loc":{"start":{"line":468,"column":32},"end":{"line":468,"column":57}}},"42":{"name":"(anonymous_42)","line":482,"loc":{"start":{"line":482,"column":28},"end":{"line":482,"column":53}}},"43":{"name":"(anonymous_43)","line":494,"loc":{"start":{"line":494,"column":15},"end":{"line":494,"column":26}}},"44":{"name":"(anonymous_44)","line":501,"loc":{"start":{"line":501,"column":27},"end":{"line":501,"column":38}}},"45":{"name":"(anonymous_45)","line":513,"loc":{"start":{"line":513,"column":28},"end":{"line":513,"column":44}}},"46":{"name":"(anonymous_46)","line":525,"loc":{"start":{"line":525,"column":15},"end":{"line":525,"column":26}}},"47":{"name":"(anonymous_47)","line":532,"loc":{"start":{"line":532,"column":30},"end":{"line":532,"column":46}}},"48":{"name":"(anonymous_48)","line":536,"loc":{"start":{"line":536,"column":32},"end":{"line":536,"column":58}}},"49":{"name":"(anonymous_49)","line":544,"loc":{"start":{"line":544,"column":12},"end":{"line":544,"column":23}}},"50":{"name":"(anonymous_50)","line":566,"loc":{"start":{"line":566,"column":29},"end":{"line":566,"column":46}}},"51":{"name":"(anonymous_51)","line":576,"loc":{"start":{"line":576,"column":23},"end":{"line":576,"column":34}}},"52":{"name":"(anonymous_52)","line":588,"loc":{"start":{"line":588,"column":26},"end":{"line":588,"column":42}}},"53":{"name":"(anonymous_53)","line":597,"loc":{"start":{"line":597,"column":28},"end":{"line":597,"column":45}}},"54":{"name":"(anonymous_54)","line":610,"loc":{"start":{"line":610,"column":25},"end":{"line":610,"column":40}}},"55":{"name":"(anonymous_55)","line":621,"loc":{"start":{"line":621,"column":30},"end":{"line":621,"column":49}}},"56":{"name":"(anonymous_56)","line":647,"loc":{"start":{"line":647,"column":24},"end":{"line":647,"column":35}}},"57":{"name":"(anonymous_57)","line":650,"loc":{"start":{"line":650,"column":27},"end":{"line":650,"column":43}}},"58":{"name":"(anonymous_58)","line":674,"loc":{"start":{"line":674,"column":26},"end":{"line":674,"column":51}}},"59":{"name":"(anonymous_59)","line":687,"loc":{"start":{"line":687,"column":13},"end":{"line":687,"column":24}}},"60":{"name":"(anonymous_60)","line":694,"loc":{"start":{"line":694,"column":28},"end":{"line":694,"column":53}}},"61":{"name":"(anonymous_61)","line":707,"loc":{"start":{"line":707,"column":13},"end":{"line":707,"column":24}}},"62":{"name":"(anonymous_62)","line":714,"loc":{"start":{"line":714,"column":28},"end":{"line":714,"column":53}}},"63":{"name":"(anonymous_63)","line":764,"loc":{"start":{"line":764,"column":14},"end":{"line":764,"column":43}}},"64":{"name":"(anonymous_64)","line":780,"loc":{"start":{"line":780,"column":29},"end":{"line":780,"column":45}}},"65":{"name":"(anonymous_65)","line":782,"loc":{"start":{"line":782,"column":57},"end":{"line":782,"column":83}}},"66":{"name":"(anonymous_66)","line":792,"loc":{"start":{"line":792,"column":26},"end":{"line":792,"column":42}}},"67":{"name":"(anonymous_67)","line":804,"loc":{"start":{"line":804,"column":12},"end":{"line":804,"column":27}}},"68":{"name":"(anonymous_68)","line":814,"loc":{"start":{"line":814,"column":24},"end":{"line":814,"column":35}}},"69":{"name":"(anonymous_69)","line":817,"loc":{"start":{"line":817,"column":27},"end":{"line":817,"column":43}}},"70":{"name":"(anonymous_70)","line":824,"loc":{"start":{"line":824,"column":11},"end":{"line":824,"column":31}}},"71":{"name":"(anonymous_71)","line":887,"loc":{"start":{"line":887,"column":33},"end":{"line":887,"column":54}}},"72":{"name":"(anonymous_72)","line":903,"loc":{"start":{"line":903,"column":32},"end":{"line":903,"column":58}}},"73":{"name":"(anonymous_73)","line":912,"loc":{"start":{"line":912,"column":34},"end":{"line":912,"column":55}}},"74":{"name":"(anonymous_74)","line":928,"loc":{"start":{"line":928,"column":33},"end":{"line":928,"column":59}}},"75":{"name":"(anonymous_75)","line":932,"loc":{"start":{"line":932,"column":29},"end":{"line":932,"column":47}}},"76":{"name":"(anonymous_76)","line":933,"loc":{"start":{"line":933,"column":26},"end":{"line":933,"column":46}}},"77":{"name":"(anonymous_77)","line":936,"loc":{"start":{"line":936,"column":13},"end":{"line":936,"column":24}}},"78":{"name":"(anonymous_78)","line":983,"loc":{"start":{"line":983,"column":18},"end":{"line":983,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":58,"column":0},"end":{"line":59,"column":2}},"3":{"start":{"line":61,"column":0},"end":{"line":61,"column":37}},"4":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"5":{"start":{"line":64,"column":2},"end":{"line":64,"column":29}},"6":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"7":{"start":{"line":67,"column":2},"end":{"line":67,"column":18}},"8":{"start":{"line":69,"column":0},"end":{"line":74,"column":2}},"9":{"start":{"line":70,"column":2},"end":{"line":73,"column":3}},"10":{"start":{"line":71,"column":4},"end":{"line":71,"column":26}},"11":{"start":{"line":72,"column":4},"end":{"line":72,"column":59}},"12":{"start":{"line":75,"column":0},"end":{"line":80,"column":2}},"13":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"14":{"start":{"line":77,"column":4},"end":{"line":77,"column":43}},"15":{"start":{"line":79,"column":2},"end":{"line":79,"column":15}},"16":{"start":{"line":82,"column":0},"end":{"line":100,"column":2}},"17":{"start":{"line":83,"column":2},"end":{"line":83,"column":22}},"18":{"start":{"line":85,"column":2},"end":{"line":94,"column":3}},"19":{"start":{"line":86,"column":4},"end":{"line":93,"column":6}},"20":{"start":{"line":87,"column":6},"end":{"line":91,"column":7}},"21":{"start":{"line":88,"column":8},"end":{"line":88,"column":44}},"22":{"start":{"line":89,"column":8},"end":{"line":89,"column":72}},"23":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}},"24":{"start":{"line":92,"column":6},"end":{"line":92,"column":38}},"25":{"start":{"line":96,"column":2},"end":{"line":96,"column":39}},"26":{"start":{"line":97,"column":2},"end":{"line":97,"column":30}},"27":{"start":{"line":99,"column":2},"end":{"line":99,"column":21}},"28":{"start":{"line":110,"column":0},"end":{"line":121,"column":3}},"29":{"start":{"line":111,"column":2},"end":{"line":114,"column":4}},"30":{"start":{"line":116,"column":2},"end":{"line":116,"column":60}},"31":{"start":{"line":116,"column":33},"end":{"line":116,"column":60}},"32":{"start":{"line":118,"column":2},"end":{"line":118,"column":25}},"33":{"start":{"line":119,"column":2},"end":{"line":119,"column":32}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":39}},"35":{"start":{"line":123,"column":0},"end":{"line":123,"column":45}},"36":{"start":{"line":124,"column":0},"end":{"line":126,"column":2}},"37":{"start":{"line":125,"column":2},"end":{"line":125,"column":77}},"38":{"start":{"line":127,"column":0},"end":{"line":136,"column":2}},"39":{"start":{"line":128,"column":2},"end":{"line":133,"column":3}},"40":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"41":{"start":{"line":130,"column":6},"end":{"line":130,"column":18}},"42":{"start":{"line":132,"column":4},"end":{"line":132,"column":94}},"43":{"start":{"line":135,"column":2},"end":{"line":135,"column":14}},"44":{"start":{"line":137,"column":0},"end":{"line":143,"column":3}},"45":{"start":{"line":139,"column":4},"end":{"line":139,"column":24}},"46":{"start":{"line":140,"column":4},"end":{"line":140,"column":31}},"47":{"start":{"line":141,"column":4},"end":{"line":141,"column":16}},"48":{"start":{"line":152,"column":0},"end":{"line":160,"column":3}},"49":{"start":{"line":153,"column":2},"end":{"line":156,"column":4}},"50":{"start":{"line":158,"column":2},"end":{"line":158,"column":56}},"51":{"start":{"line":158,"column":31},"end":{"line":158,"column":56}},"52":{"start":{"line":159,"column":2},"end":{"line":159,"column":32}},"53":{"start":{"line":162,"column":0},"end":{"line":162,"column":39}},"54":{"start":{"line":163,"column":0},"end":{"line":165,"column":2}},"55":{"start":{"line":164,"column":2},"end":{"line":164,"column":74}},"56":{"start":{"line":171,"column":0},"end":{"line":178,"column":3}},"57":{"start":{"line":172,"column":2},"end":{"line":174,"column":4}},"58":{"start":{"line":175,"column":2},"end":{"line":175,"column":56}},"59":{"start":{"line":175,"column":31},"end":{"line":175,"column":56}},"60":{"start":{"line":176,"column":2},"end":{"line":176,"column":25}},"61":{"start":{"line":177,"column":2},"end":{"line":177,"column":38}},"62":{"start":{"line":180,"column":0},"end":{"line":180,"column":39}},"63":{"start":{"line":181,"column":0},"end":{"line":192,"column":2}},"64":{"start":{"line":182,"column":2},"end":{"line":191,"column":3}},"65":{"start":{"line":184,"column":4},"end":{"line":184,"column":22}},"66":{"start":{"line":186,"column":4},"end":{"line":186,"column":24}},"67":{"start":{"line":188,"column":4},"end":{"line":188,"column":22}},"68":{"start":{"line":190,"column":4},"end":{"line":190,"column":20}},"69":{"start":{"line":193,"column":0},"end":{"line":199,"column":2}},"70":{"start":{"line":194,"column":2},"end":{"line":196,"column":4}},"71":{"start":{"line":195,"column":4},"end":{"line":195,"column":94}},"72":{"start":{"line":198,"column":2},"end":{"line":198,"column":14}},"73":{"start":{"line":201,"column":0},"end":{"line":209,"column":3}},"74":{"start":{"line":202,"column":2},"end":{"line":202,"column":25}},"75":{"start":{"line":203,"column":2},"end":{"line":203,"column":32}},"76":{"start":{"line":204,"column":2},"end":{"line":204,"column":36}},"77":{"start":{"line":205,"column":2},"end":{"line":205,"column":36}},"78":{"start":{"line":206,"column":2},"end":{"line":206,"column":38}},"79":{"start":{"line":207,"column":2},"end":{"line":207,"column":30}},"80":{"start":{"line":208,"column":2},"end":{"line":208,"column":36}},"81":{"start":{"line":211,"column":0},"end":{"line":211,"column":45}},"82":{"start":{"line":212,"column":0},"end":{"line":228,"column":2}},"83":{"start":{"line":213,"column":2},"end":{"line":213,"column":24}},"84":{"start":{"line":214,"column":2},"end":{"line":220,"column":3}},"85":{"start":{"line":215,"column":4},"end":{"line":215,"column":33}},"86":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"87":{"start":{"line":217,"column":6},"end":{"line":217,"column":37}},"88":{"start":{"line":219,"column":4},"end":{"line":219,"column":18}},"89":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"90":{"start":{"line":222,"column":4},"end":{"line":222,"column":26}},"91":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"92":{"start":{"line":225,"column":4},"end":{"line":225,"column":26}},"93":{"start":{"line":227,"column":2},"end":{"line":227,"column":16}},"94":{"start":{"line":230,"column":0},"end":{"line":236,"column":2}},"95":{"start":{"line":231,"column":2},"end":{"line":233,"column":3}},"96":{"start":{"line":232,"column":4},"end":{"line":232,"column":94}},"97":{"start":{"line":235,"column":2},"end":{"line":235,"column":14}},"98":{"start":{"line":238,"column":0},"end":{"line":244,"column":3}},"99":{"start":{"line":240,"column":4},"end":{"line":240,"column":26}},"100":{"start":{"line":241,"column":4},"end":{"line":241,"column":33}},"101":{"start":{"line":242,"column":4},"end":{"line":242,"column":16}},"102":{"start":{"line":245,"column":0},"end":{"line":251,"column":3}},"103":{"start":{"line":247,"column":4},"end":{"line":247,"column":26}},"104":{"start":{"line":248,"column":4},"end":{"line":248,"column":33}},"105":{"start":{"line":249,"column":4},"end":{"line":249,"column":16}},"106":{"start":{"line":260,"column":0},"end":{"line":266,"column":3}},"107":{"start":{"line":261,"column":2},"end":{"line":263,"column":4}},"108":{"start":{"line":264,"column":2},"end":{"line":264,"column":62}},"109":{"start":{"line":264,"column":34},"end":{"line":264,"column":62}},"110":{"start":{"line":265,"column":2},"end":{"line":265,"column":29}},"111":{"start":{"line":268,"column":0},"end":{"line":268,"column":48}},"112":{"start":{"line":269,"column":0},"end":{"line":275,"column":2}},"113":{"start":{"line":270,"column":2},"end":{"line":272,"column":3}},"114":{"start":{"line":271,"column":4},"end":{"line":271,"column":95}},"115":{"start":{"line":274,"column":2},"end":{"line":274,"column":14}},"116":{"start":{"line":287,"column":0},"end":{"line":293,"column":3}},"117":{"start":{"line":288,"column":2},"end":{"line":290,"column":4}},"118":{"start":{"line":291,"column":2},"end":{"line":291,"column":60}},"119":{"start":{"line":291,"column":33},"end":{"line":291,"column":60}},"120":{"start":{"line":292,"column":2},"end":{"line":292,"column":29}},"121":{"start":{"line":295,"column":0},"end":{"line":295,"column":45}},"122":{"start":{"line":296,"column":0},"end":{"line":302,"column":2}},"123":{"start":{"line":297,"column":2},"end":{"line":299,"column":3}},"124":{"start":{"line":298,"column":4},"end":{"line":298,"column":94}},"125":{"start":{"line":301,"column":2},"end":{"line":301,"column":14}},"126":{"start":{"line":311,"column":0},"end":{"line":318,"column":3}},"127":{"start":{"line":312,"column":2},"end":{"line":315,"column":4}},"128":{"start":{"line":316,"column":2},"end":{"line":316,"column":58}},"129":{"start":{"line":316,"column":32},"end":{"line":316,"column":58}},"130":{"start":{"line":317,"column":2},"end":{"line":317,"column":29}},"131":{"start":{"line":320,"column":0},"end":{"line":320,"column":42}},"132":{"start":{"line":321,"column":0},"end":{"line":327,"column":2}},"133":{"start":{"line":322,"column":2},"end":{"line":324,"column":3}},"134":{"start":{"line":323,"column":4},"end":{"line":323,"column":93}},"135":{"start":{"line":326,"column":2},"end":{"line":326,"column":14}},"136":{"start":{"line":336,"column":0},"end":{"line":343,"column":3}},"137":{"start":{"line":337,"column":2},"end":{"line":340,"column":4}},"138":{"start":{"line":341,"column":2},"end":{"line":341,"column":56}},"139":{"start":{"line":341,"column":31},"end":{"line":341,"column":56}},"140":{"start":{"line":342,"column":2},"end":{"line":342,"column":29}},"141":{"start":{"line":345,"column":0},"end":{"line":345,"column":39}},"142":{"start":{"line":354,"column":0},"end":{"line":361,"column":3}},"143":{"start":{"line":355,"column":2},"end":{"line":358,"column":4}},"144":{"start":{"line":359,"column":2},"end":{"line":359,"column":60}},"145":{"start":{"line":359,"column":33},"end":{"line":359,"column":60}},"146":{"start":{"line":360,"column":2},"end":{"line":360,"column":29}},"147":{"start":{"line":363,"column":0},"end":{"line":363,"column":55}},"148":{"start":{"line":372,"column":0},"end":{"line":379,"column":3}},"149":{"start":{"line":373,"column":2},"end":{"line":376,"column":4}},"150":{"start":{"line":377,"column":2},"end":{"line":377,"column":62}},"151":{"start":{"line":377,"column":34},"end":{"line":377,"column":62}},"152":{"start":{"line":378,"column":2},"end":{"line":378,"column":29}},"153":{"start":{"line":381,"column":0},"end":{"line":381,"column":48}},"154":{"start":{"line":382,"column":0},"end":{"line":388,"column":2}},"155":{"start":{"line":383,"column":2},"end":{"line":385,"column":3}},"156":{"start":{"line":384,"column":4},"end":{"line":384,"column":90}},"157":{"start":{"line":387,"column":2},"end":{"line":387,"column":19}},"158":{"start":{"line":389,"column":0},"end":{"line":395,"column":2}},"159":{"start":{"line":390,"column":2},"end":{"line":392,"column":3}},"160":{"start":{"line":391,"column":4},"end":{"line":391,"column":95}},"161":{"start":{"line":394,"column":2},"end":{"line":394,"column":14}},"162":{"start":{"line":397,"column":0},"end":{"line":409,"column":3}},"163":{"start":{"line":398,"column":2},"end":{"line":398,"column":36}},"164":{"start":{"line":399,"column":2},"end":{"line":408,"column":4}},"165":{"start":{"line":400,"column":4},"end":{"line":405,"column":5}},"166":{"start":{"line":401,"column":6},"end":{"line":401,"column":21}},"167":{"start":{"line":402,"column":11},"end":{"line":405,"column":5}},"168":{"start":{"line":403,"column":6},"end":{"line":403,"column":38}},"169":{"start":{"line":404,"column":6},"end":{"line":404,"column":38}},"170":{"start":{"line":407,"column":4},"end":{"line":407,"column":17}},"171":{"start":{"line":415,"column":0},"end":{"line":415,"column":34}},"172":{"start":{"line":417,"column":0},"end":{"line":417,"column":48}},"173":{"start":{"line":418,"column":0},"end":{"line":420,"column":2}},"174":{"start":{"line":419,"column":2},"end":{"line":419,"column":22}},"175":{"start":{"line":421,"column":0},"end":{"line":427,"column":2}},"176":{"start":{"line":422,"column":2},"end":{"line":424,"column":3}},"177":{"start":{"line":423,"column":4},"end":{"line":423,"column":95}},"178":{"start":{"line":426,"column":2},"end":{"line":426,"column":14}},"179":{"start":{"line":434,"column":0},"end":{"line":434,"column":31}},"180":{"start":{"line":436,"column":0},"end":{"line":436,"column":39}},"181":{"start":{"line":437,"column":0},"end":{"line":439,"column":2}},"182":{"start":{"line":438,"column":2},"end":{"line":438,"column":16}},"183":{"start":{"line":445,"column":0},"end":{"line":454,"column":3}},"184":{"start":{"line":446,"column":2},"end":{"line":448,"column":6}},"185":{"start":{"line":450,"column":2},"end":{"line":450,"column":56}},"186":{"start":{"line":450,"column":31},"end":{"line":450,"column":56}},"187":{"start":{"line":452,"column":2},"end":{"line":452,"column":25}},"188":{"start":{"line":453,"column":2},"end":{"line":453,"column":38}},"189":{"start":{"line":456,"column":0},"end":{"line":456,"column":39}},"190":{"start":{"line":457,"column":0},"end":{"line":459,"column":2}},"191":{"start":{"line":458,"column":2},"end":{"line":458,"column":20}},"192":{"start":{"line":460,"column":0},"end":{"line":466,"column":2}},"193":{"start":{"line":461,"column":2},"end":{"line":463,"column":3}},"194":{"start":{"line":462,"column":4},"end":{"line":462,"column":92}},"195":{"start":{"line":465,"column":2},"end":{"line":465,"column":14}},"196":{"start":{"line":468,"column":0},"end":{"line":480,"column":2}},"197":{"start":{"line":469,"column":2},"end":{"line":477,"column":3}},"198":{"start":{"line":470,"column":4},"end":{"line":474,"column":5}},"199":{"start":{"line":471,"column":6},"end":{"line":471,"column":49}},"200":{"start":{"line":473,"column":6},"end":{"line":473,"column":54}},"201":{"start":{"line":476,"column":4},"end":{"line":476,"column":26}},"202":{"start":{"line":479,"column":2},"end":{"line":479,"column":14}},"203":{"start":{"line":482,"column":0},"end":{"line":487,"column":2}},"204":{"start":{"line":483,"column":2},"end":{"line":483,"column":44}},"205":{"start":{"line":486,"column":2},"end":{"line":486,"column":50}},"206":{"start":{"line":494,"column":0},"end":{"line":497,"column":2}},"207":{"start":{"line":495,"column":2},"end":{"line":495,"column":57}},"208":{"start":{"line":495,"column":35},"end":{"line":495,"column":57}},"209":{"start":{"line":496,"column":2},"end":{"line":496,"column":34}},"210":{"start":{"line":498,"column":0},"end":{"line":498,"column":34}},"211":{"start":{"line":500,"column":0},"end":{"line":500,"column":51}},"212":{"start":{"line":501,"column":0},"end":{"line":503,"column":2}},"213":{"start":{"line":502,"column":2},"end":{"line":502,"column":16}},"214":{"start":{"line":510,"column":0},"end":{"line":510,"column":33}},"215":{"start":{"line":512,"column":0},"end":{"line":512,"column":45}},"216":{"start":{"line":513,"column":0},"end":{"line":519,"column":2}},"217":{"start":{"line":514,"column":2},"end":{"line":516,"column":3}},"218":{"start":{"line":515,"column":4},"end":{"line":515,"column":94}},"219":{"start":{"line":518,"column":2},"end":{"line":518,"column":14}},"220":{"start":{"line":525,"column":0},"end":{"line":528,"column":2}},"221":{"start":{"line":526,"column":2},"end":{"line":526,"column":57}},"222":{"start":{"line":526,"column":35},"end":{"line":526,"column":57}},"223":{"start":{"line":527,"column":2},"end":{"line":527,"column":34}},"224":{"start":{"line":529,"column":0},"end":{"line":529,"column":34}},"225":{"start":{"line":531,"column":0},"end":{"line":531,"column":47}},"226":{"start":{"line":532,"column":0},"end":{"line":534,"column":2}},"227":{"start":{"line":533,"column":2},"end":{"line":533,"column":14}},"228":{"start":{"line":536,"column":0},"end":{"line":538,"column":2}},"229":{"start":{"line":537,"column":2},"end":{"line":537,"column":31}},"230":{"start":{"line":544,"column":0},"end":{"line":547,"column":2}},"231":{"start":{"line":545,"column":2},"end":{"line":545,"column":51}},"232":{"start":{"line":545,"column":32},"end":{"line":545,"column":51}},"233":{"start":{"line":546,"column":2},"end":{"line":546,"column":34}},"234":{"start":{"line":548,"column":0},"end":{"line":548,"column":31}},"235":{"start":{"line":550,"column":0},"end":{"line":550,"column":42}},"236":{"start":{"line":556,"column":0},"end":{"line":556,"column":30}},"237":{"start":{"line":558,"column":0},"end":{"line":558,"column":36}},"238":{"start":{"line":566,"column":0},"end":{"line":573,"column":3}},"239":{"start":{"line":567,"column":2},"end":{"line":569,"column":4}},"240":{"start":{"line":570,"column":2},"end":{"line":570,"column":56}},"241":{"start":{"line":570,"column":31},"end":{"line":570,"column":56}},"242":{"start":{"line":571,"column":2},"end":{"line":571,"column":25}},"243":{"start":{"line":572,"column":2},"end":{"line":572,"column":38}},"244":{"start":{"line":575,"column":0},"end":{"line":575,"column":39}},"245":{"start":{"line":576,"column":0},"end":{"line":587,"column":2}},"246":{"start":{"line":577,"column":2},"end":{"line":586,"column":3}},"247":{"start":{"line":579,"column":4},"end":{"line":579,"column":22}},"248":{"start":{"line":581,"column":4},"end":{"line":581,"column":24}},"249":{"start":{"line":583,"column":4},"end":{"line":583,"column":22}},"250":{"start":{"line":585,"column":4},"end":{"line":585,"column":20}},"251":{"start":{"line":588,"column":0},"end":{"line":594,"column":2}},"252":{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},"253":{"start":{"line":590,"column":4},"end":{"line":590,"column":92}},"254":{"start":{"line":593,"column":2},"end":{"line":593,"column":14}},"255":{"start":{"line":596,"column":0},"end":{"line":596,"column":30}},"256":{"start":{"line":597,"column":0},"end":{"line":608,"column":2}},"257":{"start":{"line":598,"column":2},"end":{"line":604,"column":3}},"258":{"start":{"line":599,"column":4},"end":{"line":603,"column":5}},"259":{"start":{"line":600,"column":6},"end":{"line":600,"column":32}},"260":{"start":{"line":602,"column":6},"end":{"line":602,"column":43}},"261":{"start":{"line":605,"column":2},"end":{"line":605,"column":34}},"262":{"start":{"line":607,"column":2},"end":{"line":607,"column":27}},"263":{"start":{"line":610,"column":0},"end":{"line":612,"column":2}},"264":{"start":{"line":611,"column":2},"end":{"line":611,"column":26}},"265":{"start":{"line":621,"column":0},"end":{"line":635,"column":3}},"266":{"start":{"line":622,"column":2},"end":{"line":622,"column":74}},"267":{"start":{"line":624,"column":2},"end":{"line":624,"column":56}},"268":{"start":{"line":624,"column":24},"end":{"line":624,"column":56}},"269":{"start":{"line":626,"column":2},"end":{"line":628,"column":3}},"270":{"start":{"line":627,"column":4},"end":{"line":627,"column":44}},"271":{"start":{"line":630,"column":2},"end":{"line":630,"column":58}},"272":{"start":{"line":630,"column":32},"end":{"line":630,"column":58}},"273":{"start":{"line":631,"column":2},"end":{"line":631,"column":34}},"274":{"start":{"line":633,"column":2},"end":{"line":633,"column":38}},"275":{"start":{"line":634,"column":2},"end":{"line":634,"column":25}},"276":{"start":{"line":637,"column":0},"end":{"line":644,"column":2}},"277":{"start":{"line":646,"column":0},"end":{"line":646,"column":42}},"278":{"start":{"line":647,"column":0},"end":{"line":649,"column":2}},"279":{"start":{"line":648,"column":2},"end":{"line":648,"column":54}},"280":{"start":{"line":650,"column":0},"end":{"line":664,"column":2}},"281":{"start":{"line":651,"column":2},"end":{"line":653,"column":3}},"282":{"start":{"line":652,"column":4},"end":{"line":652,"column":28}},"283":{"start":{"line":655,"column":2},"end":{"line":657,"column":3}},"284":{"start":{"line":656,"column":4},"end":{"line":656,"column":93}},"285":{"start":{"line":659,"column":2},"end":{"line":661,"column":3}},"286":{"start":{"line":660,"column":4},"end":{"line":660,"column":92}},"287":{"start":{"line":663,"column":2},"end":{"line":663,"column":14}},"288":{"start":{"line":671,"column":0},"end":{"line":671,"column":31}},"289":{"start":{"line":673,"column":0},"end":{"line":673,"column":39}},"290":{"start":{"line":674,"column":0},"end":{"line":680,"column":2}},"291":{"start":{"line":675,"column":2},"end":{"line":677,"column":3}},"292":{"start":{"line":676,"column":4},"end":{"line":676,"column":92}},"293":{"start":{"line":679,"column":2},"end":{"line":679,"column":14}},"294":{"start":{"line":687,"column":0},"end":{"line":690,"column":2}},"295":{"start":{"line":688,"column":2},"end":{"line":688,"column":53}},"296":{"start":{"line":688,"column":33},"end":{"line":688,"column":53}},"297":{"start":{"line":689,"column":2},"end":{"line":689,"column":34}},"298":{"start":{"line":691,"column":0},"end":{"line":691,"column":32}},"299":{"start":{"line":693,"column":0},"end":{"line":693,"column":45}},"300":{"start":{"line":694,"column":0},"end":{"line":700,"column":2}},"301":{"start":{"line":695,"column":2},"end":{"line":697,"column":3}},"302":{"start":{"line":696,"column":4},"end":{"line":696,"column":92}},"303":{"start":{"line":699,"column":2},"end":{"line":699,"column":14}},"304":{"start":{"line":707,"column":0},"end":{"line":710,"column":2}},"305":{"start":{"line":708,"column":2},"end":{"line":708,"column":53}},"306":{"start":{"line":708,"column":33},"end":{"line":708,"column":53}},"307":{"start":{"line":709,"column":2},"end":{"line":709,"column":34}},"308":{"start":{"line":711,"column":0},"end":{"line":711,"column":32}},"309":{"start":{"line":713,"column":0},"end":{"line":713,"column":45}},"310":{"start":{"line":714,"column":0},"end":{"line":720,"column":2}},"311":{"start":{"line":715,"column":2},"end":{"line":717,"column":3}},"312":{"start":{"line":716,"column":4},"end":{"line":716,"column":94}},"313":{"start":{"line":719,"column":2},"end":{"line":719,"column":14}},"314":{"start":{"line":764,"column":0},"end":{"line":770,"column":2}},"315":{"start":{"line":765,"column":2},"end":{"line":765,"column":73}},"316":{"start":{"line":765,"column":34},"end":{"line":765,"column":73}},"317":{"start":{"line":766,"column":2},"end":{"line":766,"column":70}},"318":{"start":{"line":766,"column":40},"end":{"line":766,"column":70}},"319":{"start":{"line":768,"column":2},"end":{"line":768,"column":31}},"320":{"start":{"line":769,"column":2},"end":{"line":769,"column":23}},"321":{"start":{"line":771,"column":0},"end":{"line":771,"column":33}},"322":{"start":{"line":773,"column":0},"end":{"line":773,"column":48}},"323":{"start":{"line":780,"column":0},"end":{"line":789,"column":3}},"324":{"start":{"line":781,"column":2},"end":{"line":785,"column":4}},"325":{"start":{"line":783,"column":6},"end":{"line":783,"column":73}},"326":{"start":{"line":786,"column":2},"end":{"line":786,"column":56}},"327":{"start":{"line":786,"column":31},"end":{"line":786,"column":56}},"328":{"start":{"line":787,"column":2},"end":{"line":787,"column":31}},"329":{"start":{"line":788,"column":2},"end":{"line":788,"column":25}},"330":{"start":{"line":791,"column":0},"end":{"line":791,"column":39}},"331":{"start":{"line":792,"column":0},"end":{"line":798,"column":2}},"332":{"start":{"line":793,"column":2},"end":{"line":795,"column":3}},"333":{"start":{"line":794,"column":4},"end":{"line":794,"column":113}},"334":{"start":{"line":797,"column":2},"end":{"line":797,"column":14}},"335":{"start":{"line":804,"column":0},"end":{"line":810,"column":2}},"336":{"start":{"line":805,"column":2},"end":{"line":807,"column":4}},"337":{"start":{"line":808,"column":2},"end":{"line":808,"column":58}},"338":{"start":{"line":808,"column":32},"end":{"line":808,"column":58}},"339":{"start":{"line":809,"column":2},"end":{"line":809,"column":85}},"340":{"start":{"line":811,"column":0},"end":{"line":811,"column":31}},"341":{"start":{"line":813,"column":0},"end":{"line":813,"column":42}},"342":{"start":{"line":814,"column":0},"end":{"line":816,"column":2}},"343":{"start":{"line":815,"column":2},"end":{"line":815,"column":34}},"344":{"start":{"line":817,"column":0},"end":{"line":823,"column":2}},"345":{"start":{"line":818,"column":2},"end":{"line":820,"column":3}},"346":{"start":{"line":819,"column":4},"end":{"line":819,"column":93}},"347":{"start":{"line":822,"column":2},"end":{"line":822,"column":14}},"348":{"start":{"line":824,"column":0},"end":{"line":826,"column":2}},"349":{"start":{"line":825,"column":2},"end":{"line":825,"column":58}},"350":{"start":{"line":828,"column":0},"end":{"line":834,"column":2}},"351":{"start":{"line":887,"column":0},"end":{"line":898,"column":3}},"352":{"start":{"line":888,"column":2},"end":{"line":891,"column":4}},"353":{"start":{"line":893,"column":2},"end":{"line":893,"column":64}},"354":{"start":{"line":893,"column":35},"end":{"line":893,"column":64}},"355":{"start":{"line":895,"column":2},"end":{"line":895,"column":25}},"356":{"start":{"line":896,"column":2},"end":{"line":896,"column":27}},"357":{"start":{"line":897,"column":2},"end":{"line":897,"column":27}},"358":{"start":{"line":900,"column":0},"end":{"line":900,"column":51}},"359":{"start":{"line":902,"column":0},"end":{"line":902,"column":34}},"360":{"start":{"line":903,"column":0},"end":{"line":905,"column":2}},"361":{"start":{"line":904,"column":2},"end":{"line":904,"column":68}},"362":{"start":{"line":912,"column":0},"end":{"line":923,"column":3}},"363":{"start":{"line":913,"column":2},"end":{"line":916,"column":4}},"364":{"start":{"line":918,"column":2},"end":{"line":918,"column":66}},"365":{"start":{"line":918,"column":36},"end":{"line":918,"column":66}},"366":{"start":{"line":920,"column":2},"end":{"line":920,"column":25}},"367":{"start":{"line":921,"column":2},"end":{"line":921,"column":27}},"368":{"start":{"line":922,"column":2},"end":{"line":922,"column":27}},"369":{"start":{"line":925,"column":0},"end":{"line":925,"column":54}},"370":{"start":{"line":927,"column":0},"end":{"line":927,"column":35}},"371":{"start":{"line":928,"column":0},"end":{"line":930,"column":2}},"372":{"start":{"line":929,"column":2},"end":{"line":929,"column":68}},"373":{"start":{"line":932,"column":0},"end":{"line":946,"column":3}},"374":{"start":{"line":933,"column":2},"end":{"line":945,"column":5}},"375":{"start":{"line":934,"column":4},"end":{"line":944,"column":5}},"376":{"start":{"line":935,"column":6},"end":{"line":943,"column":9}},"377":{"start":{"line":937,"column":10},"end":{"line":937,"column":40}},"378":{"start":{"line":938,"column":10},"end":{"line":940,"column":11}},"379":{"start":{"line":939,"column":12},"end":{"line":939,"column":28}},"380":{"start":{"line":941,"column":10},"end":{"line":941,"column":61}},"381":{"start":{"line":948,"column":0},"end":{"line":981,"column":2}},"382":{"start":{"line":983,"column":0},"end":{"line":985,"column":3}},"383":{"start":{"line":984,"column":2},"end":{"line":984,"column":22}},"384":{"start":{"line":987,"column":0},"end":{"line":987,"column":74}},"385":{"start":{"line":988,"column":0},"end":{"line":988,"column":68}},"386":{"start":{"line":989,"column":0},"end":{"line":989,"column":36}},"387":{"start":{"line":990,"column":0},"end":{"line":990,"column":70}},"388":{"start":{"line":991,"column":0},"end":{"line":991,"column":68}},"389":{"start":{"line":993,"column":0},"end":{"line":993,"column":27}}},"branchMap":{"1":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"2":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"4":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"5":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":42}},{"start":{"line":111,"column":46},"end":{"line":111,"column":52}},{"start":{"line":111,"column":56},"end":{"line":114,"column":3}}]},"6":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"7":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":17},"end":{"line":120,"column":31}},{"start":{"line":120,"column":35},"end":{"line":120,"column":38}}]},"8":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":61},"end":{"line":125,"column":70}},{"start":{"line":125,"column":73},"end":{"line":125,"column":75}}]},"9":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"11":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":9},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":54}},{"start":{"line":129,"column":59},"end":{"line":129,"column":76}}]},"12":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":42}},{"start":{"line":153,"column":46},"end":{"line":153,"column":52}},{"start":{"line":153,"column":56},"end":{"line":156,"column":3}}]},"13":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"14":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":58},"end":{"line":164,"column":67}},{"start":{"line":164,"column":70},"end":{"line":164,"column":72}}]},"15":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":16},"end":{"line":172,"column":42}},{"start":{"line":172,"column":46},"end":{"line":172,"column":52}},{"start":{"line":172,"column":56},"end":{"line":174,"column":3}}]},"16":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"17":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":17},"end":{"line":177,"column":31}},{"start":{"line":177,"column":35},"end":{"line":177,"column":37}}]},"18":{"line":182,"type":"switch","locations":[{"start":{"line":183,"column":2},"end":{"line":184,"column":22}},{"start":{"line":185,"column":2},"end":{"line":186,"column":24}},{"start":{"line":187,"column":2},"end":{"line":188,"column":22}},{"start":{"line":189,"column":2},"end":{"line":190,"column":20}}]},"19":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"20":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"21":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"22":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"23":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"24":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"25":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":16},"end":{"line":261,"column":42}},{"start":{"line":261,"column":46},"end":{"line":261,"column":52}},{"start":{"line":261,"column":56},"end":{"line":263,"column":3}}]},"26":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"27":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"28":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":16},"end":{"line":288,"column":42}},{"start":{"line":288,"column":46},"end":{"line":288,"column":52}},{"start":{"line":288,"column":56},"end":{"line":290,"column":3}}]},"29":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"30":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"31":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":16},"end":{"line":312,"column":42}},{"start":{"line":312,"column":46},"end":{"line":312,"column":52}},{"start":{"line":312,"column":56},"end":{"line":315,"column":3}}]},"32":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"33":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"34":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":16},"end":{"line":337,"column":42}},{"start":{"line":337,"column":46},"end":{"line":337,"column":52}},{"start":{"line":337,"column":56},"end":{"line":340,"column":3}}]},"35":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"36":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":16},"end":{"line":355,"column":42}},{"start":{"line":355,"column":46},"end":{"line":355,"column":52}},{"start":{"line":355,"column":56},"end":{"line":358,"column":3}}]},"37":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":359,"column":2}},{"start":{"line":359,"column":2},"end":{"line":359,"column":2}}]},"38":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":16},"end":{"line":373,"column":45}},{"start":{"line":373,"column":49},"end":{"line":373,"column":58}},{"start":{"line":373,"column":62},"end":{"line":376,"column":3}}]},"39":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"40":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"41":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":6},"end":{"line":383,"column":21}},{"start":{"line":383,"column":25},"end":{"line":383,"column":36}}]},"42":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"43":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":4}},{"start":{"line":400,"column":4},"end":{"line":400,"column":4}}]},"44":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":11},"end":{"line":402,"column":11}},{"start":{"line":402,"column":11},"end":{"line":402,"column":11}}]},"45":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":29},"end":{"line":403,"column":32}},{"start":{"line":403,"column":35},"end":{"line":403,"column":37}}]},"46":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":2},"end":{"line":422,"column":2}},{"start":{"line":422,"column":2},"end":{"line":422,"column":2}}]},"47":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":16},"end":{"line":446,"column":42}},{"start":{"line":446,"column":46},"end":{"line":446,"column":52}},{"start":{"line":446,"column":56},"end":{"line":448,"column":5}}]},"48":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":2},"end":{"line":450,"column":2}},{"start":{"line":450,"column":2},"end":{"line":450,"column":2}}]},"49":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":17},"end":{"line":453,"column":31}},{"start":{"line":453,"column":35},"end":{"line":453,"column":37}}]},"50":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"51":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"52":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":4},"end":{"line":470,"column":4}},{"start":{"line":470,"column":4},"end":{"line":470,"column":4}}]},"53":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":2},"end":{"line":495,"column":2}},{"start":{"line":495,"column":2},"end":{"line":495,"column":2}}]},"54":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"55":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":2},"end":{"line":526,"column":2}},{"start":{"line":526,"column":2},"end":{"line":526,"column":2}}]},"56":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":2},"end":{"line":545,"column":2}},{"start":{"line":545,"column":2},"end":{"line":545,"column":2}}]},"57":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":16},"end":{"line":567,"column":42}},{"start":{"line":567,"column":46},"end":{"line":567,"column":52}},{"start":{"line":567,"column":56},"end":{"line":569,"column":3}}]},"58":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":2},"end":{"line":570,"column":2}},{"start":{"line":570,"column":2},"end":{"line":570,"column":2}}]},"59":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":17},"end":{"line":572,"column":31}},{"start":{"line":572,"column":35},"end":{"line":572,"column":37}}]},"60":{"line":577,"type":"switch","locations":[{"start":{"line":578,"column":2},"end":{"line":579,"column":22}},{"start":{"line":580,"column":2},"end":{"line":581,"column":24}},{"start":{"line":582,"column":2},"end":{"line":583,"column":22}},{"start":{"line":584,"column":2},"end":{"line":585,"column":20}}]},"61":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":2},"end":{"line":589,"column":2}},{"start":{"line":589,"column":2},"end":{"line":589,"column":2}}]},"62":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":6},"end":{"line":589,"column":24}},{"start":{"line":589,"column":28},"end":{"line":589,"column":51}}]},"63":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":2},"end":{"line":598,"column":2}},{"start":{"line":598,"column":2},"end":{"line":598,"column":2}}]},"64":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":599,"column":4}},{"start":{"line":599,"column":4},"end":{"line":599,"column":4}}]},"65":{"line":622,"type":"cond-expr","locations":[{"start":{"line":622,"column":43},"end":{"line":622,"column":50}},{"start":{"line":622,"column":53},"end":{"line":622,"column":73}}]},"66":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":2},"end":{"line":624,"column":2}},{"start":{"line":624,"column":2},"end":{"line":624,"column":2}}]},"67":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":2},"end":{"line":626,"column":2}},{"start":{"line":626,"column":2},"end":{"line":626,"column":2}}]},"68":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":2},"end":{"line":630,"column":2}},{"start":{"line":630,"column":2},"end":{"line":630,"column":2}}]},"69":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":2},"end":{"line":651,"column":2}},{"start":{"line":651,"column":2},"end":{"line":651,"column":2}}]},"70":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":6},"end":{"line":651,"column":28}},{"start":{"line":651,"column":32},"end":{"line":651,"column":47}}]},"71":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":2},"end":{"line":655,"column":2}},{"start":{"line":655,"column":2},"end":{"line":655,"column":2}}]},"72":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":2},"end":{"line":659,"column":2}},{"start":{"line":659,"column":2},"end":{"line":659,"column":2}}]},"73":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":2},"end":{"line":675,"column":2}},{"start":{"line":675,"column":2},"end":{"line":675,"column":2}}]},"74":{"line":675,"type":"binary-expr","locations":[{"start":{"line":675,"column":6},"end":{"line":675,"column":24}},{"start":{"line":675,"column":28},"end":{"line":675,"column":52}},{"start":{"line":675,"column":57},"end":{"line":675,"column":65}},{"start":{"line":675,"column":69},"end":{"line":675,"column":91}}]},"75":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":2},"end":{"line":688,"column":2}},{"start":{"line":688,"column":2},"end":{"line":688,"column":2}}]},"76":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":2},"end":{"line":695,"column":2}},{"start":{"line":695,"column":2},"end":{"line":695,"column":2}}]},"77":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":6},"end":{"line":695,"column":24}},{"start":{"line":695,"column":28},"end":{"line":695,"column":52}},{"start":{"line":695,"column":57},"end":{"line":695,"column":65}},{"start":{"line":695,"column":69},"end":{"line":695,"column":91}}]},"78":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":2},"end":{"line":708,"column":2}},{"start":{"line":708,"column":2},"end":{"line":708,"column":2}}]},"79":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":2},"end":{"line":715,"column":2}},{"start":{"line":715,"column":2},"end":{"line":715,"column":2}}]},"80":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":6},"end":{"line":715,"column":24}},{"start":{"line":715,"column":28},"end":{"line":715,"column":55}},{"start":{"line":715,"column":60},"end":{"line":715,"column":68}},{"start":{"line":715,"column":72},"end":{"line":715,"column":94}}]},"81":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":2},"end":{"line":765,"column":2}},{"start":{"line":765,"column":2},"end":{"line":765,"column":2}}]},"82":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":2},"end":{"line":766,"column":2}},{"start":{"line":766,"column":2},"end":{"line":766,"column":2}}]},"83":{"line":781,"type":"binary-expr","locations":[{"start":{"line":781,"column":16},"end":{"line":781,"column":41}},{"start":{"line":781,"column":45},"end":{"line":781,"column":66}},{"start":{"line":781,"column":70},"end":{"line":781,"column":75}},{"start":{"line":781,"column":79},"end":{"line":785,"column":3}}]},"84":{"line":783,"type":"cond-expr","locations":[{"start":{"line":783,"column":52},"end":{"line":783,"column":59}},{"start":{"line":783,"column":62},"end":{"line":783,"column":71}}]},"85":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":2},"end":{"line":786,"column":2}},{"start":{"line":786,"column":2},"end":{"line":786,"column":2}}]},"86":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":2},"end":{"line":793,"column":2}},{"start":{"line":793,"column":2},"end":{"line":793,"column":2}}]},"87":{"line":805,"type":"cond-expr","locations":[{"start":{"line":805,"column":40},"end":{"line":805,"column":44}},{"start":{"line":805,"column":47},"end":{"line":807,"column":3}}]},"88":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":2},"end":{"line":808,"column":2}},{"start":{"line":808,"column":2},"end":{"line":808,"column":2}}]},"89":{"line":809,"type":"cond-expr","locations":[{"start":{"line":809,"column":51},"end":{"line":809,"column":69}},{"start":{"line":809,"column":72},"end":{"line":809,"column":84}}]},"90":{"line":818,"type":"if","locations":[{"start":{"line":818,"column":2},"end":{"line":818,"column":2}},{"start":{"line":818,"column":2},"end":{"line":818,"column":2}}]},"91":{"line":825,"type":"binary-expr","locations":[{"start":{"line":825,"column":9},"end":{"line":825,"column":29}},{"start":{"line":825,"column":33},"end":{"line":825,"column":57}}]},"92":{"line":888,"type":"cond-expr","locations":[{"start":{"line":888,"column":40},"end":{"line":888,"column":44}},{"start":{"line":888,"column":47},"end":{"line":891,"column":3}}]},"93":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":2},"end":{"line":893,"column":2}},{"start":{"line":893,"column":2},"end":{"line":893,"column":2}}]},"94":{"line":913,"type":"cond-expr","locations":[{"start":{"line":913,"column":40},"end":{"line":913,"column":44}},{"start":{"line":913,"column":47},"end":{"line":916,"column":3}}]},"95":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":2},"end":{"line":918,"column":2}},{"start":{"line":918,"column":2},"end":{"line":918,"column":2}}]},"96":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":4},"end":{"line":934,"column":4}},{"start":{"line":934,"column":4},"end":{"line":934,"column":4}}]},"97":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":10},"end":{"line":938,"column":10}},{"start":{"line":938,"column":10},"end":{"line":938,"column":10}}]}},"code":["'use strict';","/*jshint -W110 */","","var util = require('util')","  , _ = require('lodash')","  , Wkt = require('terraformer-wkt-parser')","  , sequelizeErrors = require('./errors')","  , warnings = {}","  , Validator = require('validator')","  , momentTz = require('moment-timezone')","  , moment = require('moment');","","/**"," * A convenience class holding commonly used data types. The datatypes are used when defining a new model using `Sequelize.define`, like this:"," * ```js"," * sequelize.define('model', {"," *   column: DataTypes.INTEGER"," * })"," * ```"," * When defining a model you can just as easily pass a string as type, but often using the types defined here is beneficial. For example, using `DataTypes.BLOB`, mean"," * that that column will be returned as an instance of `Buffer` when being fetched by sequelize."," *"," * Some data types have special properties that can be accessed in order to change the data type."," * For example, to get an unsigned integer with zerofill you can do `DataTypes.INTEGER.UNSIGNED.ZEROFILL`."," * The order you access the properties in do not matter, so `DataTypes.INTEGER.ZEROFILL.UNSIGNED` is fine as well. The available properties are listed under each data type."," *"," * To provide a length for the data type, you can invoke it like a function: `INTEGER(2)`"," *"," * Three of the values provided here (`NOW`, `UUIDV1` and `UUIDV4`) are special default values, that should not be used to define types. Instead they are used as shorthands for"," * defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:"," * ```js"," * sequelize.define('model', {"," *   uuid: {"," *     type: DataTypes.UUID,"," *     defaultValue: DataTypes.UUIDV1,"," *     primaryKey: true"," *   }"," * })"," * ```"," * There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplised"," * using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value"," * from a function."," * ```js"," * sequelize.define('model', {"," *   uuid: {"," *     type: DataTypes.UUID,"," *     defaultValue: function() {"," *       return generateMyId()"," *     },"," *     primaryKey: true"," *   }"," * })"," * ```"," *"," * @class DataTypes"," */","","var ABSTRACT = function(options) {","};","","ABSTRACT.prototype.dialectTypes = '';","","ABSTRACT.prototype.toString = function(options) {","  return this.toSql(options);","};","ABSTRACT.prototype.toSql = function() {","  return this.key;","};","ABSTRACT.warn = function(link, text) {","  if (!warnings[text]) {","    warnings[text] = true;","    console.warn('>> WARNING:', text, '\\n>> Check:', link);","  }","};","ABSTRACT.prototype.stringify = function (value, options) {","  if (this.$stringify) {","    return this.$stringify(value, options);","  }","  return value;","};","","ABSTRACT.inherits = function (Constructor) {","  var baseType = this;","","  if (!Constructor) {","    Constructor = function () {","      if (!(this instanceof Constructor)) {","        var args = [null].concat(arguments);","        var FactoryFunction = Constructor.bind.apply(Constructor, args);","        return new FactoryFunction();","      }","      baseType.apply(this, arguments);","    };","  }","","  util.inherits(Constructor, baseType); // Instance (prototype) methods","  _.extend(Constructor, this); // Static methods","","  return Constructor;","};","","","/**"," * A variable length string. Default length 255"," *"," * Available properties: `BINARY`"," *"," * @property STRING"," */","var STRING = ABSTRACT.inherits(function(length, binary) {","  var options = typeof length === 'object' && length || {","    length: length,","    binary: binary","  };","","  if (!(this instanceof STRING)) return new STRING(options);","","  this.options = options;","  this._binary = options.binary;","  this._length = options.length || 255;","});","","STRING.prototype.key = STRING.key = 'STRING';","STRING.prototype.toSql = function() {","  return 'VARCHAR(' + this._length + ')' + ((this._binary) ? ' BINARY' : '');","};","STRING.prototype.validate = function(value) {","  if (Object.prototype.toString.call(value) !== '[object String]') {","    if ((this.options.binary && Buffer.isBuffer(value)) || _.isNumber(value)) {","      return true;","    }","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));","  }","","  return true;","};","Object.defineProperty(STRING.prototype, 'BINARY', {","  get: function() {","    this._binary = true;","    this.options.binary = true;","    return this;","  }","});","","/**"," * A fixed length string. Default length 255"," *"," * Available properties: `BINARY`"," *"," * @property CHAR"," */","var CHAR = STRING.inherits(function(length, binary) {","  var options = typeof length === 'object' && length || {","    length: length,","    binary: binary","  };","","  if (!(this instanceof CHAR)) return new CHAR(options);","  STRING.apply(this, arguments);","});","","CHAR.prototype.key = CHAR.key = 'CHAR';","CHAR.prototype.toSql = function() {","  return 'CHAR(' + this._length + ')' + ((this._binary) ? ' BINARY' : '');","};","","/**"," * An (un)limited length text column. Available lengths: `tiny`, `medium`, `long`"," * @property TEXT"," */","var TEXT = ABSTRACT.inherits(function(length) {","  var options = typeof length === 'object' && length || {","    length: length","  };","  if (!(this instanceof TEXT)) return new TEXT(options);","  this.options = options;","  this._length = options.length || '';","});","","TEXT.prototype.key = TEXT.key = 'TEXT';","TEXT.prototype.toSql = function() {","  switch (this._length.toLowerCase()) {","  case 'tiny':","    return 'TINYTEXT';","  case 'medium':","    return 'MEDIUMTEXT';","  case 'long':","    return 'LONGTEXT';","  default:","    return this.key;","  }","};","TEXT.prototype.validate = function(value) {","  if (!_.isString(value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));","   }","","  return true;","};","","var NUMBER = ABSTRACT.inherits(function(options) {","  this.options = options;","  this._length = options.length;","  this._zerofill = options.zerofill;","  this._decimals = options.decimals;","  this._precision = options.precision;","  this._scale = options.scale;","  this._unsigned = options.unsigned;","});","","NUMBER.prototype.key = NUMBER.key = 'NUMBER';","NUMBER.prototype.toSql = function() {","  var result = this.key;","  if (this._length) {","    result += '(' + this._length;","    if (typeof this._decimals === 'number') {","      result += ',' + this._decimals;","    }","    result += ')';","  }","  if (this._unsigned) {","    result += ' UNSIGNED';","  }","  if (this._zerofill) {","    result += ' ZEROFILL';","  }","  return result;","};","","NUMBER.prototype.validate = function(value) {","  if (!Validator.isFloat(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid number', value));","  }","","  return true;","};","","Object.defineProperty(NUMBER.prototype, 'UNSIGNED', {","  get: function() {","    this._unsigned = true;","    this.options.unsigned = true;","    return this;","  }","});","Object.defineProperty(NUMBER.prototype, 'ZEROFILL', {","  get: function() {","    this._zerofill = true;","    this.options.zerofill = true;","    return this;","  }","});","","/**"," * A 32 bit integer."," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property INTEGER"," */","var INTEGER = NUMBER.inherits(function(length) {","  var options = typeof length === 'object' && length || {","    length: length","  };","  if (!(this instanceof INTEGER)) return new INTEGER(options);","  NUMBER.call(this, options);","});","","INTEGER.prototype.key = INTEGER.key = 'INTEGER';","INTEGER.prototype.validate = function(value) {","  if (!Validator.isInt(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid integer', value));","  }","","  return true;","};","","/**"," * A 64 bit integer."," *"," * Note: an attribute defined as `BIGINT` will be treated like a `string` due this [feature from node-postgres](https://github.com/brianc/node-postgres/pull/353) to prevent precision loss. To have this attribute as a `number`, this is a possible [workaround](https://github.com/sequelize/sequelize/issues/2383#issuecomment-58006083)."," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property BIGINT"," */","","var BIGINT = NUMBER.inherits(function(length) {","  var options = typeof length === 'object' && length || {","    length: length","  };","  if (!(this instanceof BIGINT)) return new BIGINT(options);","  NUMBER.call(this, options);","});","","BIGINT.prototype.key = BIGINT.key = 'BIGINT';","BIGINT.prototype.validate = function(value) {","  if (!Validator.isInt(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid bigint', value));","  }","","  return true;","};","","/**"," * Floating point number (4-byte precision). Accepts one or two arguments for precision"," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property FLOAT"," */","var FLOAT = NUMBER.inherits(function(length, decimals) {","  var options = typeof length === 'object' && length || {","    length: length,","    decimals: decimals","  };","  if (!(this instanceof FLOAT)) return new FLOAT(options);","  NUMBER.call(this, options);","});","","FLOAT.prototype.key = FLOAT.key = 'FLOAT';","FLOAT.prototype.validate = function(value) {","  if (!Validator.isFloat(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid float', value));","  }","","  return true;","};","","/**"," * Floating point number (4-byte precision). Accepts one or two arguments for precision"," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property REAL"," */","var REAL = NUMBER.inherits(function(length, decimals) {","  var options = typeof length === 'object' && length || {","    length: length,","    decimals: decimals","  };","  if (!(this instanceof REAL)) return new REAL(options);","  NUMBER.call(this, options);","});","","REAL.prototype.key = REAL.key = 'REAL';","","/**"," * Floating point number (8-byte precision). Accepts one or two arguments for precision"," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property DOUBLE"," */","var DOUBLE = NUMBER.inherits(function(length, decimals) {","  var options = typeof length === 'object' && length || {","    length: length,","    decimals: decimals","  };","  if (!(this instanceof DOUBLE)) return new DOUBLE(options);","  NUMBER.call(this, options);","});","","DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE PRECISION';","","/**"," * Decimal number. Accepts one or two arguments for precision"," *"," * Available properties: `UNSIGNED`, `ZEROFILL`"," *"," * @property DECIMAL"," */","var DECIMAL = NUMBER.inherits(function(precision, scale) {","  var options = typeof precision === 'object' && precision || {","    precision: precision,","    scale: scale","  };","  if (!(this instanceof DECIMAL)) return new DECIMAL(options);","  NUMBER.call(this, options);","});","","DECIMAL.prototype.key = DECIMAL.key = 'DECIMAL';","DECIMAL.prototype.toSql = function() {","  if (this._precision || this._scale) {","    return 'DECIMAL(' + [this._precision, this._scale].filter(_.identity).join(',') + ')';","  }","","  return 'DECIMAL';","};","DECIMAL.prototype.validate = function(value) {","  if (!Validator.isDecimal(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid decimal', value));","  }","","  return true;","};","","[FLOAT, DOUBLE, REAL].forEach(function (floating) {","  floating.prototype.escape = false;","  floating.prototype.$stringify = function (value) {","    if (isNaN(value)) {","      return \"'NaN'\";","    } else if (!isFinite(value)) {","      var sign = value < 0 ? '-' : '';","      return \"'\" + sign + \"Infinity'\";","    }","","    return value;","  };","});","","/**"," * A boolean / tinyint column, depending on dialect"," * @property BOOLEAN"," */","var BOOLEAN = ABSTRACT.inherits();","","BOOLEAN.prototype.key = BOOLEAN.key = 'BOOLEAN';","BOOLEAN.prototype.toSql = function() {","  return 'TINYINT(1)';","};","BOOLEAN.prototype.validate = function(value) {","  if (!Validator.isBoolean(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid boolean', value));","  }","","  return true;","};","","/**"," * A time column"," * @property TIME"," */","","var TIME = ABSTRACT.inherits();","","TIME.prototype.key = TIME.key = 'TIME';","TIME.prototype.toSql = function() {","  return 'TIME';","};","","/**"," * A datetime column"," * @property DATE"," */","var DATE = ABSTRACT.inherits(function (length) {","  var options = typeof length === 'object' && length || {","      length: length","    };","","  if (!(this instanceof DATE)) return new DATE(options);","","  this.options = options;","  this._length = options.length || '';","});","","DATE.prototype.key = DATE.key = 'DATE';","DATE.prototype.toSql = function() {","  return 'DATETIME';","};","DATE.prototype.validate = function(value) {","  if (!Validator.isDate(String(value))) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid date', value));","  }","","  return true;","};","","DATE.prototype.$applyTimezone = function (date, options) {","  if (options.timezone) {","    if (momentTz.tz.zone(options.timezone)) {","      date = momentTz(date).tz(options.timezone);","    } else {","      date = moment(date).utcOffset(options.timezone);","    }","  } else {","    date = momentTz(date);","  }","","  return date;","};","","DATE.prototype.$stringify = function (date, options) {","  date = this.$applyTimezone(date, options);","","  // Z here means current timezone, _not_ UTC","  return date.format('YYYY-MM-DD HH:mm:ss.SSS Z');","};","","/**"," * A date only column"," * @property DATEONLY"," */","","var DATEONLY = function() {","  if (!(this instanceof DATEONLY)) return new DATEONLY();","  ABSTRACT.apply(this, arguments);","};","util.inherits(DATEONLY, ABSTRACT);","","DATEONLY.prototype.key = DATEONLY.key = 'DATEONLY';","DATEONLY.prototype.toSql = function() {","  return 'DATE';","};","","/**"," * A key / value column. Only available in postgres."," * @property HSTORE"," */","","var HSTORE = ABSTRACT.inherits();","","HSTORE.prototype.key = HSTORE.key = 'HSTORE';","HSTORE.prototype.validate = function(value) {","  if (!_.isPlainObject(value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid hstore', value));","  }","","  return true;","};","","/**"," * A JSON string column. Only available in postgres."," * @property JSON"," */","var JSONTYPE = function() {","  if (!(this instanceof JSONTYPE)) return new JSONTYPE();","  ABSTRACT.apply(this, arguments);","};","util.inherits(JSONTYPE, ABSTRACT);","","JSONTYPE.prototype.key = JSONTYPE.key = 'JSON';","JSONTYPE.prototype.validate = function(value) {","  return true;","};","","JSONTYPE.prototype.$stringify = function (value, options) {","  return JSON.stringify(value);","};","","/**"," * A pre-processed JSON data column. Only available in postgres."," * @property JSONB"," */","var JSONB = function() {","  if (!(this instanceof JSONB)) return new JSONB();","  JSONTYPE.apply(this, arguments);","};","util.inherits(JSONB, JSONTYPE);","","JSONB.prototype.key = JSONB.key = 'JSONB';","","/**"," * A default value of the current timestamp"," * @property NOW"," */","var NOW = ABSTRACT.inherits();","","NOW.prototype.key = NOW.key = 'NOW';","","/**"," * Binary storage. Available lengths: `tiny`, `medium`, `long`"," *"," * @property BLOB"," */","","var BLOB = ABSTRACT.inherits(function(length) {","  var options = typeof length === 'object' && length || {","    length: length","  };","  if (!(this instanceof BLOB)) return new BLOB(options);","  this.options = options;","  this._length = options.length || '';","});","","BLOB.prototype.key = BLOB.key = 'BLOB';","BLOB.prototype.toSql = function() {","  switch (this._length.toLowerCase()) {","  case 'tiny':","    return 'TINYBLOB';","  case 'medium':","    return 'MEDIUMBLOB';","  case 'long':","    return 'LONGBLOB';","  default:","    return this.key;","  }","};","BLOB.prototype.validate = function(value) {","  if (!_.isString(value) && !Buffer.isBuffer(value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid blob', value));","  }","","  return true;","};","","BLOB.prototype.escape = false;","BLOB.prototype.$stringify = function (value) {","  if (!Buffer.isBuffer(value)) {","    if (Array.isArray(value)) {","      value = new Buffer(value);","    } else {","      value = new Buffer(value.toString());","    }","  }","  var hex = value.toString('hex');","","  return this.$hexify(hex);","};","","BLOB.prototype.$hexify = function (hex) {","  return \"X'\" + hex + \"'\";","};","","/**"," * Range types are data types representing a range of values of some element type (called the range's subtype)."," * Only available in postgres."," * See {@link http://www.postgresql.org/docs/9.4/static/rangetypes.html|Postgres documentation} for more details"," * @property RANGE"," */","","var RANGE = ABSTRACT.inherits(function (subtype) {","  var options = _.isPlainObject(subtype) ? subtype : { subtype: subtype };","","  if (!options.subtype) options.subtype = new INTEGER();","","  if (_.isFunction(options.subtype)) {","    options.subtype = new options.subtype();","  }","","  if (!(this instanceof RANGE)) return new RANGE(options);","  ABSTRACT.apply(this, arguments);","","  this._subtype = options.subtype.key;","  this.options = options;","});","","var pgRangeSubtypes = {","  integer: 'int4range',","  bigint: 'int8range',","  decimal: 'numrange',","  dateonly: 'daterange',","  date: 'tstzrange',","  datenotz: 'tsrange'","};","","RANGE.prototype.key = RANGE.key = 'RANGE';","RANGE.prototype.toSql = function() {","  return pgRangeSubtypes[this._subtype.toLowerCase()];","};","RANGE.prototype.validate = function(value) {","  if (_.isPlainObject(value) && value.inclusive) {","    value = value.inclusive;","  }","","  if (!_.isArray(value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid range', value));","  }","","  if (value.length !== 2) {","    throw new sequelizeErrors.ValidationError('A range must be an array with two elements');","  }","","  return true;","};","","","/**"," * A column storing a unique universal identifier. Use with `UUIDV1` or `UUIDV4` for default values."," * @property UUID"," */","var UUID = ABSTRACT.inherits();","","UUID.prototype.key = UUID.key = 'UUID';","UUID.prototype.validate = function(value, options) {","  if (!_.isString(value) || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));","  }","","  return true;","};","","/**"," * A default unique universal identifier generated following the UUID v1 standard"," * @property UUIDV1"," */","","var UUIDV1 = function() {","  if (!(this instanceof UUIDV1)) return new UUIDV1();","  ABSTRACT.apply(this, arguments);","};","util.inherits(UUIDV1, ABSTRACT);","","UUIDV1.prototype.key = UUIDV1.key = 'UUIDV1';","UUIDV1.prototype.validate = function(value, options) {","  if (!_.isString(value) || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));","  }","","  return true;","};","","/**"," * A default unique universal identifier generated following the UUID v4 standard"," * @property UUIDV4"," */","","var UUIDV4 = function() {","  if (!(this instanceof UUIDV4)) return new UUIDV4();","  ABSTRACT.apply(this, arguments);","};","util.inherits(UUIDV4, ABSTRACT);","","UUIDV4.prototype.key = UUIDV4.key = 'UUIDV4';","UUIDV4.prototype.validate = function(value, options) {","  if (!_.isString(value) || !Validator.isUUID(value, 4) && (!options || !options.acceptStrings)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuidv4', value));","  }","","  return true;","};","","/**"," * A virtual value that is not stored in the DB. This could for example be useful if you want to provide a default value in your model that is returned to the user but not stored in the DB."," *"," * You could also use it to validate a value before permuting and storing it. Checking password length before hashing it for example:"," * ```js"," * sequelize.define('user', {"," *   password_hash: DataTypes.STRING,"," *   password: {"," *     type: DataTypes.VIRTUAL,"," *     set: function (val) {"," *        this.setDataValue('password', val); // Remember to set the data value, otherwise it won't be validated"," *        this.setDataValue('password_hash', this.salt + val);"," *      },"," *      validate: {"," *         isLongEnough: function (val) {"," *           if (val.length < 7) {"," *             throw new Error(\"Please choose a longer password\")"," *          }"," *       }"," *     }"," *   }"," * })"," * ```"," * In the above code the password is stored plainly in the password field so it can be validated, but is never stored in the DB."," *"," * VIRTUAL also takes a return type and dependency fields as arguments"," * If a virtual attribute is present in `attributes` it will automatically pull in the extra fields as well."," * Return type is mostly useful for setups that rely on types like GraphQL."," * ```js"," * {"," *   active: {"," *     type: new DataTypes.VIRTUAL(DataTypes.BOOLEAN, ['createdAt']),"," *     get: function() {"," *       return this.get('createdAt') > Date.now() - (7 * 24 * 60 * 60 * 1000)"," *     }"," *   }"," * }"," * ```"," *"," * @property VIRTUAL"," * @alias NONE"," */","var VIRTUAL = function(ReturnType, fields) {","  if (!(this instanceof VIRTUAL)) return new VIRTUAL(ReturnType, fields);","  if (typeof ReturnType === 'function') ReturnType = new ReturnType();","","  this.returnType = ReturnType;","  this.fields = fields;","};","util.inherits(VIRTUAL, ABSTRACT);","","VIRTUAL.prototype.key = VIRTUAL.key = 'VIRTUAL';","","/**"," * An enumeration. `DataTypes.ENUM('value', 'another value')`."," *"," * @property ENUM"," */","var ENUM = ABSTRACT.inherits(function(value) {","  var options = typeof value === 'object' && !Array.isArray(value) && value || {","    values: Array.prototype.slice.call(arguments).reduce(function(result, element) {","      return result.concat(Array.isArray(element) ? element : [element]);","    }, [])","  };","  if (!(this instanceof ENUM)) return new ENUM(options);","  this.values = options.values;","  this.options = options;","});","","ENUM.prototype.key = ENUM.key = 'ENUM';","ENUM.prototype.validate = function(value) {","  if (!_.includes(this.values, value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid choice in %j', value, this.values));","  }","","  return true;","};","","/**"," * An array of `type`, e.g. `DataTypes.ARRAY(DataTypes.DECIMAL)`. Only available in postgres."," * @property ARRAY"," */","var ARRAY = function(type) {","  var options = _.isPlainObject(type) ? type : {","    type: type","  };","  if (!(this instanceof ARRAY)) return new ARRAY(options);","  this.type = typeof options.type === 'function' ? new options.type() : options.type;","};","util.inherits(ARRAY, ABSTRACT);","","ARRAY.prototype.key = ARRAY.key = 'ARRAY';","ARRAY.prototype.toSql = function() {","  return this.type.toSql() + '[]';","};","ARRAY.prototype.validate = function(value) {","  if (!_.isArray(value)) {","    throw new sequelizeErrors.ValidationError(util.format('%j is not a valid array', value));","  }","","  return true;","};","ARRAY.is = function(obj, type) {","  return obj instanceof ARRAY && obj.type instanceof type;","};","","var helpers = {","  BINARY: [STRING, CHAR],","  UNSIGNED: [NUMBER, INTEGER, BIGINT, FLOAT, DOUBLE, REAL],","  ZEROFILL: [NUMBER, INTEGER, BIGINT, FLOAT, DOUBLE, REAL],","  PRECISION: [DECIMAL],","  SCALE: [DECIMAL]","};","","/**"," * A column storing Geometry information."," *"," * Only available in PostgreSQL (with PostGIS) or MySQL."," * In MySQL, allowable Geometry types are 'POINT', 'LINESTRING', 'POLYGON'."," *"," * When using, GeoJSON is accepted as input and returned as output."," * In PostGIS, the GeoJSON is parsed using the PostGIS function `ST_GeomFromGeoJSON`."," * In MySQL it is parsed using the function `GeomFromText`."," * Therefore, one can just follow the [GeoJSON spec](http://geojson.org/geojson-spec.html) for handling geometry objects.  See the following examples:"," *"," * ```js"," * // Create a new point:"," * var point = { type: 'Point', coordinates: [39.807222,-76.984722]};"," *"," * User.create({username: 'username', geometry: point }).then(function(newUser) {"," * ..."," * });"," *"," * // Create a new linestring:"," * var line = { type: 'LineString', 'coordinates': [ [100.0, 0.0], [101.0, 1.0] ] };"," *"," * User.create({username: 'username', geometry: line }).then(function(newUser) {"," * ..."," * });"," *"," * // Create a new polygon:"," * var polygon = { type: 'Polygon', coordinates: ["," *                 [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],"," *                   [100.0, 1.0], [100.0, 0.0] ]"," *                 ]};"," *"," * User.create({username: 'username', geometry: polygon }).then(function(newUser) {"," * ..."," * });",""," * // Create a new point with a custom SRID:"," * var point = {"," *   type: 'Point',"," *   coordinates: [39.807222,-76.984722],"," *   crs: { type: 'name', properties: { name: 'EPSG:4326'} }"," * };"," *"," * User.create({username: 'username', geometry: point }).then(function(newUser) {"," * ..."," * });"," * ```"," *"," * @property GEOMETRY"," */","","var GEOMETRY = ABSTRACT.inherits(function(type, srid) {","  var options = _.isPlainObject(type) ? type : {","    type: type,","    srid: srid","  };","","  if (!(this instanceof GEOMETRY)) return new GEOMETRY(options);","","  this.options = options;","  this.type = options.type;","  this.srid = options.srid;","});","","GEOMETRY.prototype.key = GEOMETRY.key = 'GEOMETRY';","","GEOMETRY.prototype.escape = false;","GEOMETRY.prototype.$stringify = function (value, options) {","  return 'GeomFromText(' + options.escape(Wkt.convert(value)) + ')';","};","","/**"," * A geography datatype represents two dimensional spacial objects in an elliptic coord system."," * @property GEOGRAPHY"," */","","var GEOGRAPHY = ABSTRACT.inherits(function(type, srid) {","  var options = _.isPlainObject(type) ? type : {","    type: type,","    srid: srid","  };","","  if (!(this instanceof GEOGRAPHY)) return new GEOGRAPHY(options);","","  this.options = options;","  this.type = options.type;","  this.srid = options.srid;","});","","GEOGRAPHY.prototype.key = GEOGRAPHY.key = 'GEOGRAPHY';","","GEOGRAPHY.prototype.escape = false;","GEOGRAPHY.prototype.$stringify = function (value, options) {","  return 'GeomFromText(' + options.escape(Wkt.convert(value)) + ')';","};","","Object.keys(helpers).forEach(function (helper) {","  helpers[helper].forEach(function (DataType) {","    if (!DataType[helper]) {","      Object.defineProperty(DataType, helper, {","        get: function() {","          var dataType = new DataType();","          if (typeof dataType[helper] === 'object') {","            return dataType;","          }","          return dataType[helper].apply(dataType, arguments);","        }","      });","    }","  });","});","","var dataTypes = {","  ABSTRACT: ABSTRACT,","  STRING: STRING,","  CHAR: CHAR,","  TEXT: TEXT,","  NUMBER: NUMBER,","  INTEGER: INTEGER,","  BIGINT: BIGINT,","  FLOAT: FLOAT,","  TIME: TIME,","  DATE: DATE,","  DATEONLY: DATEONLY,","  BOOLEAN: BOOLEAN,","  NOW: NOW,","  BLOB: BLOB,","  DECIMAL: DECIMAL,","  NUMERIC: DECIMAL,","  UUID: UUID,","  UUIDV1: UUIDV1,","  UUIDV4: UUIDV4,","  HSTORE: HSTORE,","  JSON: JSONTYPE,","  JSONB: JSONB,","  VIRTUAL: VIRTUAL,","  ARRAY: ARRAY,","  NONE: VIRTUAL,","  ENUM: ENUM,","  RANGE: RANGE,","  REAL: REAL,","  DOUBLE: DOUBLE,","  'DOUBLE PRECISION': DOUBLE,","  GEOMETRY: GEOMETRY,","  GEOGRAPHY: GEOGRAPHY","};","","_.each(dataTypes, function (dataType) {","  dataType.types = {};","});","","dataTypes.postgres = require('./dialects/postgres/data-types')(dataTypes);","dataTypes.mysql = require('./dialects/mysql/data-types')(dataTypes);","dataTypes.mariadb = dataTypes.mysql;","dataTypes.sqlite = require('./dialects/sqlite/data-types')(dataTypes);","dataTypes.mssql = require('./dialects/mssql/data-types')(dataTypes);","","module.exports = dataTypes;",""],"l":{"4":1,"58":1,"61":1,"63":1,"64":0,"66":1,"67":0,"69":1,"70":0,"71":0,"72":0,"75":1,"76":0,"77":0,"79":0,"82":1,"83":64,"85":64,"86":32,"87":0,"88":0,"89":0,"90":0,"92":0,"96":64,"97":64,"99":64,"110":1,"111":0,"116":0,"118":0,"119":0,"120":0,"123":1,"124":1,"125":0,"127":1,"128":0,"129":0,"130":0,"132":0,"135":0,"137":1,"139":0,"140":0,"141":0,"152":1,"153":0,"158":0,"159":0,"162":1,"163":1,"164":0,"171":1,"172":0,"175":0,"176":0,"177":0,"180":1,"181":1,"182":0,"184":0,"186":0,"188":0,"190":0,"193":1,"194":0,"195":0,"198":0,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"211":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"219":0,"221":0,"222":0,"224":0,"225":0,"227":0,"230":1,"231":0,"232":0,"235":0,"238":1,"240":0,"241":0,"242":0,"245":1,"247":0,"248":0,"249":0,"260":1,"261":0,"264":0,"265":0,"268":1,"269":1,"270":0,"271":0,"274":0,"287":1,"288":0,"291":0,"292":0,"295":1,"296":1,"297":0,"298":0,"301":0,"311":1,"312":0,"316":0,"317":0,"320":1,"321":1,"322":0,"323":0,"326":0,"336":1,"337":0,"341":0,"342":0,"345":1,"354":1,"355":0,"359":0,"360":0,"363":1,"372":1,"373":0,"377":0,"378":0,"381":1,"382":1,"383":0,"384":0,"387":0,"389":1,"390":0,"391":0,"394":0,"397":1,"398":3,"399":3,"400":0,"401":0,"402":0,"403":0,"404":0,"407":0,"415":1,"417":1,"418":1,"419":0,"421":1,"422":0,"423":0,"426":0,"434":1,"436":1,"437":1,"438":0,"445":1,"446":0,"450":0,"452":0,"453":0,"456":1,"457":1,"458":0,"460":1,"461":0,"462":0,"465":0,"468":1,"469":0,"470":0,"471":0,"473":0,"476":0,"479":0,"482":1,"483":0,"486":0,"494":1,"495":0,"496":0,"498":1,"500":1,"501":1,"502":0,"510":1,"512":1,"513":1,"514":0,"515":0,"518":0,"525":1,"526":0,"527":0,"529":1,"531":1,"532":1,"533":0,"536":1,"537":0,"544":1,"545":0,"546":0,"548":1,"550":1,"556":1,"558":1,"566":1,"567":0,"570":0,"571":0,"572":0,"575":1,"576":1,"577":0,"579":0,"581":0,"583":0,"585":0,"588":1,"589":0,"590":0,"593":0,"596":1,"597":1,"598":0,"599":0,"600":0,"602":0,"605":0,"607":0,"610":1,"611":0,"621":1,"622":0,"624":0,"626":0,"627":0,"630":0,"631":0,"633":0,"634":0,"637":1,"646":1,"647":1,"648":0,"650":1,"651":0,"652":0,"655":0,"656":0,"659":0,"660":0,"663":0,"671":1,"673":1,"674":1,"675":0,"676":0,"679":0,"687":1,"688":0,"689":0,"691":1,"693":1,"694":1,"695":0,"696":0,"699":0,"707":1,"708":0,"709":0,"711":1,"713":1,"714":1,"715":0,"716":0,"719":0,"764":1,"765":0,"766":0,"768":0,"769":0,"771":1,"773":1,"780":1,"781":0,"783":0,"786":0,"787":0,"788":0,"791":1,"792":1,"793":0,"794":0,"797":0,"804":1,"805":0,"808":0,"809":0,"811":1,"813":1,"814":1,"815":0,"817":1,"818":0,"819":0,"822":0,"824":1,"825":0,"828":1,"887":1,"888":0,"893":0,"895":0,"896":0,"897":0,"900":1,"902":1,"903":1,"904":0,"912":1,"913":0,"918":0,"920":0,"921":0,"922":0,"925":1,"927":1,"928":1,"929":0,"932":1,"933":5,"934":16,"935":16,"937":0,"938":0,"939":0,"941":0,"948":1,"983":1,"984":32,"987":1,"988":1,"989":1,"990":1,"991":1,"993":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/errors.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":0,"85":0,"86":1,"87":1,"88":0,"89":0,"90":1,"91":1,"92":0,"93":0,"94":1,"95":1,"96":0,"97":0,"98":1,"99":1,"100":0,"101":0,"102":1,"103":1,"104":0,"105":0,"106":1,"107":1,"108":0,"109":0,"110":0,"111":1,"112":1,"113":0,"114":0,"115":0,"116":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":18},"end":{"line":20,"column":29}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":50}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":35},"end":{"line":57,"column":49}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":38},"end":{"line":70,"column":53}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":53}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":22},"end":{"line":84,"column":40}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":21},"end":{"line":127,"column":39}}},"8":{"name":"(anonymous_8)","line":138,"loc":{"start":{"line":138,"column":30},"end":{"line":138,"column":49}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":34},"end":{"line":160,"column":53}}},"10":{"name":"(anonymous_10)","line":180,"loc":{"start":{"line":180,"column":33},"end":{"line":180,"column":52}}},"11":{"name":"(anonymous_11)","line":204,"loc":{"start":{"line":204,"column":28},"end":{"line":204,"column":65}}},"12":{"name":"(anonymous_12)","line":216,"loc":{"start":{"line":216,"column":24},"end":{"line":216,"column":42}}},"13":{"name":"(anonymous_13)","line":233,"loc":{"start":{"line":233,"column":31},"end":{"line":233,"column":49}}},"14":{"name":"(anonymous_14)","line":244,"loc":{"start":{"line":244,"column":26},"end":{"line":244,"column":44}}},"15":{"name":"(anonymous_15)","line":255,"loc":{"start":{"line":255,"column":26},"end":{"line":255,"column":44}}},"16":{"name":"(anonymous_16)","line":266,"loc":{"start":{"line":266,"column":30},"end":{"line":266,"column":48}}},"17":{"name":"(anonymous_17)","line":277,"loc":{"start":{"line":277,"column":31},"end":{"line":277,"column":49}}},"18":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":32},"end":{"line":288,"column":50}}},"19":{"name":"(anonymous_19)","line":299,"loc":{"start":{"line":299,"column":22},"end":{"line":299,"column":41}}},"20":{"name":"(anonymous_20)","line":311,"loc":{"start":{"line":311,"column":25},"end":{"line":311,"column":44}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"3":{"start":{"line":20,"column":0},"end":{"line":27,"column":2}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":41}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":46}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"7":{"start":{"line":25,"column":2},"end":{"line":26,"column":52}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":52}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":38}},"10":{"start":{"line":41,"column":0},"end":{"line":61,"column":2}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":41}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":36}},"14":{"start":{"line":49,"column":2},"end":{"line":49,"column":29}},"15":{"start":{"line":52,"column":2},"end":{"line":60,"column":3}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":27}},"17":{"start":{"line":56,"column":9},"end":{"line":60,"column":3}},"18":{"start":{"line":57,"column":4},"end":{"line":59,"column":19}},"19":{"start":{"line":58,"column":6},"end":{"line":58,"column":43}},"20":{"start":{"line":62,"column":0},"end":{"line":62,"column":54}},"21":{"start":{"line":70,"column":0},"end":{"line":77,"column":2}},"22":{"start":{"line":71,"column":2},"end":{"line":76,"column":9}},"23":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"24":{"start":{"line":73,"column":6},"end":{"line":73,"column":26}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":19}},"26":{"start":{"line":84,"column":0},"end":{"line":119,"column":2}},"27":{"start":{"line":85,"column":2},"end":{"line":85,"column":48}},"28":{"start":{"line":86,"column":2},"end":{"line":86,"column":39}},"29":{"start":{"line":92,"column":2},"end":{"line":92,"column":23}},"30":{"start":{"line":93,"column":2},"end":{"line":93,"column":25}},"31":{"start":{"line":98,"column":2},"end":{"line":98,"column":24}},"32":{"start":{"line":120,"column":0},"end":{"line":120,"column":52}},"33":{"start":{"line":127,"column":0},"end":{"line":130,"column":2}},"34":{"start":{"line":128,"column":2},"end":{"line":128,"column":41}},"35":{"start":{"line":129,"column":2},"end":{"line":129,"column":38}},"36":{"start":{"line":131,"column":0},"end":{"line":131,"column":51}},"37":{"start":{"line":138,"column":0},"end":{"line":152,"column":2}},"38":{"start":{"line":139,"column":2},"end":{"line":139,"column":26}},"39":{"start":{"line":140,"column":2},"end":{"line":140,"column":49}},"40":{"start":{"line":141,"column":2},"end":{"line":141,"column":84}},"41":{"start":{"line":142,"column":2},"end":{"line":142,"column":40}},"42":{"start":{"line":144,"column":2},"end":{"line":144,"column":68}},"43":{"start":{"line":145,"column":2},"end":{"line":145,"column":47}},"44":{"start":{"line":146,"column":2},"end":{"line":146,"column":33}},"45":{"start":{"line":147,"column":2},"end":{"line":147,"column":31}},"46":{"start":{"line":148,"column":2},"end":{"line":148,"column":31}},"47":{"start":{"line":149,"column":2},"end":{"line":149,"column":31}},"48":{"start":{"line":150,"column":2},"end":{"line":150,"column":33}},"49":{"start":{"line":151,"column":2},"end":{"line":151,"column":32}},"50":{"start":{"line":153,"column":0},"end":{"line":153,"column":66}},"51":{"start":{"line":160,"column":0},"end":{"line":172,"column":2}},"52":{"start":{"line":161,"column":2},"end":{"line":161,"column":26}},"53":{"start":{"line":162,"column":2},"end":{"line":162,"column":49}},"54":{"start":{"line":164,"column":2},"end":{"line":164,"column":49}},"55":{"start":{"line":165,"column":2},"end":{"line":165,"column":51}},"56":{"start":{"line":167,"column":2},"end":{"line":167,"column":79}},"57":{"start":{"line":168,"column":2},"end":{"line":168,"column":31}},"58":{"start":{"line":169,"column":2},"end":{"line":169,"column":29}},"59":{"start":{"line":170,"column":2},"end":{"line":170,"column":29}},"60":{"start":{"line":171,"column":2},"end":{"line":171,"column":29}},"61":{"start":{"line":173,"column":0},"end":{"line":173,"column":68}},"62":{"start":{"line":180,"column":0},"end":{"line":191,"column":2}},"63":{"start":{"line":181,"column":2},"end":{"line":181,"column":26}},"64":{"start":{"line":182,"column":2},"end":{"line":182,"column":49}},"65":{"start":{"line":184,"column":2},"end":{"line":184,"column":49}},"66":{"start":{"line":185,"column":2},"end":{"line":185,"column":50}},"67":{"start":{"line":187,"column":2},"end":{"line":187,"column":59}},"68":{"start":{"line":188,"column":2},"end":{"line":188,"column":39}},"69":{"start":{"line":189,"column":2},"end":{"line":189,"column":31}},"70":{"start":{"line":190,"column":2},"end":{"line":190,"column":29}},"71":{"start":{"line":192,"column":0},"end":{"line":192,"column":67}},"72":{"start":{"line":204,"column":0},"end":{"line":209,"column":2}},"73":{"start":{"line":205,"column":2},"end":{"line":205,"column":31}},"74":{"start":{"line":206,"column":2},"end":{"line":206,"column":27}},"75":{"start":{"line":207,"column":2},"end":{"line":207,"column":27}},"76":{"start":{"line":208,"column":2},"end":{"line":208,"column":29}},"77":{"start":{"line":216,"column":0},"end":{"line":225,"column":2}},"78":{"start":{"line":217,"column":2},"end":{"line":217,"column":62}},"79":{"start":{"line":218,"column":2},"end":{"line":218,"column":41}},"80":{"start":{"line":223,"column":2},"end":{"line":223,"column":23}},"81":{"start":{"line":224,"column":2},"end":{"line":224,"column":25}},"82":{"start":{"line":226,"column":0},"end":{"line":226,"column":54}},"83":{"start":{"line":233,"column":0},"end":{"line":236,"column":2}},"84":{"start":{"line":234,"column":2},"end":{"line":234,"column":43}},"85":{"start":{"line":235,"column":2},"end":{"line":235,"column":48}},"86":{"start":{"line":237,"column":0},"end":{"line":237,"column":67}},"87":{"start":{"line":244,"column":0},"end":{"line":247,"column":2}},"88":{"start":{"line":245,"column":2},"end":{"line":245,"column":43}},"89":{"start":{"line":246,"column":2},"end":{"line":246,"column":43}},"90":{"start":{"line":248,"column":0},"end":{"line":248,"column":62}},"91":{"start":{"line":255,"column":0},"end":{"line":258,"column":2}},"92":{"start":{"line":256,"column":2},"end":{"line":256,"column":43}},"93":{"start":{"line":257,"column":2},"end":{"line":257,"column":43}},"94":{"start":{"line":259,"column":0},"end":{"line":259,"column":62}},"95":{"start":{"line":266,"column":0},"end":{"line":269,"column":2}},"96":{"start":{"line":267,"column":2},"end":{"line":267,"column":43}},"97":{"start":{"line":268,"column":2},"end":{"line":268,"column":47}},"98":{"start":{"line":270,"column":0},"end":{"line":270,"column":66}},"99":{"start":{"line":277,"column":0},"end":{"line":280,"column":2}},"100":{"start":{"line":278,"column":2},"end":{"line":278,"column":43}},"101":{"start":{"line":279,"column":2},"end":{"line":279,"column":48}},"102":{"start":{"line":281,"column":0},"end":{"line":281,"column":67}},"103":{"start":{"line":288,"column":0},"end":{"line":291,"column":2}},"104":{"start":{"line":289,"column":2},"end":{"line":289,"column":43}},"105":{"start":{"line":290,"column":2},"end":{"line":290,"column":49}},"106":{"start":{"line":292,"column":0},"end":{"line":292,"column":68}},"107":{"start":{"line":299,"column":0},"end":{"line":303,"column":2}},"108":{"start":{"line":300,"column":2},"end":{"line":300,"column":41}},"109":{"start":{"line":301,"column":2},"end":{"line":301,"column":39}},"110":{"start":{"line":302,"column":2},"end":{"line":302,"column":25}},"111":{"start":{"line":304,"column":0},"end":{"line":304,"column":52}},"112":{"start":{"line":311,"column":0},"end":{"line":315,"column":2}},"113":{"start":{"line":312,"column":2},"end":{"line":312,"column":41}},"114":{"start":{"line":313,"column":2},"end":{"line":313,"column":42}},"115":{"start":{"line":314,"column":2},"end":{"line":314,"column":25}},"116":{"start":{"line":316,"column":0},"end":{"line":316,"column":55}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":22}},{"start":{"line":49,"column":26},"end":{"line":49,"column":28}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":9},"end":{"line":56,"column":9}},{"start":{"line":56,"column":9},"end":{"line":56,"column":9}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":13},"end":{"line":56,"column":35}},{"start":{"line":56,"column":39},"end":{"line":56,"column":61}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"7":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":19}},{"start":{"line":139,"column":23},"end":{"line":139,"column":25}}]},"8":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":19},"end":{"line":140,"column":33}},{"start":{"line":140,"column":37},"end":{"line":140,"column":48}}]},"9":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":20},"end":{"line":141,"column":35}},{"start":{"line":141,"column":39},"end":{"line":141,"column":61}},{"start":{"line":141,"column":65},"end":{"line":141,"column":83}}]},"10":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":19},"end":{"line":142,"column":33}},{"start":{"line":142,"column":37},"end":{"line":142,"column":39}}]},"11":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":19}},{"start":{"line":161,"column":23},"end":{"line":161,"column":25}}]},"12":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":19},"end":{"line":162,"column":33}},{"start":{"line":162,"column":37},"end":{"line":162,"column":48}}]},"13":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":17},"end":{"line":167,"column":32}},{"start":{"line":167,"column":36},"end":{"line":167,"column":58}},{"start":{"line":167,"column":62},"end":{"line":167,"column":78}}]},"14":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":12},"end":{"line":181,"column":19}},{"start":{"line":181,"column":23},"end":{"line":181,"column":25}}]},"15":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":19},"end":{"line":182,"column":33}},{"start":{"line":182,"column":37},"end":{"line":182,"column":48}}]},"16":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":17},"end":{"line":187,"column":32}},{"start":{"line":187,"column":36},"end":{"line":187,"column":58}}]},"17":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":17},"end":{"line":205,"column":24}},{"start":{"line":205,"column":28},"end":{"line":205,"column":30}}]},"18":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":14},"end":{"line":206,"column":18}},{"start":{"line":206,"column":22},"end":{"line":206,"column":26}}]},"19":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":14},"end":{"line":207,"column":18}},{"start":{"line":207,"column":22},"end":{"line":207,"column":26}}]},"20":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":15},"end":{"line":208,"column":20}},{"start":{"line":208,"column":24},"end":{"line":208,"column":28}}]},"21":{"line":217,"type":"cond-expr","locations":[{"start":{"line":217,"column":40},"end":{"line":217,"column":54}},{"start":{"line":217,"column":57},"end":{"line":217,"column":59}}]}},"code":["'use strict';","","/**"," * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor."," * All sequelize errors inherit from the base JS error object."," *"," * @fileOverview The Error Objects produced by Sequelize."," * @class Errors"," */","","var util = require('util');","var error = module.exports = {};","","/**"," * The Base Error all Sequelize Errors inherit from."," *"," * @constructor"," * @alias Error"," */","error.BaseError = function() {","  var tmp = Error.apply(this, arguments);","  tmp.name = this.name = 'SequelizeBaseError';","","  this.message = tmp.message;","  if (Error.captureStackTrace)","    Error.captureStackTrace(this, this.constructor);","};","util.inherits(error.BaseError, Error);","","","/**"," * Validation Error. Thrown when the sequelize validation has failed. The error contains an `errors` property,"," * which is an array with 1 or more ValidationErrorItems, one for each validation that failed."," *"," * @param {string} message Error message"," * @param {Array} [errors] Array of ValidationErrorItem objects describing the validation errors"," *"," * @extends BaseError"," * @constructor"," */","error.ValidationError = function(message, errors) {","  error.BaseError.apply(this, arguments);","  this.name = 'SequelizeValidationError';","  this.message = 'Validation Error';","/**"," * An array of ValidationErrorItems"," * @member errors"," */","  this.errors = errors || [];","","  // Use provided error message if available...","  if (message) {","    this.message = message;","","  // ... otherwise create a concatenated message out of existing errors.","  } else if (this.errors.length > 0 && this.errors[0].message) {","    this.message = this.errors.map(function(err) {","      return err.type + ': ' + err.message;","    }).join(',\\n');","  }","};","util.inherits(error.ValidationError, error.BaseError);","","/**"," * Gets all validation error items for the path / field specified."," *"," * @param {string} path The path to be checked for error items"," * @returns {Array} Validation error items for the specified path"," */","error.ValidationError.prototype.get = function(path) {","  return this.errors.reduce(function(reduced, error) {","    if (error.path === path) {","      reduced.push(error);","    }","    return reduced;","  }, []);","};","","/**"," * A base class for all database related errors."," * @extends BaseError"," * @constructor"," */","error.DatabaseError = function (parent) {","  error.BaseError.apply(this, [parent.message]);","  this.name = 'SequelizeDatabaseError';","","/**"," * The database specific error which triggered this one"," * @member parent"," */","  this.parent = parent;","  this.original = parent;","/**"," * The SQL that triggered the error"," * @member sql"," */","  this.sql = parent.sql;","/**"," * The message from the DB."," * @member message"," * @name message"," */","/**"," * The fields of the unique constraint"," * @member fields"," * @name fields"," */","/**"," * The value(s) which triggered the error"," * @member value"," * @name value"," */","/**"," * The name of the index that triggered the error"," * @member index"," * @name index"," */","};","util.inherits(error.DatabaseError, error.BaseError);","","/**"," * Thrown when a database query times out because of a deadlock"," * @extends DatabaseError"," * @constructor"," */","error.TimeoutError = function (parent) {","  error.DatabaseError.call(this, parent);","  this.name = 'SequelizeTimeoutError';","};","util.inherits(error.TimeoutError, error.BaseError);",""," /**"," * Thrown when a unique constraint is violated in the database"," * @extends DatabaseError"," * @constructor"," */","error.UniqueConstraintError = function (options) {","  options = options || {};","  options.parent = options.parent || { sql: '' };","  options.message = options.message || options.parent.message || 'Validation Error';","  options.errors = options.errors || {};","","  error.ValidationError.call(this, options.message, options.errors);","  this.name = 'SequelizeUniqueConstraintError';","  this.message = options.message;","  this.errors = options.errors;","  this.fields = options.fields;","  this.parent = options.parent;","  this.original = options.parent;","  this.sql = options.parent.sql;","};","util.inherits(error.UniqueConstraintError, error.ValidationError);","","/**"," * Thrown when a foreign key constraint is violated in the database"," * @extends DatabaseError"," * @constructor"," */","error.ForeignKeyConstraintError = function (options) {","  options = options || {};","  options.parent = options.parent || { sql: '' };","","  error.DatabaseError.call(this, options.parent);","  this.name = 'SequelizeForeignKeyConstraintError';","","  this.message = options.message || options.parent.message || 'Database Error';","  this.fields = options.fields;","  this.table = options.table;","  this.value = options.value;","  this.index = options.index;","};","util.inherits(error.ForeignKeyConstraintError, error.DatabaseError);","","/**"," * Thrown when an exclusion constraint is violated in the database"," * @extends DatabaseError"," * @constructor"," */","error.ExclusionConstraintError = function (options) {","  options = options || {};","  options.parent = options.parent || { sql: '' };","","  error.DatabaseError.call(this, options.parent);","  this.name = 'SequelizeExclusionConstraintError';","","  this.message = options.message || options.parent.message;","  this.constraint = options.constraint;","  this.fields = options.fields;","  this.table = options.table;","};","util.inherits(error.ExclusionConstraintError, error.DatabaseError);","","/**"," * Validation Error Item"," * Instances of this class are included in the `ValidationError.errors` property."," *"," * @param {string} message An error message"," * @param {string} type The type of the validation error"," * @param {string} path The field that triggered the validation error"," * @param {string} value The value that generated the error"," * @constructor"," */","error.ValidationErrorItem = function(message, type, path, value) {","  this.message = message || '';","  this.type = type || null;","  this.path = path || null;","  this.value = value || null;","};","","/**"," * A base class for all connection related errors."," * @extends BaseError"," * @constructor"," */","error.ConnectionError = function (parent) {","  error.BaseError.apply(this, [parent ? parent.message : '']);","  this.name = 'SequelizeConnectionError';","/**"," * The connection specific error which triggered this one"," * @member parent"," */","  this.parent = parent;","  this.original = parent;","};","util.inherits(error.ConnectionError, error.BaseError);","","/**"," * Thrown when a connection to a database is refused"," * @extends ConnectionError"," * @constructor"," */","error.ConnectionRefusedError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeConnectionRefusedError';","};","util.inherits(error.ConnectionRefusedError, error.ConnectionError);","","/**"," * Thrown when a connection to a database is refused due to insufficient privileges"," * @extends ConnectionError"," * @constructor"," */","error.AccessDeniedError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeAccessDeniedError';","};","util.inherits(error.AccessDeniedError, error.ConnectionError);","","/**"," * Thrown when a connection to a database has a hostname that was not found"," * @extends ConnectionError"," * @constructor"," */","error.HostNotFoundError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeHostNotFoundError';","};","util.inherits(error.HostNotFoundError, error.ConnectionError);","","/**"," * Thrown when a connection to a database has a hostname that was not reachable"," * @extends ConnectionError"," * @constructor"," */","error.HostNotReachableError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeHostNotReachableError';","};","util.inherits(error.HostNotReachableError, error.ConnectionError);","","/**"," * Thrown when a connection to a database has invalid values for any of the connection parameters"," * @extends ConnectionError"," * @constructor"," */","error.InvalidConnectionError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeInvalidConnectionError';","};","util.inherits(error.InvalidConnectionError, error.ConnectionError);","","/**"," * Thrown when a connection to a database times out"," * @extends ConnectionError"," * @constructor"," */","error.ConnectionTimedOutError = function (parent) {","  error.ConnectionError.call(this, parent);","  this.name = 'SequelizeConnectionTimedOutError';","};","util.inherits(error.ConnectionTimedOutError, error.ConnectionError);","","/**"," * Thrown when a some problem occurred with Instance methods (see message for details)"," * @extends BaseError"," * @constructor"," */","error.InstanceError = function (message) {","  error.BaseError.apply(this, arguments);","  this.name = 'SequelizeInstanceError';","  this.message = message;","};","util.inherits(error.InstanceError, error.BaseError);","","/**"," * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)"," * @extends BaseError"," * @constructor"," */","error.EmptyResultError = function (message) {","  error.BaseError.apply(this, arguments);","  this.name = 'SequelizeEmptyResultError';","  this.message = message;","};","util.inherits(error.EmptyResultError, error.BaseError);",""],"l":{"11":1,"12":1,"20":1,"21":0,"22":0,"24":0,"25":0,"26":0,"28":1,"41":1,"42":0,"43":0,"44":0,"49":0,"52":0,"53":0,"56":0,"57":0,"58":0,"62":1,"70":1,"71":0,"72":0,"73":0,"75":0,"84":1,"85":0,"86":0,"92":0,"93":0,"98":0,"120":1,"127":1,"128":0,"129":0,"131":1,"138":1,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"153":1,"160":1,"161":0,"162":0,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"171":0,"173":1,"180":1,"181":0,"182":0,"184":0,"185":0,"187":0,"188":0,"189":0,"190":0,"192":1,"204":1,"205":0,"206":0,"207":0,"208":0,"216":1,"217":0,"218":0,"223":0,"224":0,"226":1,"233":1,"234":0,"235":0,"237":1,"244":1,"245":0,"246":0,"248":1,"255":1,"256":0,"257":0,"259":1,"266":1,"267":0,"268":0,"270":1,"277":1,"278":0,"279":0,"281":1,"288":1,"289":0,"290":0,"292":1,"299":1,"300":0,"301":0,"302":0,"304":1,"311":1,"312":0,"313":0,"314":0,"316":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/postgres/data-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/postgres/data-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":0,"35":1,"36":1,"37":1,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":1,"103":1,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":1,"111":1,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":1,"122":0,"123":0,"124":1,"125":0,"126":1,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":1,"137":0,"138":0,"139":1,"140":0,"141":1,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":1,"153":1,"154":0,"155":0,"156":0,"157":1,"158":1,"159":1,"160":1,"161":1,"162":0,"163":0,"164":1,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":1,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":1,"186":16,"187":0,"188":16,"189":16,"190":0,"191":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,16],"35":[16,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":16,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":18},"end":{"line":38,"column":35}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":27},"end":{"line":49,"column":39}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":36}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":25},"end":{"line":78,"column":36}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":28},"end":{"line":92,"column":39}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":25},"end":{"line":103,"column":36}}},"8":{"name":"(anonymous_8)","line":112,"loc":{"start":{"line":112,"column":43},"end":{"line":112,"column":54}}},"9":{"name":"(anonymous_9)","line":126,"loc":{"start":{"line":126,"column":18},"end":{"line":126,"column":35}}},"10":{"name":"(anonymous_10)","line":136,"loc":{"start":{"line":136,"column":41},"end":{"line":136,"column":52}}},"11":{"name":"(anonymous_11)","line":156,"loc":{"start":{"line":156,"column":37},"end":{"line":156,"column":48}}},"12":{"name":"(anonymous_12)","line":176,"loc":{"start":{"line":176,"column":41},"end":{"line":176,"column":52}}},"13":{"name":"(anonymous_13)","line":196,"loc":{"start":{"line":196,"column":39},"end":{"line":196,"column":50}}},"14":{"name":"(anonymous_14)","line":223,"loc":{"start":{"line":223,"column":25},"end":{"line":223,"column":36}}},"15":{"name":"(anonymous_15)","line":231,"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":42}}},"16":{"name":"(anonymous_16)","line":243,"loc":{"start":{"line":243,"column":29},"end":{"line":243,"column":40}}},"17":{"name":"(anonymous_17)","line":264,"loc":{"start":{"line":264,"column":46},"end":{"line":264,"column":62}}},"18":{"name":"(anonymous_18)","line":269,"loc":{"start":{"line":269,"column":34},"end":{"line":269,"column":60}}},"19":{"name":"(anonymous_19)","line":275,"loc":{"start":{"line":275,"column":30},"end":{"line":275,"column":41}}},"20":{"name":"(anonymous_20)","line":296,"loc":{"start":{"line":296,"column":48},"end":{"line":296,"column":64}}},"21":{"name":"(anonymous_21)","line":301,"loc":{"start":{"line":301,"column":35},"end":{"line":301,"column":61}}},"22":{"name":"(anonymous_22)","line":306,"loc":{"start":{"line":306,"column":41},"end":{"line":306,"column":53}}},"23":{"name":"(anonymous_23)","line":316,"loc":{"start":{"line":316,"column":17},"end":{"line":316,"column":34}}},"24":{"name":"(anonymous_24)","line":325,"loc":{"start":{"line":325,"column":32},"end":{"line":325,"column":49}}},"25":{"name":"(anonymous_25)","line":356,"loc":{"start":{"line":356,"column":16},"end":{"line":356,"column":53}}},"26":{"name":"(anonymous_26)","line":363,"loc":{"start":{"line":363,"column":31},"end":{"line":363,"column":58}}},"27":{"name":"(anonymous_27)","line":364,"loc":{"start":{"line":364,"column":39},"end":{"line":364,"column":56}}},"28":{"name":"(anonymous_28)","line":384,"loc":{"start":{"line":384,"column":41},"end":{"line":384,"column":68}}},"29":{"name":"(anonymous_29)","line":385,"loc":{"start":{"line":385,"column":36},"end":{"line":385,"column":53}}},"30":{"name":"(anonymous_30)","line":422,"loc":{"start":{"line":422,"column":19},"end":{"line":422,"column":44}}},"31":{"name":"(anonymous_31)","line":425,"loc":{"start":{"line":425,"column":24},"end":{"line":425,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":0},"end":{"line":432,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":112}},"4":{"start":{"line":11,"column":2},"end":{"line":14,"column":4}},"5":{"start":{"line":16,"column":2},"end":{"line":19,"column":4}},"6":{"start":{"line":21,"column":2},"end":{"line":24,"column":4}},"7":{"start":{"line":26,"column":2},"end":{"line":29,"column":4}},"8":{"start":{"line":31,"column":2},"end":{"line":34,"column":4}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}},"10":{"start":{"line":38,"column":2},"end":{"line":40,"column":4}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":17}},"12":{"start":{"line":43,"column":2},"end":{"line":46,"column":4}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":43}},"14":{"start":{"line":49,"column":2},"end":{"line":54,"column":4}},"15":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":51,"column":6},"end":{"line":51,"column":21}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":55}},"18":{"start":{"line":56,"column":2},"end":{"line":59,"column":4}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},"20":{"start":{"line":63,"column":2},"end":{"line":69,"column":4}},"21":{"start":{"line":64,"column":4},"end":{"line":67,"column":5}},"22":{"start":{"line":65,"column":6},"end":{"line":65,"column":96}},"23":{"start":{"line":66,"column":6},"end":{"line":66,"column":31}},"24":{"start":{"line":68,"column":4},"end":{"line":68,"column":18}},"25":{"start":{"line":71,"column":2},"end":{"line":74,"column":4}},"26":{"start":{"line":76,"column":2},"end":{"line":76,"column":39}},"27":{"start":{"line":78,"column":2},"end":{"line":83,"column":4}},"28":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"29":{"start":{"line":80,"column":6},"end":{"line":80,"column":21}},"30":{"start":{"line":82,"column":4},"end":{"line":82,"column":53}},"31":{"start":{"line":85,"column":2},"end":{"line":88,"column":4}},"32":{"start":{"line":90,"column":2},"end":{"line":90,"column":45}},"33":{"start":{"line":92,"column":2},"end":{"line":94,"column":4}},"34":{"start":{"line":93,"column":4},"end":{"line":93,"column":21}},"35":{"start":{"line":96,"column":2},"end":{"line":99,"column":4}},"36":{"start":{"line":101,"column":2},"end":{"line":101,"column":39}},"37":{"start":{"line":103,"column":2},"end":{"line":105,"column":4}},"38":{"start":{"line":104,"column":4},"end":{"line":104,"column":38}},"39":{"start":{"line":107,"column":2},"end":{"line":110,"column":4}},"40":{"start":{"line":112,"column":2},"end":{"line":124,"column":5}},"41":{"start":{"line":113,"column":4},"end":{"line":113,"column":57}},"42":{"start":{"line":113,"column":36},"end":{"line":113,"column":57}},"43":{"start":{"line":114,"column":4},"end":{"line":114,"column":45}},"44":{"start":{"line":117,"column":4},"end":{"line":123,"column":5}},"45":{"start":{"line":118,"column":6},"end":{"line":118,"column":102}},"46":{"start":{"line":119,"column":6},"end":{"line":119,"column":31}},"47":{"start":{"line":120,"column":6},"end":{"line":120,"column":38}},"48":{"start":{"line":121,"column":6},"end":{"line":121,"column":33}},"49":{"start":{"line":122,"column":6},"end":{"line":122,"column":33}},"50":{"start":{"line":126,"column":2},"end":{"line":128,"column":4}},"51":{"start":{"line":127,"column":4},"end":{"line":127,"column":31}},"52":{"start":{"line":131,"column":2},"end":{"line":134,"column":4}},"53":{"start":{"line":136,"column":2},"end":{"line":148,"column":5}},"54":{"start":{"line":137,"column":4},"end":{"line":137,"column":55}},"55":{"start":{"line":137,"column":35},"end":{"line":137,"column":55}},"56":{"start":{"line":138,"column":4},"end":{"line":138,"column":44}},"57":{"start":{"line":141,"column":4},"end":{"line":147,"column":5}},"58":{"start":{"line":142,"column":6},"end":{"line":142,"column":100}},"59":{"start":{"line":143,"column":6},"end":{"line":143,"column":31}},"60":{"start":{"line":144,"column":6},"end":{"line":144,"column":38}},"61":{"start":{"line":145,"column":6},"end":{"line":145,"column":33}},"62":{"start":{"line":146,"column":6},"end":{"line":146,"column":33}},"63":{"start":{"line":151,"column":2},"end":{"line":154,"column":4}},"64":{"start":{"line":156,"column":2},"end":{"line":168,"column":5}},"65":{"start":{"line":157,"column":4},"end":{"line":157,"column":51}},"66":{"start":{"line":157,"column":33},"end":{"line":157,"column":51}},"67":{"start":{"line":158,"column":4},"end":{"line":158,"column":42}},"68":{"start":{"line":161,"column":4},"end":{"line":167,"column":5}},"69":{"start":{"line":162,"column":6},"end":{"line":162,"column":96}},"70":{"start":{"line":163,"column":6},"end":{"line":163,"column":31}},"71":{"start":{"line":164,"column":6},"end":{"line":164,"column":38}},"72":{"start":{"line":165,"column":6},"end":{"line":165,"column":33}},"73":{"start":{"line":166,"column":6},"end":{"line":166,"column":33}},"74":{"start":{"line":171,"column":2},"end":{"line":174,"column":4}},"75":{"start":{"line":176,"column":2},"end":{"line":188,"column":5}},"76":{"start":{"line":177,"column":4},"end":{"line":177,"column":55}},"77":{"start":{"line":177,"column":35},"end":{"line":177,"column":55}},"78":{"start":{"line":178,"column":4},"end":{"line":178,"column":44}},"79":{"start":{"line":181,"column":4},"end":{"line":187,"column":5}},"80":{"start":{"line":182,"column":6},"end":{"line":182,"column":100}},"81":{"start":{"line":183,"column":6},"end":{"line":183,"column":31}},"82":{"start":{"line":184,"column":6},"end":{"line":184,"column":38}},"83":{"start":{"line":185,"column":6},"end":{"line":185,"column":33}},"84":{"start":{"line":186,"column":6},"end":{"line":186,"column":33}},"85":{"start":{"line":191,"column":2},"end":{"line":194,"column":4}},"86":{"start":{"line":196,"column":2},"end":{"line":218,"column":5}},"87":{"start":{"line":197,"column":4},"end":{"line":197,"column":53}},"88":{"start":{"line":197,"column":34},"end":{"line":197,"column":53}},"89":{"start":{"line":198,"column":4},"end":{"line":198,"column":43}},"90":{"start":{"line":204,"column":4},"end":{"line":209,"column":5}},"91":{"start":{"line":205,"column":6},"end":{"line":205,"column":99}},"92":{"start":{"line":206,"column":6},"end":{"line":206,"column":31}},"93":{"start":{"line":207,"column":6},"end":{"line":207,"column":38}},"94":{"start":{"line":208,"column":6},"end":{"line":208,"column":33}},"95":{"start":{"line":210,"column":4},"end":{"line":213,"column":5}},"96":{"start":{"line":211,"column":6},"end":{"line":211,"column":82}},"97":{"start":{"line":212,"column":6},"end":{"line":212,"column":33}},"98":{"start":{"line":214,"column":4},"end":{"line":217,"column":5}},"99":{"start":{"line":215,"column":6},"end":{"line":215,"column":82}},"100":{"start":{"line":216,"column":6},"end":{"line":216,"column":33}},"101":{"start":{"line":219,"column":2},"end":{"line":219,"column":21}},"102":{"start":{"line":221,"column":2},"end":{"line":221,"column":39}},"103":{"start":{"line":223,"column":2},"end":{"line":229,"column":4}},"104":{"start":{"line":224,"column":4},"end":{"line":227,"column":5}},"105":{"start":{"line":225,"column":6},"end":{"line":225,"column":105}},"106":{"start":{"line":226,"column":6},"end":{"line":226,"column":31}},"107":{"start":{"line":228,"column":4},"end":{"line":228,"column":19}},"108":{"start":{"line":231,"column":2},"end":{"line":234,"column":4}},"109":{"start":{"line":233,"column":6},"end":{"line":233,"column":35}},"110":{"start":{"line":236,"column":2},"end":{"line":239,"column":4}},"111":{"start":{"line":241,"column":2},"end":{"line":241,"column":47}},"112":{"start":{"line":243,"column":2},"end":{"line":257,"column":4}},"113":{"start":{"line":244,"column":4},"end":{"line":244,"column":26}},"114":{"start":{"line":246,"column":4},"end":{"line":254,"column":5}},"115":{"start":{"line":247,"column":6},"end":{"line":247,"column":32}},"116":{"start":{"line":249,"column":6},"end":{"line":251,"column":7}},"117":{"start":{"line":250,"column":8},"end":{"line":250,"column":34}},"118":{"start":{"line":253,"column":6},"end":{"line":253,"column":20}},"119":{"start":{"line":256,"column":4},"end":{"line":256,"column":18}},"120":{"start":{"line":259,"column":2},"end":{"line":262,"column":4}},"121":{"start":{"line":264,"column":2},"end":{"line":267,"column":4}},"122":{"start":{"line":265,"column":4},"end":{"line":265,"column":37}},"123":{"start":{"line":266,"column":4},"end":{"line":266,"column":45}},"124":{"start":{"line":269,"column":2},"end":{"line":271,"column":4}},"125":{"start":{"line":270,"column":4},"end":{"line":270,"column":79}},"126":{"start":{"line":273,"column":2},"end":{"line":273,"column":49}},"127":{"start":{"line":275,"column":2},"end":{"line":289,"column":4}},"128":{"start":{"line":276,"column":4},"end":{"line":276,"column":29}},"129":{"start":{"line":278,"column":4},"end":{"line":286,"column":5}},"130":{"start":{"line":279,"column":6},"end":{"line":279,"column":32}},"131":{"start":{"line":281,"column":6},"end":{"line":283,"column":7}},"132":{"start":{"line":282,"column":8},"end":{"line":282,"column":34}},"133":{"start":{"line":285,"column":6},"end":{"line":285,"column":20}},"134":{"start":{"line":288,"column":4},"end":{"line":288,"column":18}},"135":{"start":{"line":291,"column":2},"end":{"line":294,"column":4}},"136":{"start":{"line":296,"column":2},"end":{"line":299,"column":4}},"137":{"start":{"line":297,"column":4},"end":{"line":297,"column":37}},"138":{"start":{"line":298,"column":4},"end":{"line":298,"column":45}},"139":{"start":{"line":301,"column":2},"end":{"line":303,"column":4}},"140":{"start":{"line":302,"column":4},"end":{"line":302,"column":79}},"141":{"start":{"line":305,"column":2},"end":{"line":305,"column":13}},"142":{"start":{"line":306,"column":2},"end":{"line":314,"column":5}},"143":{"start":{"line":307,"column":4},"end":{"line":307,"column":55}},"144":{"start":{"line":307,"column":35},"end":{"line":307,"column":55}},"145":{"start":{"line":308,"column":4},"end":{"line":308,"column":44}},"146":{"start":{"line":310,"column":4},"end":{"line":313,"column":5}},"147":{"start":{"line":312,"column":6},"end":{"line":312,"column":35}},"148":{"start":{"line":316,"column":2},"end":{"line":322,"column":4}},"149":{"start":{"line":317,"column":4},"end":{"line":320,"column":5}},"150":{"start":{"line":319,"column":6},"end":{"line":319,"column":35}},"151":{"start":{"line":321,"column":4},"end":{"line":321,"column":31}},"152":{"start":{"line":324,"column":2},"end":{"line":324,"column":34}},"153":{"start":{"line":325,"column":2},"end":{"line":331,"column":4}},"154":{"start":{"line":326,"column":4},"end":{"line":329,"column":5}},"155":{"start":{"line":328,"column":6},"end":{"line":328,"column":35}},"156":{"start":{"line":330,"column":4},"end":{"line":330,"column":47}},"157":{"start":{"line":333,"column":2},"end":{"line":336,"column":4}},"158":{"start":{"line":338,"column":2},"end":{"line":338,"column":41}},"159":{"start":{"line":340,"column":2},"end":{"line":353,"column":4}},"160":{"start":{"line":355,"column":2},"end":{"line":355,"column":33}},"161":{"start":{"line":356,"column":2},"end":{"line":360,"column":4}},"162":{"start":{"line":357,"column":4},"end":{"line":357,"column":51}},"163":{"start":{"line":359,"column":4},"end":{"line":359,"column":38}},"164":{"start":{"line":362,"column":2},"end":{"line":362,"column":33}},"165":{"start":{"line":363,"column":2},"end":{"line":376,"column":4}},"166":{"start":{"line":364,"column":4},"end":{"line":370,"column":13}},"167":{"start":{"line":365,"column":6},"end":{"line":369,"column":7}},"168":{"start":{"line":366,"column":8},"end":{"line":366,"column":62}},"169":{"start":{"line":368,"column":8},"end":{"line":368,"column":37}},"170":{"start":{"line":373,"column":4},"end":{"line":373,"column":51}},"171":{"start":{"line":375,"column":4},"end":{"line":375,"column":61}},"172":{"start":{"line":378,"column":2},"end":{"line":381,"column":4}},"173":{"start":{"line":383,"column":2},"end":{"line":383,"column":43}},"174":{"start":{"line":384,"column":2},"end":{"line":401,"column":4}},"175":{"start":{"line":385,"column":4},"end":{"line":394,"column":29}},"176":{"start":{"line":386,"column":6},"end":{"line":392,"column":7}},"177":{"start":{"line":387,"column":8},"end":{"line":387,"column":52}},"178":{"start":{"line":389,"column":8},"end":{"line":391,"column":9}},"179":{"start":{"line":390,"column":10},"end":{"line":390,"column":23}},"180":{"start":{"line":393,"column":6},"end":{"line":393,"column":35}},"181":{"start":{"line":396,"column":4},"end":{"line":398,"column":5}},"182":{"start":{"line":397,"column":6},"end":{"line":397,"column":33}},"183":{"start":{"line":400,"column":4},"end":{"line":400,"column":15}},"184":{"start":{"line":403,"column":2},"end":{"line":420,"column":4}},"185":{"start":{"line":422,"column":2},"end":{"line":429,"column":5}},"186":{"start":{"line":423,"column":4},"end":{"line":423,"column":42}},"187":{"start":{"line":423,"column":23},"end":{"line":423,"column":42}},"188":{"start":{"line":424,"column":4},"end":{"line":428,"column":5}},"189":{"start":{"line":425,"column":6},"end":{"line":427,"column":8}},"190":{"start":{"line":426,"column":8},"end":{"line":426,"column":45}},"191":{"start":{"line":431,"column":2},"end":{"line":431,"column":17}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"4":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"5":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"6":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":20}},{"start":{"line":117,"column":24},"end":{"line":117,"column":43}},{"start":{"line":117,"column":47},"end":{"line":117,"column":61}},{"start":{"line":117,"column":65},"end":{"line":117,"column":79}}]},"7":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"9":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":20}},{"start":{"line":141,"column":24},"end":{"line":141,"column":43}},{"start":{"line":141,"column":47},"end":{"line":141,"column":61}},{"start":{"line":141,"column":65},"end":{"line":141,"column":79}}]},"10":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"11":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"12":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":20}},{"start":{"line":161,"column":24},"end":{"line":161,"column":43}},{"start":{"line":161,"column":47},"end":{"line":161,"column":61}},{"start":{"line":161,"column":65},"end":{"line":161,"column":79}}]},"13":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"14":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"15":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":20}},{"start":{"line":181,"column":24},"end":{"line":181,"column":43}},{"start":{"line":181,"column":47},"end":{"line":181,"column":61}},{"start":{"line":181,"column":65},"end":{"line":181,"column":79}}]},"16":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"17":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"18":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"19":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"20":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"21":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"22":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":6},"end":{"line":249,"column":6}},{"start":{"line":249,"column":6},"end":{"line":249,"column":6}}]},"23":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"24":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":6}},{"start":{"line":281,"column":6},"end":{"line":281,"column":6}}]},"25":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"27":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":317,"column":4}},{"start":{"line":317,"column":4},"end":{"line":317,"column":4}}]},"28":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"29":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"30":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"31":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":10},"end":{"line":386,"column":19}},{"start":{"line":386,"column":23},"end":{"line":386,"column":42}}]},"32":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":8},"end":{"line":389,"column":8}},{"start":{"line":389,"column":8},"end":{"line":389,"column":8}}]},"33":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":4},"end":{"line":396,"column":4}},{"start":{"line":396,"column":4},"end":{"line":396,"column":4}}]},"34":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"35":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]}},"code":["'use strict';","","/*jshint -W110 */","","var _ = require('lodash')","  , wkx = require('wkx');","","module.exports = function (BaseTypes) {","  var warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'http://www.postgresql.org/docs/9.4/static/datatype.html');","","  BaseTypes.UUID.types.postgres = {","    oids: [2950],","    array_oids: [2951]","  };","","  BaseTypes.JSON.types.postgres = {","    oids: [114],","    array_oids: [199]","  };","","  BaseTypes.JSONB.types.postgres = {","    oids: [3802],","    array_oids: [3807]","  };","","  BaseTypes.DATEONLY.types.postgres = {","    oids: [1082],","    array_oids: [1182]","  };","","  BaseTypes.TIME.types.postgres = {","    oids: [1083],","    array_oids: [1183]","  };","","  var DECIMAL = BaseTypes.DECIMAL.inherits();","","  DECIMAL.parse = function (value) {","    return value;","  };","","  // numeric","  BaseTypes.DECIMAL.types.postgres = {","    oids: [1700],","    array_oids: [1231]","  };","","  var STRING = BaseTypes.STRING.inherits();","  STRING.prototype.toSql = function () {","    if (this._binary) {","      return 'BYTEA';","    }","    return BaseTypes.STRING.prototype.toSql.call(this);","  };","","  BaseTypes.STRING.types.postgres = {","    oids: [1043],","    array_oids: [1015]","  };","","  var TEXT = BaseTypes.TEXT.inherits();","","  TEXT.prototype.toSql = function() {","    if (this._length) {","      warn('PostgreSQL does not support TEXT with options. Plain `TEXT` will be used instead.');","      this._length = undefined;","    }","    return 'TEXT';","  };","","  BaseTypes.TEXT.types.postgres = {","    oids: [25],","    array_oids: [1009]","  };","","  var CHAR = BaseTypes.CHAR.inherits();","","  CHAR.prototype.toSql = function() {","    if (this._binary) {","      return 'BYTEA';","    }","    return BaseTypes.CHAR.prototype.toSql.call(this);","  };","","  BaseTypes.CHAR.types.postgres = {","    oids: [18, 1042],","    array_oids: [1002, 1014]","  };","","  var BOOLEAN = BaseTypes.BOOLEAN.inherits();","","  BOOLEAN.prototype.toSql = function() {","    return 'BOOLEAN';","  };","","  BaseTypes.BOOLEAN.types.postgres = {","    oids: [16],","    array_oids: [1000]","  };","","  var DATE = BaseTypes.DATE.inherits();","","  DATE.prototype.toSql = function() {","    return 'TIMESTAMP WITH TIME ZONE';","  };","","  BaseTypes.DATE.types.postgres = {","    oids: [1184],","    array_oids: [1185]","  };","","  var INTEGER = BaseTypes.INTEGER.inherits(function() {","    if (!(this instanceof INTEGER)) return new INTEGER();","    BaseTypes.INTEGER.apply(this, arguments);","","    // POSTGRES does not support any parameters for integer","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('PostgreSQL does not support INTEGER with options. Plain `INTEGER` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  INTEGER.parse = function (value) {","    return parseInt(value, 10);","  };","","  // int4","  BaseTypes.INTEGER.types.postgres = {","    oids: [23],","    array_oids: [1007]","  };","","  var BIGINT = BaseTypes.BIGINT.inherits(function() {","    if (!(this instanceof BIGINT)) return new BIGINT();","    BaseTypes.BIGINT.apply(this, arguments);","","    // POSTGRES does not support any parameters for bigint","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('PostgreSQL does not support BIGINT with options. Plain `BIGINT` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  // int8","  BaseTypes.BIGINT.types.postgres = {","    oids: [20],","    array_oids: [1016]","  };","","  var REAL = BaseTypes.REAL.inherits(function() {","    if (!(this instanceof REAL)) return new REAL();","    BaseTypes.REAL.apply(this, arguments);","","    // POSTGRES does not support any parameters for real","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('PostgreSQL does not support REAL with options. Plain `REAL` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  // float4","  BaseTypes.REAL.types.postgres = {","    oids: [700],","    array_oids: [1021]","  };","","  var DOUBLE = BaseTypes.DOUBLE.inherits(function() {","    if (!(this instanceof DOUBLE)) return new DOUBLE();","    BaseTypes.DOUBLE.apply(this, arguments);","","    // POSTGRES does not support any parameters for double","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('PostgreSQL does not support DOUBLE with options. Plain `DOUBLE` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  // float8","  BaseTypes.DOUBLE.types.postgres = {","    oids: [701],","    array_oids: [1022]","  };","","  var FLOAT = BaseTypes.FLOAT.inherits(function() {","    if (!(this instanceof FLOAT)) return new FLOAT();","    BaseTypes.FLOAT.apply(this, arguments);","","    // POSTGRES does only support lengths as parameter.","    // Values between 1-24 result in REAL","    // Values between 25-53 result in DOUBLE PRECISION","    // If decimals are provided remove these and print a warning","    if (this._decimals) {","      warn('PostgreSQL does not support FLOAT with decimals. Plain `FLOAT` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._decimals = undefined;","    }","    if (this._unsigned) {","      warn('PostgreSQL does not support FLOAT unsigned. `UNSIGNED` was removed.');","      this._unsigned = undefined;","    }","    if (this._zerofill) {","      warn('PostgreSQL does not support FLOAT zerofill. `ZEROFILL` was removed.');","      this._zerofill = undefined;","    }","  });","  delete FLOAT.parse; // Float has no separate type in PG","","  var BLOB = BaseTypes.BLOB.inherits();","","  BLOB.prototype.toSql = function() {","    if (this._length) {","      warn('PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead.');","      this._length = undefined;","    }","    return 'BYTEA';","  };","","  BLOB.prototype.$hexify = function (hex) {","    // bytea hex format http://www.postgresql.org/docs/current/static/datatype-binary.html","      return \"E'\\\\\\\\x\" + hex + \"'\";","  };","","  BaseTypes.BLOB.types.postgres = {","    oids: [17],","    array_oids: [1001]","  };","","  var GEOMETRY = BaseTypes.GEOMETRY.inherits();","","  GEOMETRY.prototype.toSql = function() {","    var result = this.key;","","    if (this.type){","      result += '(' + this.type;","","      if (this.srid){","        result += ',' + this.srid;","      }","","      result += ')';","    }","","    return result;","  };","","  BaseTypes.GEOMETRY.types.postgres = {","    oids: [],","    array_oids: []","  };","","  GEOMETRY.parse = GEOMETRY.prototype.parse = function(value) {","    var b = new Buffer(value, 'hex');","    return wkx.Geometry.parse(b).toGeoJSON();","  };","","  GEOMETRY.prototype.$stringify = function (value, options) {","    return 'ST_GeomFromGeoJSON(' + options.escape(JSON.stringify(value)) + ')';","  };","","  var GEOGRAPHY = BaseTypes.GEOGRAPHY.inherits();","","  GEOGRAPHY.prototype.toSql = function() {","    var result = 'GEOGRAPHY';","","    if (this.type){","      result += '(' + this.type;","","      if (this.srid){","        result += ',' + this.srid;","      }","","      result += ')';","    }","","    return result;","  };","","  BaseTypes.GEOGRAPHY.types.postgres = {","    oids: [],","    array_oids: []","  };","","  GEOGRAPHY.parse = GEOGRAPHY.prototype.parse = function(value) {","    var b = new Buffer(value, 'hex');","    return wkx.Geometry.parse(b).toGeoJSON();","  };","","  GEOGRAPHY.prototype.$stringify = function (value, options) {","    return 'ST_GeomFromGeoJSON(' + options.escape(JSON.stringify(value)) + ')';","  };","","  var hstore;","  var HSTORE = BaseTypes.HSTORE.inherits(function () {","    if (!(this instanceof HSTORE)) return new HSTORE();","    BaseTypes.HSTORE.apply(this, arguments);","","    if (!hstore) {","      // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated","      hstore = require('./hstore');","    }","  });","","  HSTORE.parse = function (value) {","    if (!hstore) {","      // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated","      hstore = require('./hstore');","    }","    return hstore.parse(value);","  };","","  HSTORE.prototype.escape = false;","  HSTORE.prototype.$stringify = function (value) {","    if (!hstore) {","      // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated","      hstore = require('./hstore');","    }","    return \"'\" + hstore.stringify(value) + \"'\";","  };","","  BaseTypes.HSTORE.types.postgres = {","    oids: [],","    array_oids: []","  };","","  var RANGE = BaseTypes.RANGE.inherits();","","  RANGE.oid_map = {","    3904: 23, // int4","    3905: 23,","    3906: 1700, // Numeric","    3907: 1700,","    3908: 1114, // timestamp","    3909: 1114,","    3910: 1184, // timestamptz","    3911: 1184,","    3912: 1082, // date","    3913: 1082,","    3926: 20,    // int8","    3927: 20,","  };","","  var range = require('./range');","  RANGE.parse = function (value, oid, getTypeParser) {","    var parser = getTypeParser(RANGE.oid_map[oid]);","","    return range.parse(value, parser);","  };","","  RANGE.prototype.escape = false;","  RANGE.prototype.$stringify = function (values, options) {","    var valuesStringified = values.map(function (value) {","      if (this.options.subtype.stringify) {","        return this.options.subtype.stringify(value, options);","      } else {","        return options.escape(value);","      }","    }, this);","","    // Array.map does not preserve extra array properties","    valuesStringified.inclusive = values.inclusive;","","    return  '\\'' + range.stringify(valuesStringified) + '\\'';","  };","","  BaseTypes.RANGE.types.postgres = {","    oids: [3904, 3906, 3908, 3910, 3912, 3926],","    array_oids: [3905, 3907, 3909, 3911, 3913, 3927]","  };","","  BaseTypes.ARRAY.prototype.escape = false;","  BaseTypes.ARRAY.prototype.$stringify = function (values, options) {","    var str = 'ARRAY[' + values.map(function (value) {","      if (this.type && this.type.stringify) {","        value = this.type.stringify(value, options);","","        if (this.type.escape === false) {","          return value;","        }","      }","      return options.escape(value);","    }, this).join(',') + ']';","","    if (this.type) {","      str += '::' + this.toSql();","    }","","    return str;","  };","","  var exports = {","    DECIMAL: DECIMAL,","    BLOB: BLOB,","    STRING: STRING,","    CHAR: CHAR,","    TEXT: TEXT,","    INTEGER: INTEGER,","    BOOLEAN: BOOLEAN,","    DATE: DATE,","    BIGINT: BIGINT,","    REAL: REAL,","    'DOUBLE PRECISION': DOUBLE,","    FLOAT: FLOAT,","    GEOMETRY: GEOMETRY,","    GEOGRAPHY: GEOGRAPHY,","    HSTORE: HSTORE,","    RANGE: RANGE","  };","","  _.forIn(exports, function (DataType, key) {","    if (!DataType.key) DataType.key = key;","    if (!DataType.extend) {","      DataType.extend = function(oldType) {","        return new DataType(oldType.options);","      };","    }","  });","","  return exports;","};",""],"l":{"5":1,"8":1,"9":1,"11":1,"16":1,"21":1,"26":1,"31":1,"36":1,"38":1,"39":0,"43":1,"48":1,"49":1,"50":0,"51":0,"53":0,"56":1,"61":1,"63":1,"64":0,"65":0,"66":0,"68":0,"71":1,"76":1,"78":1,"79":0,"80":0,"82":0,"85":1,"90":1,"92":1,"93":0,"96":1,"101":1,"103":1,"104":0,"107":1,"112":1,"113":0,"114":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"126":1,"127":0,"131":1,"136":1,"137":0,"138":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"151":1,"156":1,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"171":1,"176":1,"177":0,"178":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"191":1,"196":1,"197":0,"198":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"211":0,"212":0,"214":0,"215":0,"216":0,"219":1,"221":1,"223":1,"224":0,"225":0,"226":0,"228":0,"231":1,"233":0,"236":1,"241":1,"243":1,"244":0,"246":0,"247":0,"249":0,"250":0,"253":0,"256":0,"259":1,"264":1,"265":0,"266":0,"269":1,"270":0,"273":1,"275":1,"276":0,"278":0,"279":0,"281":0,"282":0,"285":0,"288":0,"291":1,"296":1,"297":0,"298":0,"301":1,"302":0,"305":1,"306":1,"307":0,"308":0,"310":0,"312":0,"316":1,"317":0,"319":0,"321":0,"324":1,"325":1,"326":0,"328":0,"330":0,"333":1,"338":1,"340":1,"355":1,"356":1,"357":0,"359":0,"362":1,"363":1,"364":0,"365":0,"366":0,"368":0,"373":0,"375":0,"378":1,"383":1,"384":1,"385":0,"386":0,"387":0,"389":0,"390":0,"393":0,"396":0,"397":0,"400":0,"403":1,"422":1,"423":16,"424":16,"425":16,"426":0,"431":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/postgres/range.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/postgres/range.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"stringifyRangeBound","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}}},"2":{"name":"parseRangeBound","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}}},"3":{"name":"stringify","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":39}}},"5":{"name":"parse","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":31}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":9},"end":{"line":69,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":12,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":15}},"5":{"start":{"line":8,"column":9},"end":{"line":12,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":42}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":33}},"8":{"start":{"line":15,"column":0},"end":{"line":25,"column":1}},"9":{"start":{"line":16,"column":2},"end":{"line":24,"column":3}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}},"11":{"start":{"line":18,"column":9},"end":{"line":24,"column":3}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"13":{"start":{"line":20,"column":9},"end":{"line":24,"column":3}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"16":{"start":{"line":27,"column":0},"end":{"line":52,"column":1}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"18":{"start":{"line":28,"column":21},"end":{"line":28,"column":33}},"19":{"start":{"line":30,"column":2},"end":{"line":30,"column":66}},"20":{"start":{"line":30,"column":24},"end":{"line":30,"column":66}},"21":{"start":{"line":31,"column":2},"end":{"line":31,"column":35}},"22":{"start":{"line":31,"column":20},"end":{"line":31,"column":35}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":111}},"24":{"start":{"line":32,"column":25},"end":{"line":32,"column":111}},"25":{"start":{"line":34,"column":2},"end":{"line":39,"column":3}},"26":{"start":{"line":35,"column":4},"end":{"line":36,"column":68}},"27":{"start":{"line":35,"column":25},"end":{"line":35,"column":57}},"28":{"start":{"line":36,"column":9},"end":{"line":36,"column":68}},"29":{"start":{"line":36,"column":38},"end":{"line":36,"column":68}},"30":{"start":{"line":38,"column":4},"end":{"line":38,"column":36}},"31":{"start":{"line":41,"column":2},"end":{"line":46,"column":5}},"32":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"33":{"start":{"line":43,"column":6},"end":{"line":43,"column":87}},"34":{"start":{"line":43,"column":45},"end":{"line":43,"column":87}},"35":{"start":{"line":44,"column":6},"end":{"line":44,"column":67}},"36":{"start":{"line":44,"column":41},"end":{"line":44,"column":67}},"37":{"start":{"line":48,"column":2},"end":{"line":48,"column":48}},"38":{"start":{"line":49,"column":2},"end":{"line":49,"column":48}},"39":{"start":{"line":51,"column":2},"end":{"line":51,"column":107}},"40":{"start":{"line":54,"column":0},"end":{"line":76,"column":1}},"41":{"start":{"line":55,"column":2},"end":{"line":55,"column":34}},"42":{"start":{"line":55,"column":22},"end":{"line":55,"column":34}},"43":{"start":{"line":56,"column":2},"end":{"line":60,"column":3}},"44":{"start":{"line":57,"column":4},"end":{"line":57,"column":19}},"45":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"46":{"start":{"line":59,"column":4},"end":{"line":59,"column":17}},"47":{"start":{"line":62,"column":2},"end":{"line":64,"column":19}},"48":{"start":{"line":66,"column":2},"end":{"line":66,"column":40}},"49":{"start":{"line":66,"column":27},"end":{"line":66,"column":40}},"50":{"start":{"line":68,"column":2},"end":{"line":71,"column":7}},"51":{"start":{"line":70,"column":6},"end":{"line":70,"column":44}},"52":{"start":{"line":73,"column":2},"end":{"line":73,"column":77}},"53":{"start":{"line":75,"column":2},"end":{"line":75,"column":16}},"54":{"start":{"line":78,"column":0},"end":{"line":81,"column":2}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":9},"end":{"line":8,"column":9}},{"start":{"line":8,"column":9},"end":{"line":8,"column":9}}]},"3":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":13},"end":{"line":8,"column":31}},{"start":{"line":8,"column":35},"end":{"line":8,"column":54}}]},"4":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":9},"end":{"line":18,"column":9}},{"start":{"line":18,"column":9},"end":{"line":18,"column":9}}]},"6":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":9}},{"start":{"line":20,"column":9},"end":{"line":20,"column":9}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"8":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"9":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"10":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"11":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"12":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"13":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":9},"end":{"line":36,"column":9}},{"start":{"line":36,"column":9},"end":{"line":36,"column":9}}]},"14":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"15":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"16":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"17":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":30},"end":{"line":51,"column":33}},{"start":{"line":51,"column":36},"end":{"line":51,"column":39}}]},"18":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":96},"end":{"line":51,"column":99}},{"start":{"line":51,"column":102},"end":{"line":51,"column":105}}]},"19":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"20":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"21":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]}},"code":["'use strict';","","var _ = require('lodash');","","function stringifyRangeBound (bound) {","  if (bound === null) {","    return '' ;","  } else if (bound === Infinity || bound === -Infinity) {","    return bound.toString().toLowerCase();","  } else {","    return JSON.stringify(bound);","  }","}","","function parseRangeBound (bound, parseType) {","  if (!bound) {","    return null;","  } else if (bound === 'infinity') {","    return Infinity;","  } else if (bound === '-infinity') {","    return -Infinity;","  } else {","    return parseType(bound);","  }","}","","function stringify (data) {","  if (data === null) return null;","","  if (!_.isArray(data)) throw new Error('range must be an array');","  if (!data.length) return 'empty';","  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');","","  if (data.hasOwnProperty('inclusive')) {","    if (!data.inclusive) data.inclusive = [false, false];","    else if (data.inclusive === true) data.inclusive = [true, true];","  } else {","    data.inclusive = [false, false];","  }","","  _.each(data, function (value, index) {","    if (_.isObject(value)) {","      if (value.hasOwnProperty('inclusive')) data.inclusive[index] = !!value.inclusive;","      if (value.hasOwnProperty('value')) data[index] = value.value;","    }","  });","","  var lowerBound = stringifyRangeBound(data[0]);","  var upperBound = stringifyRangeBound(data[1]);","","  return (data.inclusive[0] ? '[' : '(') + lowerBound + ',' + upperBound + (data.inclusive[1] ? ']' : ')');","}","","function parse (value, parser) {","  if (value === null) return null;","  if (value === 'empty') {","    var empty = [];","    empty.inclusive = [];","    return empty;","  }","","  var result = value","    .substring(1, value.length - 1)","    .split(',', 2);","","  if (result.length !== 2) return value;","","  result = result","    .map(function (value) {","      return parseRangeBound(value, parser);","    });","","  result.inclusive = [(value[0] === '['), (value[value.length - 1] === ']')];","","  return result;","}","","module.exports = {","  stringify: stringify,","  parse: parse","};",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"11":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"27":1,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"41":0,"42":0,"43":0,"44":0,"48":0,"49":0,"51":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"66":0,"68":0,"70":0,"73":0,"75":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mysql/data-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mysql/data-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":1,"59":0,"60":0,"61":1,"62":1,"63":1,"64":4,"65":0,"66":4,"67":4,"68":0,"69":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,4],"10":[4,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":4,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":38}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":37}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":30},"end":{"line":33,"column":55}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":15},"end":{"line":43,"column":41}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":25},"end":{"line":61,"column":36}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":45},"end":{"line":66,"column":56}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":46},"end":{"line":79,"column":62}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":29},"end":{"line":93,"column":40}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":25},"end":{"line":99,"column":44}}},"10":{"name":"(anonymous_10)","line":100,"loc":{"start":{"line":100,"column":40},"end":{"line":100,"column":56}}},"11":{"name":"(anonymous_11)","line":114,"loc":{"start":{"line":114,"column":19},"end":{"line":114,"column":44}}},"12":{"name":"(anonymous_12)","line":117,"loc":{"start":{"line":117,"column":24},"end":{"line":117,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":7,"column":0},"end":{"line":124,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":104}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":48}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":40}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":43}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":46}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":42}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":40}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":44}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":43}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":64}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":49}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":37}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":37}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"19":{"start":{"line":25,"column":2},"end":{"line":25,"column":44}},"20":{"start":{"line":27,"column":2},"end":{"line":27,"column":39}},"21":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":71}},"23":{"start":{"line":33,"column":2},"end":{"line":41,"column":4}},"24":{"start":{"line":34,"column":4},"end":{"line":34,"column":66}},"25":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"26":{"start":{"line":37,"column":6},"end":{"line":37,"column":52}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":46}},"28":{"start":{"line":43,"column":2},"end":{"line":57,"column":4}},"29":{"start":{"line":44,"column":4},"end":{"line":44,"column":27}},"30":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"31":{"start":{"line":47,"column":6},"end":{"line":47,"column":19}},"32":{"start":{"line":50,"column":4},"end":{"line":54,"column":5}},"33":{"start":{"line":51,"column":6},"end":{"line":51,"column":58}},"34":{"start":{"line":53,"column":6},"end":{"line":53,"column":55}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":39}},"37":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"38":{"start":{"line":62,"column":4},"end":{"line":62,"column":29}},"39":{"start":{"line":65,"column":2},"end":{"line":65,"column":68}},"40":{"start":{"line":66,"column":2},"end":{"line":77,"column":5}},"41":{"start":{"line":67,"column":4},"end":{"line":67,"column":59}},"42":{"start":{"line":67,"column":37},"end":{"line":67,"column":59}},"43":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}},"44":{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},"45":{"start":{"line":71,"column":6},"end":{"line":71,"column":30}},"46":{"start":{"line":72,"column":11},"end":{"line":76,"column":5}},"47":{"start":{"line":73,"column":6},"end":{"line":73,"column":31}},"48":{"start":{"line":75,"column":6},"end":{"line":75,"column":94}},"49":{"start":{"line":79,"column":2},"end":{"line":91,"column":4}},"50":{"start":{"line":80,"column":4},"end":{"line":80,"column":27}},"51":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"52":{"start":{"line":84,"column":6},"end":{"line":84,"column":18}},"53":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"54":{"start":{"line":90,"column":4},"end":{"line":90,"column":49}},"55":{"start":{"line":93,"column":2},"end":{"line":95,"column":4}},"56":{"start":{"line":94,"column":4},"end":{"line":94,"column":24}},"57":{"start":{"line":97,"column":2},"end":{"line":97,"column":39}},"58":{"start":{"line":99,"column":2},"end":{"line":103,"column":4}},"59":{"start":{"line":100,"column":4},"end":{"line":102,"column":24}},"60":{"start":{"line":101,"column":6},"end":{"line":101,"column":35}},"61":{"start":{"line":105,"column":2},"end":{"line":105,"column":48}},"62":{"start":{"line":107,"column":2},"end":{"line":112,"column":4}},"63":{"start":{"line":114,"column":2},"end":{"line":121,"column":5}},"64":{"start":{"line":115,"column":4},"end":{"line":115,"column":42}},"65":{"start":{"line":115,"column":23},"end":{"line":115,"column":42}},"66":{"start":{"line":116,"column":4},"end":{"line":120,"column":5}},"67":{"start":{"line":117,"column":6},"end":{"line":119,"column":8}},"68":{"start":{"line":118,"column":8},"end":{"line":118,"column":45}},"69":{"start":{"line":123,"column":2},"end":{"line":123,"column":17}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":40},"end":{"line":30,"column":64}},{"start":{"line":30,"column":67},"end":{"line":30,"column":69}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":11},"end":{"line":72,"column":11}},{"start":{"line":72,"column":11},"end":{"line":72,"column":11}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"9":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["'use strict';","","var wkx = require('wkx')","  , _ = require('lodash')","  , moment = require('moment-timezone');","","module.exports = function (BaseTypes) {","  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.mysql.com/doc/refman/5.7/en/data-types.html';","","  BaseTypes.DATE.types.mysql = ['DATETIME'];","  BaseTypes.STRING.types.mysql = ['VAR_STRING'];","  BaseTypes.CHAR.types.mysql = ['STRING'];","  BaseTypes.TEXT.types.mysql = ['BLOB'];","  BaseTypes.INTEGER.types.mysql = ['LONG'];","  BaseTypes.BIGINT.types.mysql = ['LONGLONG'];","  BaseTypes.FLOAT.types.mysql = ['FLOAT'];","  BaseTypes.TIME.types.mysql = ['TIME'];","  BaseTypes.DATEONLY.types.mysql = ['DATE'];","  BaseTypes.BOOLEAN.types.mysql = ['TINY'];","  BaseTypes.BLOB.types.mysql = ['TINYBLOB', 'BLOB', 'LONGBLOB'];","  BaseTypes.DECIMAL.types.mysql = ['NEWDECIMAL'];","  BaseTypes.UUID.types.mysql = false;","  BaseTypes.ENUM.types.mysql = false;","  BaseTypes.REAL.types.mysql = ['DOUBLE'];","  BaseTypes.DOUBLE.types.mysql = ['DOUBLE'];","","  var DATE = BaseTypes.DATE.inherits();","","  DATE.prototype.toSql = function () {","    return 'DATETIME' + (this._length ? '(' + this._length + ')' : '');","  };","","  DATE.prototype.$stringify = function (date, options) {","    date = BaseTypes.DATE.prototype.$applyTimezone(date, options);","    // Fractional DATETIMEs only supported on MySQL 5.6.4+","    if (this._length) {","      return date.format('YYYY-MM-DD HH:mm:ss.SSS');","    }","","    return date.format('YYYY-MM-DD HH:mm:ss');","  };","","  DATE.parse = function (value, options) {","    value = value.string();","","    if (value === null) {","      return value;","    }","","    if (moment.tz.zone(options.timezone)) {","      value = moment.tz(value, options.timezone).toDate();","    } else {","      value = new Date(value + ' ' + options.timezone);","    }","","    return value;","  };","","  var UUID = BaseTypes.UUID.inherits();","","  UUID.prototype.toSql = function() {","    return 'CHAR(36) BINARY';","  };","","  var SUPPORTED_GEOMETRY_TYPES = ['POINT', 'LINESTRING', 'POLYGON'];","  var GEOMETRY = BaseTypes.GEOMETRY.inherits(function() {","    if (!(this instanceof GEOMETRY)) return new GEOMETRY();","    BaseTypes.GEOMETRY.apply(this, arguments);","","    if (_.isEmpty(this.type)) {","      this.sqlType = this.key;","    } else if (_.includes(SUPPORTED_GEOMETRY_TYPES, this.type)) {","      this.sqlType = this.type;","    } else {","      throw new Error('Supported geometry types are: ' + SUPPORTED_GEOMETRY_TYPES.join(', '));","    }","  });","","  GEOMETRY.parse = GEOMETRY.prototype.parse = function(value) {","    value = value.buffer();","","    //MySQL doesn't support POINT EMPTY, https://dev.mysql.com/worklog/task/?id=2381","    if (value === null) {","      return null;","    }","","    // For some reason, discard the first 4 bytes","    value = value.slice(4);","","    return wkx.Geometry.parse(value).toGeoJSON();","  };","","  GEOMETRY.prototype.toSql = function() {","    return this.sqlType;","  };","","  var ENUM = BaseTypes.ENUM.inherits();","","  ENUM.prototype.toSql = function (options) {","    return 'ENUM(' + _.map(this.values, function(value) {","      return options.escape(value);","    }).join(', ') + ')';","  };","","  BaseTypes.GEOMETRY.types.mysql = ['GEOMETRY'];","","  var exports = {","    ENUM: ENUM,","    DATE: DATE,","    UUID: UUID,","    GEOMETRY: GEOMETRY","  };","","  _.forIn(exports, function (DataType, key) {","    if (!DataType.key) DataType.key = key;","    if (!DataType.extend) {","      DataType.extend = function(oldType) {","        return new DataType(oldType.options);","      };","    }","  });","","  return exports;","};",""],"l":{"3":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"27":1,"29":1,"30":0,"33":1,"34":0,"36":0,"37":0,"40":0,"43":1,"44":0,"46":0,"47":0,"50":0,"51":0,"53":0,"56":0,"59":1,"61":1,"62":0,"65":1,"66":1,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"75":0,"79":1,"80":0,"83":0,"84":0,"88":0,"90":0,"93":1,"94":0,"97":1,"99":1,"100":0,"101":0,"105":1,"107":1,"114":1,"115":4,"116":4,"117":4,"118":0,"123":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/sqlite/data-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/sqlite/data-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":1,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":1,"93":1,"94":0,"95":1,"96":3,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":1,"107":0,"108":1,"109":1,"110":11,"111":0,"112":11,"113":11,"114":0,"115":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,11],"24":[11,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":3,"18":0,"19":0,"20":11,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":40}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":27},"end":{"line":37,"column":38}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":25},"end":{"line":46,"column":36}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":36}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":27},"end":{"line":64,"column":38}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":43},"end":{"line":84,"column":60}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":28},"end":{"line":92,"column":39}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":41},"end":{"line":96,"column":58}}},"10":{"name":"(anonymous_10)","line":104,"loc":{"start":{"line":104,"column":27},"end":{"line":104,"column":38}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":39},"end":{"line":108,"column":66}}},"12":{"name":"(anonymous_12)","line":117,"loc":{"start":{"line":117,"column":26},"end":{"line":117,"column":37}}},"13":{"name":"(anonymous_13)","line":121,"loc":{"start":{"line":121,"column":41},"end":{"line":121,"column":68}}},"14":{"name":"(anonymous_14)","line":130,"loc":{"start":{"line":130,"column":27},"end":{"line":130,"column":38}}},"15":{"name":"(anonymous_15)","line":134,"loc":{"start":{"line":134,"column":37},"end":{"line":134,"column":64}}},"16":{"name":"(anonymous_16)","line":143,"loc":{"start":{"line":143,"column":25},"end":{"line":143,"column":36}}},"17":{"name":"(anonymous_17)","line":147,"loc":{"start":{"line":147,"column":32},"end":{"line":147,"column":52}}},"18":{"name":"(anonymous_18)","line":148,"loc":{"start":{"line":148,"column":21},"end":{"line":148,"column":38}}},"19":{"name":"(anonymous_19)","line":164,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":37}}},"20":{"name":"(anonymous_20)","line":182,"loc":{"start":{"line":182,"column":19},"end":{"line":182,"column":44}}},"21":{"name":"(anonymous_21)","line":185,"loc":{"start":{"line":185,"column":24},"end":{"line":185,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":193,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":94}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":45}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":64}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":47}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":45}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":43}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":41}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":45}},"13":{"start":{"line":17,"column":2},"end":{"line":17,"column":47}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":65}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":47}},"16":{"start":{"line":20,"column":2},"end":{"line":20,"column":41}},"17":{"start":{"line":21,"column":2},"end":{"line":21,"column":38}},"18":{"start":{"line":22,"column":2},"end":{"line":22,"column":41}},"19":{"start":{"line":23,"column":2},"end":{"line":23,"column":55}},"20":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"21":{"start":{"line":26,"column":2},"end":{"line":26,"column":39}},"22":{"start":{"line":27,"column":2},"end":{"line":34,"column":4}},"23":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"24":{"start":{"line":30,"column":6},"end":{"line":30,"column":47}},"25":{"start":{"line":32,"column":6},"end":{"line":32,"column":28}},"26":{"start":{"line":36,"column":2},"end":{"line":36,"column":43}},"27":{"start":{"line":37,"column":2},"end":{"line":43,"column":4}},"28":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"29":{"start":{"line":39,"column":6},"end":{"line":39,"column":52}},"30":{"start":{"line":41,"column":6},"end":{"line":41,"column":57}},"31":{"start":{"line":45,"column":2},"end":{"line":45,"column":39}},"32":{"start":{"line":46,"column":2},"end":{"line":52,"column":4}},"33":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"34":{"start":{"line":48,"column":6},"end":{"line":48,"column":92}},"35":{"start":{"line":49,"column":6},"end":{"line":49,"column":31}},"36":{"start":{"line":51,"column":4},"end":{"line":51,"column":18}},"37":{"start":{"line":54,"column":2},"end":{"line":54,"column":39}},"38":{"start":{"line":55,"column":2},"end":{"line":61,"column":4}},"39":{"start":{"line":56,"column":4},"end":{"line":60,"column":5}},"40":{"start":{"line":57,"column":6},"end":{"line":57,"column":49}},"41":{"start":{"line":59,"column":6},"end":{"line":59,"column":55}},"42":{"start":{"line":63,"column":2},"end":{"line":63,"column":43}},"43":{"start":{"line":64,"column":2},"end":{"line":82,"column":4}},"44":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"45":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"46":{"start":{"line":68,"column":6},"end":{"line":68,"column":28}},"47":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"48":{"start":{"line":71,"column":6},"end":{"line":71,"column":28}},"49":{"start":{"line":74,"column":4},"end":{"line":80,"column":5}},"50":{"start":{"line":75,"column":6},"end":{"line":75,"column":35}},"51":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"52":{"start":{"line":77,"column":8},"end":{"line":77,"column":39}},"53":{"start":{"line":79,"column":6},"end":{"line":79,"column":20}},"54":{"start":{"line":81,"column":4},"end":{"line":81,"column":18}},"55":{"start":{"line":84,"column":2},"end":{"line":90,"column":5}},"56":{"start":{"line":85,"column":4},"end":{"line":87,"column":6}},"57":{"start":{"line":88,"column":4},"end":{"line":88,"column":64}},"58":{"start":{"line":88,"column":36},"end":{"line":88,"column":64}},"59":{"start":{"line":89,"column":4},"end":{"line":89,"column":42}},"60":{"start":{"line":91,"column":2},"end":{"line":91,"column":50}},"61":{"start":{"line":92,"column":2},"end":{"line":94,"column":4}},"62":{"start":{"line":93,"column":4},"end":{"line":93,"column":45}},"63":{"start":{"line":96,"column":2},"end":{"line":102,"column":5}},"64":{"start":{"line":97,"column":4},"end":{"line":99,"column":6}},"65":{"start":{"line":100,"column":4},"end":{"line":100,"column":62}},"66":{"start":{"line":100,"column":35},"end":{"line":100,"column":62}},"67":{"start":{"line":101,"column":4},"end":{"line":101,"column":41}},"68":{"start":{"line":103,"column":2},"end":{"line":103,"column":47}},"69":{"start":{"line":104,"column":2},"end":{"line":106,"column":4}},"70":{"start":{"line":105,"column":4},"end":{"line":105,"column":45}},"71":{"start":{"line":108,"column":2},"end":{"line":115,"column":5}},"72":{"start":{"line":109,"column":4},"end":{"line":112,"column":6}},"73":{"start":{"line":113,"column":4},"end":{"line":113,"column":60}},"74":{"start":{"line":113,"column":34},"end":{"line":113,"column":60}},"75":{"start":{"line":114,"column":4},"end":{"line":114,"column":40}},"76":{"start":{"line":116,"column":2},"end":{"line":116,"column":44}},"77":{"start":{"line":117,"column":2},"end":{"line":119,"column":4}},"78":{"start":{"line":118,"column":4},"end":{"line":118,"column":45}},"79":{"start":{"line":121,"column":2},"end":{"line":128,"column":5}},"80":{"start":{"line":122,"column":4},"end":{"line":125,"column":6}},"81":{"start":{"line":126,"column":4},"end":{"line":126,"column":62}},"82":{"start":{"line":126,"column":35},"end":{"line":126,"column":62}},"83":{"start":{"line":127,"column":4},"end":{"line":127,"column":41}},"84":{"start":{"line":129,"column":2},"end":{"line":129,"column":57}},"85":{"start":{"line":130,"column":2},"end":{"line":132,"column":4}},"86":{"start":{"line":131,"column":4},"end":{"line":131,"column":45}},"87":{"start":{"line":134,"column":2},"end":{"line":141,"column":5}},"88":{"start":{"line":135,"column":4},"end":{"line":138,"column":6}},"89":{"start":{"line":139,"column":4},"end":{"line":139,"column":58}},"90":{"start":{"line":139,"column":33},"end":{"line":139,"column":58}},"91":{"start":{"line":140,"column":4},"end":{"line":140,"column":39}},"92":{"start":{"line":142,"column":2},"end":{"line":142,"column":41}},"93":{"start":{"line":143,"column":2},"end":{"line":145,"column":4}},"94":{"start":{"line":144,"column":4},"end":{"line":144,"column":45}},"95":{"start":{"line":147,"column":2},"end":{"line":160,"column":5}},"96":{"start":{"line":148,"column":4},"end":{"line":159,"column":6}},"97":{"start":{"line":149,"column":6},"end":{"line":157,"column":7}},"98":{"start":{"line":150,"column":8},"end":{"line":156,"column":9}},"99":{"start":{"line":151,"column":10},"end":{"line":151,"column":21}},"100":{"start":{"line":152,"column":15},"end":{"line":156,"column":9}},"101":{"start":{"line":153,"column":10},"end":{"line":153,"column":26}},"102":{"start":{"line":154,"column":15},"end":{"line":156,"column":9}},"103":{"start":{"line":155,"column":10},"end":{"line":155,"column":27}},"104":{"start":{"line":158,"column":6},"end":{"line":158,"column":19}},"105":{"start":{"line":162,"column":2},"end":{"line":162,"column":39}},"106":{"start":{"line":164,"column":2},"end":{"line":166,"column":4}},"107":{"start":{"line":165,"column":4},"end":{"line":165,"column":18}},"108":{"start":{"line":168,"column":2},"end":{"line":180,"column":4}},"109":{"start":{"line":182,"column":2},"end":{"line":189,"column":5}},"110":{"start":{"line":183,"column":4},"end":{"line":183,"column":42}},"111":{"start":{"line":183,"column":23},"end":{"line":183,"column":42}},"112":{"start":{"line":184,"column":4},"end":{"line":188,"column":5}},"113":{"start":{"line":185,"column":6},"end":{"line":187,"column":8}},"114":{"start":{"line":186,"column":8},"end":{"line":186,"column":45}},"115":{"start":{"line":191,"column":2},"end":{"line":191,"column":17}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"9":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":18},"end":{"line":85,"column":44}},{"start":{"line":85,"column":48},"end":{"line":85,"column":54}},{"start":{"line":85,"column":58},"end":{"line":87,"column":5}}]},"10":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"11":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":18},"end":{"line":97,"column":44}},{"start":{"line":97,"column":48},"end":{"line":97,"column":54}},{"start":{"line":97,"column":58},"end":{"line":99,"column":5}}]},"12":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"13":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":18},"end":{"line":109,"column":44}},{"start":{"line":109,"column":48},"end":{"line":109,"column":54}},{"start":{"line":109,"column":58},"end":{"line":112,"column":5}}]},"14":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"15":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":18},"end":{"line":122,"column":44}},{"start":{"line":122,"column":48},"end":{"line":122,"column":54}},{"start":{"line":122,"column":58},"end":{"line":125,"column":5}}]},"16":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"17":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":18},"end":{"line":135,"column":44}},{"start":{"line":135,"column":48},"end":{"line":135,"column":54}},{"start":{"line":135,"column":58},"end":{"line":138,"column":5}}]},"18":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"19":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"20":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"21":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":15},"end":{"line":152,"column":15}},{"start":{"line":152,"column":15},"end":{"line":152,"column":15}}]},"22":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":15},"end":{"line":154,"column":15}},{"start":{"line":154,"column":15},"end":{"line":154,"column":15}}]},"23":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"24":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]}},"code":["'use strict';","","var _ = require('lodash');","","module.exports = function (BaseTypes) {","  var warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://www.sqlite.org/datatype3.html');","","  BaseTypes.DATE.types.sqlite = ['DATETIME'];","  BaseTypes.STRING.types.sqlite = ['VARCHAR', 'VARCHAR BINARY'];","  BaseTypes.CHAR.types.sqlite = ['CHAR', 'CHAR BINARY'];","  BaseTypes.TEXT.types.sqlite = ['TEXT'];","  BaseTypes.INTEGER.types.sqlite = ['INTEGER'];","  BaseTypes.BIGINT.types.sqlite = ['BIGINT'];","  BaseTypes.FLOAT.types.sqlite = ['FLOAT'];","  BaseTypes.TIME.types.sqlite = ['TIME'];","  BaseTypes.DATEONLY.types.sqlite = ['DATE'];","  BaseTypes.BOOLEAN.types.sqlite = ['TINYINT'];","  BaseTypes.BLOB.types.sqlite = ['TINYBLOB', 'BLOB', 'LONGBLOB'];","  BaseTypes.DECIMAL.types.sqlite = ['DECIMAL'];","  BaseTypes.UUID.types.sqlite = ['UUID'];","  BaseTypes.ENUM.types.sqlite = false;","  BaseTypes.REAL.types.sqlite = ['REAL'];","  BaseTypes.DOUBLE.types.sqlite = ['DOUBLE PRECISION'];","  BaseTypes.GEOMETRY.types.sqlite = false;","","  var DATE = BaseTypes.DATE.inherits();","  DATE.parse = function (date, options) {","    if (date.indexOf('+') === -1) {","      // For backwards compat. Dates inserted by sequelize < 2.0dev12 will not have a timestamp set","      return new Date(date + options.timezone);","    } else {","      return new Date(date); // We already have a timezone stored in the string","    }","  };","","  var STRING = BaseTypes.STRING.inherits();","  STRING.prototype.toSql = function() {","    if (this._binary) {","      return 'VARCHAR BINARY(' + this._length + ')';","    } else {","      return BaseTypes.STRING.prototype.toSql.call(this);","    }","  };","","  var TEXT = BaseTypes.TEXT.inherits();","  TEXT.prototype.toSql = function() {","    if (this._length) {","      warn('SQLite does not support TEXT with options. Plain `TEXT` will be used instead.');","      this._length = undefined;","    }","    return 'TEXT';","  };","","  var CHAR = BaseTypes.CHAR.inherits();","  CHAR.prototype.toSql = function() {","    if (this._binary) {","      return 'CHAR BINARY(' + this._length + ')';","    } else {","      return BaseTypes.CHAR.prototype.toSql.call(this);","    }","  };","","  var NUMBER = BaseTypes.NUMBER.inherits();","  NUMBER.prototype.toSql = function() {","    var result = this.key;","","    if (this._unsigned) {","      result += ' UNSIGNED';","    }","    if (this._zerofill) {","      result += ' ZEROFILL';","    }","","    if (this._length) {","      result += '(' + this._length;","      if (typeof this._decimals === 'number') {","        result += ',' + this._decimals;","      }","      result += ')';","    }","    return result;","  };","","  var INTEGER = BaseTypes.INTEGER.inherits(function(length) {","    var options = typeof length === 'object' && length || {","      length: length","    };","    if (!(this instanceof INTEGER)) return new INTEGER(options);","    BaseTypes.INTEGER.call(this, options);","  });","  INTEGER.prototype.key = INTEGER.key = 'INTEGER';","  INTEGER.prototype.toSql = function() {","    return NUMBER.prototype.toSql.call(this);","  };","","  var BIGINT = BaseTypes.BIGINT.inherits(function(length) {","    var options = typeof length === 'object' && length || {","      length: length","    };","    if (!(this instanceof BIGINT)) return new BIGINT(options);","    BaseTypes.BIGINT.call(this, options);","  });","  BIGINT.prototype.key = BIGINT.key = 'BIGINT';","  BIGINT.prototype.toSql = function() {","    return NUMBER.prototype.toSql.call(this);","  };","","  var FLOAT = BaseTypes.FLOAT.inherits(function(length, decimals) {","    var options = typeof length === 'object' && length || {","      length: length,","      decimals: decimals","    };","    if (!(this instanceof FLOAT)) return new FLOAT(options);","    BaseTypes.FLOAT.call(this, options);","  });","  FLOAT.prototype.key = FLOAT.key = 'FLOAT';","  FLOAT.prototype.toSql = function() {","    return NUMBER.prototype.toSql.call(this);","  };","","  var DOUBLE = BaseTypes.DOUBLE.inherits(function(length, decimals) {","    var options = typeof length === 'object' && length || {","      length: length,","      decimals: decimals","    };","    if (!(this instanceof DOUBLE)) return new DOUBLE(options);","    BaseTypes.DOUBLE.call(this, options);","  });","  DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE PRECISION';","  DOUBLE.prototype.toSql = function() {","    return NUMBER.prototype.toSql.call(this);","  };","","  var REAL = BaseTypes.REAL.inherits(function(length, decimals) {","    var options = typeof length === 'object' && length || {","      length: length,","      decimals: decimals","    };","    if (!(this instanceof REAL)) return new REAL(options);","    BaseTypes.REAL.call(this, options);","  });","  REAL.prototype.key = REAL.key = 'REAL';","  REAL.prototype.toSql = function() {","    return NUMBER.prototype.toSql.call(this);","  };","","  [FLOAT, DOUBLE, REAL].forEach(function (floating) {","    floating.parse = function (value) {","      if (_.isString(value)) {","        if (value === 'NaN') {","          return NaN;","        } else if (value === 'Infinity') {","          return Infinity;","        } else if (value === '-Infinity') {","          return -Infinity;","        }","      }","      return value;","    };","  });","","  var ENUM = BaseTypes.ENUM.inherits();","","  ENUM.prototype.toSql = function () {","    return 'TEXT';","  };","","  var exports = {","    DATE: DATE,","    STRING: STRING,","    CHAR: CHAR,","    NUMBER: NUMBER,","    FLOAT: FLOAT,","    REAL: REAL,","    'DOUBLE PRECISION': DOUBLE,","    INTEGER: INTEGER,","    BIGINT: BIGINT,","    TEXT: TEXT,","    ENUM: ENUM","  };","","  _.forIn(exports, function (DataType, key) {","    if (!DataType.key) DataType.key = key;","    if (!DataType.extend) {","      DataType.extend = function(oldType) {","        return new DataType(oldType.options);","      };","    }","  });","","  return exports;","","};",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"28":0,"30":0,"32":0,"36":1,"37":1,"38":0,"39":0,"41":0,"45":1,"46":1,"47":0,"48":0,"49":0,"51":0,"54":1,"55":1,"56":0,"57":0,"59":0,"63":1,"64":1,"65":0,"67":0,"68":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"79":0,"81":0,"84":1,"85":0,"88":0,"89":0,"91":1,"92":1,"93":0,"96":1,"97":0,"100":0,"101":0,"103":1,"104":1,"105":0,"108":1,"109":0,"113":0,"114":0,"116":1,"117":1,"118":0,"121":1,"122":0,"126":0,"127":0,"129":1,"130":1,"131":0,"134":1,"135":0,"139":0,"140":0,"142":1,"143":1,"144":0,"147":1,"148":3,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"158":0,"162":1,"164":1,"165":0,"168":1,"182":1,"183":11,"184":11,"185":11,"186":0,"191":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mssql/data-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mssql/data-types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":1,"53":1,"54":0,"55":1,"56":1,"57":0,"58":1,"59":1,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":1,"110":0,"111":1,"112":1,"113":12,"114":0,"115":12,"116":12,"117":0,"118":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,12],"21":[12,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":12,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":36}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":27},"end":{"line":40,"column":42}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":27},"end":{"line":46,"column":38}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":32},"end":{"line":55,"column":58}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":36}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":28},"end":{"line":80,"column":39}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":25},"end":{"line":86,"column":36}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":24},"end":{"line":92,"column":35}}},"10":{"name":"(anonymous_10)","line":98,"loc":{"start":{"line":98,"column":25},"end":{"line":98,"column":36}}},"11":{"name":"(anonymous_11)","line":102,"loc":{"start":{"line":102,"column":30},"end":{"line":102,"column":55}}},"12":{"name":"(anonymous_12)","line":109,"loc":{"start":{"line":109,"column":43},"end":{"line":109,"column":54}}},"13":{"name":"(anonymous_13)","line":123,"loc":{"start":{"line":123,"column":41},"end":{"line":123,"column":52}}},"14":{"name":"(anonymous_14)","line":137,"loc":{"start":{"line":137,"column":37},"end":{"line":137,"column":48}}},"15":{"name":"(anonymous_15)","line":151,"loc":{"start":{"line":151,"column":39},"end":{"line":151,"column":50}}},"16":{"name":"(anonymous_16)","line":175,"loc":{"start":{"line":175,"column":25},"end":{"line":175,"column":36}}},"17":{"name":"(anonymous_17)","line":194,"loc":{"start":{"line":194,"column":19},"end":{"line":194,"column":44}}},"18":{"name":"(anonymous_18)","line":197,"loc":{"start":{"line":197,"column":24},"end":{"line":197,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":204,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":126}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":44}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":37}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":37}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":39}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":39}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":38}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":36}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":40}},"13":{"start":{"line":17,"column":2},"end":{"line":17,"column":40}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":37}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":40}},"16":{"start":{"line":20,"column":2},"end":{"line":20,"column":37}},"17":{"start":{"line":21,"column":2},"end":{"line":21,"column":37}},"18":{"start":{"line":22,"column":2},"end":{"line":22,"column":37}},"19":{"start":{"line":23,"column":2},"end":{"line":23,"column":39}},"20":{"start":{"line":25,"column":2},"end":{"line":25,"column":41}},"21":{"start":{"line":27,"column":2},"end":{"line":27,"column":39}},"22":{"start":{"line":29,"column":2},"end":{"line":38,"column":4}},"23":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"24":{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},"25":{"start":{"line":32,"column":8},"end":{"line":32,"column":118}},"26":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"27":{"start":{"line":35,"column":6},"end":{"line":35,"column":107}},"28":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"29":{"start":{"line":40,"column":2},"end":{"line":42,"column":4}},"30":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"31":{"start":{"line":44,"column":2},"end":{"line":44,"column":43}},"32":{"start":{"line":46,"column":2},"end":{"line":52,"column":4}},"33":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"34":{"start":{"line":48,"column":6},"end":{"line":48,"column":46}},"35":{"start":{"line":50,"column":6},"end":{"line":50,"column":44}},"36":{"start":{"line":54,"column":2},"end":{"line":54,"column":34}},"37":{"start":{"line":55,"column":2},"end":{"line":61,"column":4}},"38":{"start":{"line":56,"column":4},"end":{"line":60,"column":5}},"39":{"start":{"line":57,"column":6},"end":{"line":57,"column":46}},"40":{"start":{"line":59,"column":6},"end":{"line":59,"column":35}},"41":{"start":{"line":63,"column":2},"end":{"line":63,"column":39}},"42":{"start":{"line":65,"column":2},"end":{"line":76,"column":4}},"43":{"start":{"line":68,"column":4},"end":{"line":74,"column":5}},"44":{"start":{"line":69,"column":6},"end":{"line":72,"column":7}},"45":{"start":{"line":70,"column":8},"end":{"line":70,"column":117}},"46":{"start":{"line":71,"column":8},"end":{"line":71,"column":31}},"47":{"start":{"line":73,"column":6},"end":{"line":73,"column":106}},"48":{"start":{"line":75,"column":4},"end":{"line":75,"column":27}},"49":{"start":{"line":78,"column":2},"end":{"line":78,"column":45}},"50":{"start":{"line":80,"column":2},"end":{"line":82,"column":4}},"51":{"start":{"line":81,"column":4},"end":{"line":81,"column":17}},"52":{"start":{"line":84,"column":2},"end":{"line":84,"column":39}},"53":{"start":{"line":86,"column":2},"end":{"line":88,"column":4}},"54":{"start":{"line":87,"column":4},"end":{"line":87,"column":22}},"55":{"start":{"line":90,"column":2},"end":{"line":90,"column":37}},"56":{"start":{"line":92,"column":2},"end":{"line":94,"column":4}},"57":{"start":{"line":93,"column":4},"end":{"line":93,"column":23}},"58":{"start":{"line":96,"column":2},"end":{"line":96,"column":39}},"59":{"start":{"line":98,"column":2},"end":{"line":100,"column":4}},"60":{"start":{"line":99,"column":4},"end":{"line":99,"column":23}},"61":{"start":{"line":102,"column":2},"end":{"line":107,"column":4}},"62":{"start":{"line":103,"column":4},"end":{"line":103,"column":46}},"63":{"start":{"line":106,"column":4},"end":{"line":106,"column":50}},"64":{"start":{"line":109,"column":2},"end":{"line":121,"column":5}},"65":{"start":{"line":110,"column":4},"end":{"line":110,"column":57}},"66":{"start":{"line":110,"column":36},"end":{"line":110,"column":57}},"67":{"start":{"line":111,"column":4},"end":{"line":111,"column":45}},"68":{"start":{"line":114,"column":4},"end":{"line":120,"column":5}},"69":{"start":{"line":115,"column":6},"end":{"line":115,"column":97}},"70":{"start":{"line":116,"column":6},"end":{"line":116,"column":31}},"71":{"start":{"line":117,"column":6},"end":{"line":117,"column":38}},"72":{"start":{"line":118,"column":6},"end":{"line":118,"column":33}},"73":{"start":{"line":119,"column":6},"end":{"line":119,"column":33}},"74":{"start":{"line":123,"column":2},"end":{"line":135,"column":5}},"75":{"start":{"line":124,"column":4},"end":{"line":124,"column":55}},"76":{"start":{"line":124,"column":35},"end":{"line":124,"column":55}},"77":{"start":{"line":125,"column":4},"end":{"line":125,"column":44}},"78":{"start":{"line":128,"column":4},"end":{"line":134,"column":5}},"79":{"start":{"line":129,"column":6},"end":{"line":129,"column":95}},"80":{"start":{"line":130,"column":6},"end":{"line":130,"column":31}},"81":{"start":{"line":131,"column":6},"end":{"line":131,"column":38}},"82":{"start":{"line":132,"column":6},"end":{"line":132,"column":33}},"83":{"start":{"line":133,"column":6},"end":{"line":133,"column":33}},"84":{"start":{"line":137,"column":2},"end":{"line":149,"column":5}},"85":{"start":{"line":138,"column":4},"end":{"line":138,"column":51}},"86":{"start":{"line":138,"column":33},"end":{"line":138,"column":51}},"87":{"start":{"line":139,"column":4},"end":{"line":139,"column":42}},"88":{"start":{"line":142,"column":4},"end":{"line":148,"column":5}},"89":{"start":{"line":143,"column":6},"end":{"line":143,"column":91}},"90":{"start":{"line":144,"column":6},"end":{"line":144,"column":31}},"91":{"start":{"line":145,"column":6},"end":{"line":145,"column":38}},"92":{"start":{"line":146,"column":6},"end":{"line":146,"column":33}},"93":{"start":{"line":147,"column":6},"end":{"line":147,"column":33}},"94":{"start":{"line":151,"column":2},"end":{"line":172,"column":5}},"95":{"start":{"line":152,"column":4},"end":{"line":152,"column":53}},"96":{"start":{"line":152,"column":34},"end":{"line":152,"column":53}},"97":{"start":{"line":153,"column":4},"end":{"line":153,"column":43}},"98":{"start":{"line":159,"column":4},"end":{"line":163,"column":5}},"99":{"start":{"line":160,"column":6},"end":{"line":160,"column":94}},"100":{"start":{"line":161,"column":6},"end":{"line":161,"column":31}},"101":{"start":{"line":162,"column":6},"end":{"line":162,"column":38}},"102":{"start":{"line":164,"column":4},"end":{"line":167,"column":5}},"103":{"start":{"line":165,"column":6},"end":{"line":165,"column":77}},"104":{"start":{"line":166,"column":6},"end":{"line":166,"column":33}},"105":{"start":{"line":168,"column":4},"end":{"line":171,"column":5}},"106":{"start":{"line":169,"column":6},"end":{"line":169,"column":77}},"107":{"start":{"line":170,"column":6},"end":{"line":170,"column":33}},"108":{"start":{"line":174,"column":2},"end":{"line":174,"column":39}},"109":{"start":{"line":175,"column":2},"end":{"line":177,"column":4}},"110":{"start":{"line":176,"column":4},"end":{"line":176,"column":26}},"111":{"start":{"line":179,"column":2},"end":{"line":192,"column":4}},"112":{"start":{"line":194,"column":2},"end":{"line":201,"column":5}},"113":{"start":{"line":195,"column":4},"end":{"line":195,"column":42}},"114":{"start":{"line":195,"column":23},"end":{"line":195,"column":42}},"115":{"start":{"line":196,"column":4},"end":{"line":200,"column":5}},"116":{"start":{"line":197,"column":6},"end":{"line":199,"column":8}},"117":{"start":{"line":198,"column":8},"end":{"line":198,"column":45}},"118":{"start":{"line":203,"column":2},"end":{"line":203,"column":17}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"7":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"8":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"9":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":20}},{"start":{"line":114,"column":24},"end":{"line":114,"column":43}},{"start":{"line":114,"column":47},"end":{"line":114,"column":61}},{"start":{"line":114,"column":65},"end":{"line":114,"column":79}}]},"10":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":20}},{"start":{"line":128,"column":24},"end":{"line":128,"column":43}},{"start":{"line":128,"column":47},"end":{"line":128,"column":61}},{"start":{"line":128,"column":65},"end":{"line":128,"column":79}}]},"13":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"14":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"15":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":20}},{"start":{"line":142,"column":24},"end":{"line":142,"column":43}},{"start":{"line":142,"column":47},"end":{"line":142,"column":61}},{"start":{"line":142,"column":65},"end":{"line":142,"column":79}}]},"16":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"17":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"18":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"19":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"20":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"21":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]}},"code":["'use strict';","","var _ = require('lodash');","","module.exports = function (BaseTypes) {","  var warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx');","","  BaseTypes.DATE.types.mssql = [42];","  BaseTypes.STRING.types.mssql = [231, 173];","  BaseTypes.CHAR.types.mssql = [175];","  BaseTypes.TEXT.types.mssql = false;","  BaseTypes.INTEGER.types.mssql = [38];","  BaseTypes.BIGINT.types.mssql = false;","  BaseTypes.FLOAT.types.mssql = [109];","  BaseTypes.TIME.types.mssql = [41];","  BaseTypes.DATEONLY.types.mssql = [40];","  BaseTypes.BOOLEAN.types.mssql = [104];","  BaseTypes.BLOB.types.mssql = [165];","  BaseTypes.DECIMAL.types.mssql = [106];","  BaseTypes.UUID.types.mssql = false;","  BaseTypes.ENUM.types.mssql = false;","  BaseTypes.REAL.types.mssql = [109];","  BaseTypes.DOUBLE.types.mssql = [109];","  // BaseTypes.GEOMETRY.types.mssql = [240]; // not yet supported","  BaseTypes.GEOMETRY.types.mssql = false;","","  var BLOB = BaseTypes.BLOB.inherits();","","  BLOB.prototype.toSql = function() {","    if (this._length) {","      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8","        warn('MSSQL does not support BLOB with the `length` = `tiny` option. `VARBINARY(256)` will be used instead.');","        return 'VARBINARY(256)';","      }","      warn('MSSQL does not support BLOB with the `length` option. `VARBINARY(MAX)` will be used instead.');","    }","    return 'VARBINARY(MAX)';","  };","","  BLOB.prototype.$hexify = function (hex) {","    return '0x' + hex;","  };","","  var STRING = BaseTypes.STRING.inherits();","","  STRING.prototype.toSql = function() {","    if (!this._binary) {","      return 'NVARCHAR(' + this._length + ')';","    } else{","      return 'BINARY(' + this._length + ')';","    }","  };","","  STRING.prototype.escape = false;","  STRING.prototype.$stringify = function (value, options) {","    if (this._binary) {","      return BLOB.prototype.$stringify(value);","    } else {","      return options.escape(value);","    }","  };","","  var TEXT = BaseTypes.TEXT.inherits();","","  TEXT.prototype.toSql = function() {","    // TEXT is deprecated in mssql and it would normally be saved as a non-unicode string.","    // Using unicode is just future proof","    if (this._length) {","      if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8","        warn('MSSQL does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');","        return 'NVARCHAR(256)';","      }","      warn('MSSQL does not support TEXT with the `length` option. `NVARCHAR(MAX)` will be used instead.');","    }","    return 'NVARCHAR(MAX)';","  };","","  var BOOLEAN = BaseTypes.BOOLEAN.inherits();","","  BOOLEAN.prototype.toSql = function() {","    return 'BIT';","  };","","  var UUID = BaseTypes.UUID.inherits();","","  UUID.prototype.toSql = function() {","    return 'CHAR(36)';","  };","","  var NOW = BaseTypes.NOW.inherits();","","  NOW.prototype.toSql = function() {","    return 'GETDATE()';","  };","","  var DATE = BaseTypes.DATE.inherits();","","  DATE.prototype.toSql = function() {","    return 'DATETIME2';","  };","","  DATE.prototype.$stringify = function (date, options) {","    date = this.$applyTimezone(date, options);","","    // mssql not allow +timezone datetime format","    return date.format('YYYY-MM-DD HH:mm:ss.SSS');","  };","","  var INTEGER = BaseTypes.INTEGER.inherits(function() {","    if (!(this instanceof INTEGER)) return new INTEGER();","    BaseTypes.INTEGER.apply(this, arguments);","","    // MSSQL does not support any options for integer","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('MSSQL does not support INTEGER with options. Plain `INTEGER` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  var BIGINT = BaseTypes.BIGINT.inherits(function() {","    if (!(this instanceof BIGINT)) return new BIGINT();","    BaseTypes.BIGINT.apply(this, arguments);","","    // MSSQL does not support any options for bigint","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('MSSQL does not support BIGINT with options. Plain `BIGINT` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  var REAL = BaseTypes.REAL.inherits(function() {","    if (!(this instanceof REAL)) return new REAL();","    BaseTypes.REAL.apply(this, arguments);","","    // MSSQL does not support any options for real","    if (this._length || this.options.length || this._unsigned || this._zerofill) {","      warn('MSSQL does not support REAL with options. Plain `REAL` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","      this._unsigned = undefined;","      this._zerofill = undefined;","    }","  });","","  var FLOAT = BaseTypes.FLOAT.inherits(function() {","    if (!(this instanceof FLOAT)) return new FLOAT();","    BaseTypes.FLOAT.apply(this, arguments);","","    // MSSQL does only support lengths as option.","    // Values between 1-24 result in 7 digits precision (4 bytes storage size)","    // Values between 25-53 result in 15 digits precision (8 bytes storage size)","    // If decimals are provided remove these and print a warning","    if (this._decimals) {","      warn('MSSQL does not support Float with decimals. Plain `FLOAT` will be used instead.');","      this._length = undefined;","      this.options.length = undefined;","    }","    if (this._unsigned) {","      warn('MSSQL does not support Float unsigned. `UNSIGNED` was removed.');","      this._unsigned = undefined;","    }","    if (this._zerofill) {","      warn('MSSQL does not support Float zerofill. `ZEROFILL` was removed.');","      this._zerofill = undefined;","    }","  });","","  var ENUM = BaseTypes.ENUM.inherits();","  ENUM.prototype.toSql = function() {","    return 'VARCHAR(255)';","  };","","  var exports = {","    BLOB: BLOB,","    BOOLEAN: BOOLEAN,","    ENUM: ENUM,","    STRING: STRING,","    UUID: UUID,","    DATE: DATE,","    NOW: NOW,","    INTEGER: INTEGER,","    BIGINT: BIGINT,","    REAL: REAL,","    FLOAT: FLOAT,","    TEXT: TEXT","  };","","  _.forIn(exports, function (DataType, key) {","    if (!DataType.key) DataType.key = key;","    if (!DataType.extend) {","      DataType.extend = function(oldType) {","        return new DataType(oldType.options);","      };","    }","  });","","  return exports;","};",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"27":1,"29":1,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0,"40":1,"41":0,"44":1,"46":1,"47":0,"48":0,"50":0,"54":1,"55":1,"56":0,"57":0,"59":0,"63":1,"65":1,"68":0,"69":0,"70":0,"71":0,"73":0,"75":0,"78":1,"80":1,"81":0,"84":1,"86":1,"87":0,"90":1,"92":1,"93":0,"96":1,"98":1,"99":0,"102":1,"103":0,"106":0,"109":1,"110":0,"111":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"123":1,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"137":1,"138":0,"139":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":1,"152":0,"153":0,"159":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"168":0,"169":0,"170":0,"174":1,"175":1,"176":0,"179":1,"194":1,"195":12,"196":12,"197":12,"198":0,"203":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/sql-string.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/sql-string.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0,0,0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":21},"end":{"line":8,"column":52}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":19},"end":{"line":15,"column":60}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":49},"end":{"line":63,"column":61}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":19},"end":{"line":78,"column":60}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":28},"end":{"line":81,"column":44}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":75}}},"7":{"name":"(anonymous_7)","line":91,"loc":{"start":{"line":91,"column":40},"end":{"line":91,"column":61}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":6,"column":24}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":67}},"6":{"start":{"line":15,"column":0},"end":{"line":76,"column":2}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}},"8":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"10":{"start":{"line":20,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":20}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":20}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":10}},"17":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":83}},"19":{"start":{"line":42,"column":2},"end":{"line":48,"column":3}},"20":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"21":{"start":{"line":44,"column":6},"end":{"line":44,"column":62}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":51}},"23":{"start":{"line":50,"column":2},"end":{"line":56,"column":3}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":75}},"25":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":72}},"27":{"start":{"line":55,"column":4},"end":{"line":55,"column":27}},"28":{"start":{"line":58,"column":2},"end":{"line":74,"column":3}},"29":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"30":{"start":{"line":63,"column":4},"end":{"line":73,"column":7}},"31":{"start":{"line":64,"column":6},"end":{"line":72,"column":7}},"32":{"start":{"line":65,"column":19},"end":{"line":65,"column":32}},"33":{"start":{"line":66,"column":19},"end":{"line":66,"column":32}},"34":{"start":{"line":67,"column":19},"end":{"line":67,"column":32}},"35":{"start":{"line":68,"column":19},"end":{"line":68,"column":32}},"36":{"start":{"line":69,"column":19},"end":{"line":69,"column":32}},"37":{"start":{"line":70,"column":21},"end":{"line":70,"column":34}},"38":{"start":{"line":71,"column":17},"end":{"line":71,"column":33}},"39":{"start":{"line":75,"column":2},"end":{"line":75,"column":45}},"40":{"start":{"line":78,"column":0},"end":{"line":88,"column":2}},"41":{"start":{"line":79,"column":2},"end":{"line":79,"column":29}},"42":{"start":{"line":81,"column":2},"end":{"line":87,"column":5}},"43":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"44":{"start":{"line":83,"column":6},"end":{"line":83,"column":19}},"45":{"start":{"line":86,"column":4},"end":{"line":86,"column":69}},"46":{"start":{"line":90,"column":0},"end":{"line":102,"column":2}},"47":{"start":{"line":91,"column":2},"end":{"line":101,"column":5}},"48":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"49":{"start":{"line":93,"column":6},"end":{"line":93,"column":19}},"50":{"start":{"line":96,"column":4},"end":{"line":100,"column":5}},"51":{"start":{"line":97,"column":6},"end":{"line":97,"column":68}},"52":{"start":{"line":99,"column":6},"end":{"line":99,"column":91}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":23}},{"start":{"line":17,"column":27},"end":{"line":17,"column":39}}]},"4":{"line":20,"type":"switch","locations":[{"start":{"line":21,"column":2},"end":{"line":28,"column":22}},{"start":{"line":29,"column":2},"end":{"line":30,"column":20}},{"start":{"line":31,"column":2},"end":{"line":35,"column":10}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":51}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"8":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"9":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"10":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"11":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"12":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":30}},{"start":{"line":52,"column":34},"end":{"line":52,"column":41}}]},"13":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"14":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":28}},{"start":{"line":58,"column":32},"end":{"line":58,"column":52}},{"start":{"line":58,"column":56},"end":{"line":58,"column":75}}]},"15":{"line":64,"type":"switch","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":32}},{"start":{"line":66,"column":8},"end":{"line":66,"column":32}},{"start":{"line":67,"column":8},"end":{"line":67,"column":32}},{"start":{"line":68,"column":8},"end":{"line":68,"column":32}},{"start":{"line":69,"column":8},"end":{"line":69,"column":32}},{"start":{"line":70,"column":8},"end":{"line":70,"column":34}},{"start":{"line":71,"column":8},"end":{"line":71,"column":33}}]},"16":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":21},"end":{"line":75,"column":25}},{"start":{"line":75,"column":28},"end":{"line":75,"column":31}}]},"17":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"18":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"19":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":30}},{"start":{"line":92,"column":34},"end":{"line":92,"column":60}}]},"20":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]}},"code":["'use strict';","","/* jshint -W110 */","var dataTypes = require('./data-types')","  , _ = require('lodash')","  , SqlString = exports;","","SqlString.escapeId = function(val, forbidQualified) {","  if (forbidQualified) {","    return '`' + val.replace(/`/g, '``') + '`';","  }","  return '`' + val.replace(/`/g, '``').replace(/\\./g, '`.`') + '`';","};","","SqlString.escape = function(val, timeZone, dialect, format) {","  var prependN = false;","  if (val === undefined || val === null) {","    return 'NULL';","  }","  switch (typeof val) {","  case 'boolean':","    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0","    // for us. Postgres actually has a boolean type with true/false literals,","    // but sequelize doesn't use it yet.","    if (dialect === 'sqlite' || dialect === 'mssql') {","      return +!!val;","    }","    return '' + !!val;","  case 'number':","    return val + '';","  case 'string':","    // In mssql, prepend N to all quoted vals which are originally a string (for","    // unicode compatibility)","    prependN = dialect === 'mssql';","    break;","  }","","  if (val instanceof Date) {","    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });","  }","","  if (Buffer.isBuffer(val)) {","    if (dataTypes[dialect].BLOB) {","      return dataTypes[dialect].BLOB.prototype.stringify(val);","    }","","    return dataTypes.BLOB.prototype.stringify(val);","  }","","  if (Array.isArray(val)) {","    var escape = _.partial(SqlString.escape, _, timeZone, dialect, format);","    if (dialect === 'postgres' && !format) {","      return dataTypes.ARRAY.prototype.stringify(val, {escape: escape});","    }","    return val.map(escape);","  }","","  if (dialect === 'postgres' || dialect === 'sqlite' || dialect === 'mssql') {","    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS","    // http://stackoverflow.com/q/603572/130598","    val = val.replace(/'/g, \"''\");","  } else {","    val = val.replace(/[\\0\\n\\r\\b\\t\\\\\\'\\\"\\x1a]/g, function(s) {","      switch (s) {","        case '\\0': return '\\\\0';","        case '\\n': return '\\\\n';","        case '\\r': return '\\\\r';","        case '\\b': return '\\\\b';","        case '\\t': return '\\\\t';","        case '\\x1a': return '\\\\Z';","        default: return '\\\\' + s;","      }","    });","  }","  return (prependN ? \"N'\" : \"'\") + val + \"'\";","};","","SqlString.format = function(sql, values, timeZone, dialect) {","  values = [].concat(values);","","  return sql.replace(/\\?/g, function(match) {","    if (!values.length) {","      return match;","    }","","    return SqlString.escape(values.shift(), timeZone, dialect, true);","  });","};","","SqlString.formatNamedParameters = function(sql, values, timeZone, dialect) {","  return sql.replace(/\\:+(?!\\d)(\\w+)/g, function(value, key) {","    if ('postgres' === dialect && '::' === value.slice(0, 2)) {","      return value;","    }","","    if (values[key] !== undefined) {","      return SqlString.escape(values[key], timeZone, dialect, true);","    } else {","      throw new Error('Named parameter \"' + value + '\" has no value in the given object.');","    }","  });","};",""],"l":{"4":1,"8":1,"9":0,"10":0,"12":0,"15":1,"16":0,"17":0,"18":0,"20":0,"25":0,"26":0,"28":0,"30":0,"34":0,"35":0,"38":0,"39":0,"42":0,"43":0,"44":0,"47":0,"50":0,"51":0,"52":0,"53":0,"55":0,"58":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"75":0,"78":1,"79":0,"81":0,"82":0,"83":0,"86":0,"90":1,"91":0,"92":0,"93":0,"96":0,"97":0,"99":0}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils/parameter-validator.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils/parameter-validator.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"validateDeprecation","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":59}}},"2":{"name":"validate","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}},"3":{"name":"check","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":6,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":11}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":153}},"7":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":109}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":79}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"11":{"start":{"line":22,"column":0},"end":{"line":30,"column":1}},"12":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":95}},"15":{"start":{"line":32,"column":0},"end":{"line":55,"column":1}},"16":{"start":{"line":33,"column":2},"end":{"line":38,"column":20}},"17":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"19":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":49}},"21":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":55}},"23":{"start":{"line":52,"column":2},"end":{"line":54,"column":45}},"24":{"start":{"line":57,"column":0},"end":{"line":57,"column":23}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":14},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":152}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"4":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":40},"end":{"line":16,"column":66}},{"start":{"line":16,"column":70},"end":{"line":16,"column":77}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":34}},{"start":{"line":25,"column":38},"end":{"line":25,"column":130}}]},"7":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":5},"end":{"line":38,"column":12}},{"start":{"line":38,"column":16},"end":{"line":38,"column":18}}]},"8":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"9":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":12}},{"start":{"line":40,"column":16},"end":{"line":40,"column":32}}]},"10":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"11":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"12":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":9},"end":{"line":52,"column":14}},{"start":{"line":53,"column":7},"end":{"line":53,"column":55}},{"start":{"line":54,"column":7},"end":{"line":54,"column":44}}]}},"code":["'use strict';","","var _ = require('lodash');","var util = require('util');","","function validateDeprecation (value, expectation, options) {","  if (!options.deprecated) {","    return;","  }","","  var valid = value instanceof options.deprecated || Object.prototype.toString.call(value) === Object.prototype.toString.call(options.deprecated.call());","","  if (valid) {","    var message = util.format('%s should not be of type \"%s\"', util.inspect(value), options.deprecated.name);","","    console.log('DEPRECATION WARNING:', options.deprecationWarning || message);","  }","","  return valid;","}","","function validate (value, expectation) {","  // the second part of this check is a workaround to deal with an issue that occurs in node-webkit when","  // using object literals.  https://github.com/sequelize/sequelize/issues/2685","  if (value instanceof expectation || Object.prototype.toString.call(value) === Object.prototype.toString.call(expectation.call())) {","    return true;","  }","","  throw new Error(util.format('The parameter (value: %s) is no %s.', value, expectation.name));","}","","function check (value, expectation, options) {","  options = _.extend({","    deprecated: false,","    index: null,","    method: null,","    optional: false","  }, options || {});","","  if (!value && options.optional) {","    return true;","  }","","  if (value === undefined) {","    throw new Error('No value has been passed.');","  }","","  if (expectation === undefined) {","    throw new Error('No expectation has been passed.');","  }","","  return false","    || validateDeprecation(value, expectation, options)","    || validate(value, expectation, options);","}","","module.exports = check;",""],"l":{"3":1,"4":1,"6":1,"7":0,"8":0,"11":0,"13":0,"14":0,"16":0,"19":0,"22":1,"25":0,"26":0,"29":0,"32":1,"33":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"52":0,"57":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/promise.js","s":{"1":1,"2":1,"3":19,"4":19,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":19,"2":19,"3":0},"fnMap":{"1":{"name":"shimCLS","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":50}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":24,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":23,"column":5}},"4":{"start":{"line":10,"column":4},"end":{"line":22,"column":6}},"5":{"start":{"line":11,"column":6},"end":{"line":19,"column":7}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":39}},"7":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"8":{"start":{"line":14,"column":10},"end":{"line":14,"column":82}},"9":{"start":{"line":15,"column":10},"end":{"line":17,"column":11}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":65}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":39}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":46}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":45}},"15":{"start":{"line":30,"column":0},"end":{"line":30,"column":42}},"16":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"17":{"start":{"line":32,"column":0},"end":{"line":32,"column":43}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":29}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":35}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":32}},"22":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"23":{"start":{"line":40,"column":0},"end":{"line":40,"column":39}},"24":{"start":{"line":41,"column":0},"end":{"line":41,"column":45}},"25":{"start":{"line":42,"column":0},"end":{"line":42,"column":42}},"26":{"start":{"line":43,"column":0},"end":{"line":43,"column":42}},"27":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}},"28":{"start":{"line":47,"column":0},"end":{"line":47,"column":43}},"29":{"start":{"line":50,"column":0},"end":{"line":50,"column":39}},"30":{"start":{"line":53,"column":0},"end":{"line":53,"column":43}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":25}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":6}},{"start":{"line":11,"column":6},"end":{"line":11,"column":6}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":10},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":52}}]},"3":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":41},"end":{"line":14,"column":69}},{"start":{"line":14,"column":72},"end":{"line":14,"column":81}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":10}},{"start":{"line":15,"column":10},"end":{"line":15,"column":10}}]},"5":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":15},"end":{"line":15,"column":42}},{"start":{"line":15,"column":46},"end":{"line":15,"column":87}}]}},"code":["'use strict';","","var Promise = require('bluebird')","  , shimmer = require('shimmer');","","// functionName: The Promise function that should be shimmed","// fnArgs: The arguments index that should be CLS enabled (typically all callbacks). Offset from last if negative","function shimCLS(object, functionName, fnArgs){","  shimmer.wrap(object, functionName, function(fn) {","    return function () {","      if (Promise.Sequelize && Promise.Sequelize.cls) {","        var ns = Promise.Sequelize.cls;","        for(var x=0; x<fnArgs.length; x++) {","          var argIndex = fnArgs[x] < 0 ? arguments.length + fnArgs[x] : fnArgs[x];","          if ( argIndex < arguments.length && typeof arguments[argIndex] === 'function' ) {","            arguments[argIndex] = ns.bind( arguments[argIndex] );","          }","        }","      }","","      return fn.apply(this, arguments);","    };","  });","}","","// Core","shimCLS(Promise, 'join', [-1]);","shimCLS(Promise.prototype, 'then', [0, 1, 2]);","shimCLS(Promise.prototype, 'spread', [0, 1]);","shimCLS(Promise.prototype, 'catch', [-1]);","shimCLS(Promise.prototype, 'error', [0]);","shimCLS(Promise.prototype, 'finally', [0]);","","// Collections","shimCLS(Promise, 'map', [1]);","shimCLS(Promise, 'mapSeries', [1]);","shimCLS(Promise, 'reduce', [1]);","shimCLS(Promise, 'filter', [1]);","shimCLS(Promise, 'each', [1]);","shimCLS(Promise.prototype, 'map', [0]);","shimCLS(Promise.prototype, 'mapSeries', [0]);","shimCLS(Promise.prototype, 'reduce', [0]);","shimCLS(Promise.prototype, 'filter', [0]);","shimCLS(Promise.prototype, 'each', [0]);","","// Promisification","shimCLS(Promise.prototype, 'nodeify', [0]);","","// Utility","shimCLS(Promise.prototype, 'tap', [0]);","","// Error management configuration","shimCLS(Promise.prototype, 'done', [0, 1]);","","module.exports = Promise;",""],"l":{"3":1,"8":1,"9":19,"10":19,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"21":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"47":1,"50":1,"53":1,"55":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/model.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":1,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":1,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":1,"507":0,"508":1,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":1,"525":0,"526":1,"527":0,"528":1,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":1,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":1,"572":0,"573":1,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":1,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":1,"646":1,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":1,"656":1,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":1,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":1,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":1,"702":1,"703":0,"704":1,"705":0,"706":1,"707":0,"708":1,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":1,"734":0,"735":0,"736":1,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":1,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":1,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":1,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":1,"811":1,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":1,"880":0,"881":0,"882":0,"883":1,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":1,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":1,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":1,"1040":0,"1041":1,"1042":0,"1043":0,"1044":0,"1045":1,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":1,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":1,"1073":0,"1074":1,"1075":1,"1076":1,"1077":1,"1078":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0,0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0,0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0,0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":48}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":80},"end":{"line":50,"column":97}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":27},"end":{"line":68,"column":62}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":64},"end":{"line":78,"column":90}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":7},"end":{"line":103,"column":18}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":7},"end":{"line":109,"column":18}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":27},"end":{"line":114,"column":39}}},"8":{"name":"(anonymous_8)","line":121,"loc":{"start":{"line":121,"column":21},"end":{"line":121,"column":46}}},"9":{"name":"(anonymous_9)","line":128,"loc":{"start":{"line":128,"column":28},"end":{"line":128,"column":46}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":30},"end":{"line":162,"column":41}}},"11":{"name":"(anonymous_11)","line":164,"loc":{"start":{"line":164,"column":48},"end":{"line":164,"column":68}}},"12":{"name":"(anonymous_12)","line":167,"loc":{"start":{"line":167,"column":27},"end":{"line":167,"column":38}}},"13":{"name":"(anonymous_13)","line":215,"loc":{"start":{"line":215,"column":21},"end":{"line":215,"column":43}}},"14":{"name":"(anonymous_14)","line":219,"loc":{"start":{"line":219,"column":35},"end":{"line":219,"column":57}}},"15":{"name":"(anonymous_15)","line":223,"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":43}}},"16":{"name":"(anonymous_16)","line":234,"loc":{"start":{"line":234,"column":29},"end":{"line":234,"column":40}}},"17":{"name":"(anonymous_17)","line":239,"loc":{"start":{"line":239,"column":17},"end":{"line":239,"column":33}}},"18":{"name":"conformOptions","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":39}}},"19":{"name":"(anonymous_19)","line":265,"loc":{"start":{"line":265,"column":40},"end":{"line":265,"column":58}}},"20":{"name":"conformInclude","line":274,"loc":{"start":{"line":274,"column":0},"end":{"line":274,"column":39}}},"21":{"name":"(anonymous_21)","line":317,"loc":{"start":{"line":317,"column":30},"end":{"line":317,"column":58}}},"22":{"name":"addAllIncludes","line":375,"loc":{"start":{"line":375,"column":3},"end":{"line":375,"column":45}}},"23":{"name":"(anonymous_23)","line":376,"loc":{"start":{"line":376,"column":41},"end":{"line":376,"column":63}}},"24":{"name":"(anonymous_24)","line":420,"loc":{"start":{"line":420,"column":31},"end":{"line":420,"column":61}}},"25":{"name":"(anonymous_25)","line":436,"loc":{"start":{"line":436,"column":40},"end":{"line":436,"column":59}}},"26":{"name":"(anonymous_26)","line":456,"loc":{"start":{"line":456,"column":26},"end":{"line":456,"column":45}}},"27":{"name":"(anonymous_27)","line":512,"loc":{"start":{"line":512,"column":26},"end":{"line":512,"column":65}}},"28":{"name":"(anonymous_28)","line":524,"loc":{"start":{"line":524,"column":40},"end":{"line":524,"column":61}}},"29":{"name":"(anonymous_29)","line":526,"loc":{"start":{"line":526,"column":40},"end":{"line":526,"column":63}}},"30":{"name":"(anonymous_30)","line":639,"loc":{"start":{"line":639,"column":49},"end":{"line":639,"column":67}}},"31":{"name":"(anonymous_31)","line":656,"loc":{"start":{"line":656,"column":28},"end":{"line":656,"column":46}}},"32":{"name":"(anonymous_32)","line":661,"loc":{"start":{"line":661,"column":23},"end":{"line":661,"column":46}}},"33":{"name":"(anonymous_33)","line":685,"loc":{"start":{"line":685,"column":18},"end":{"line":685,"column":29}}},"34":{"name":"(anonymous_34)","line":693,"loc":{"start":{"line":693,"column":46},"end":{"line":693,"column":60}}},"35":{"name":"(anonymous_35)","line":698,"loc":{"start":{"line":698,"column":47},"end":{"line":698,"column":67}}},"36":{"name":"(anonymous_36)","line":714,"loc":{"start":{"line":714,"column":30},"end":{"line":714,"column":47}}},"37":{"name":"(anonymous_37)","line":728,"loc":{"start":{"line":728,"column":32},"end":{"line":728,"column":49}}},"38":{"name":"(anonymous_38)","line":741,"loc":{"start":{"line":741,"column":36},"end":{"line":741,"column":47}}},"39":{"name":"(anonymous_39)","line":748,"loc":{"start":{"line":748,"column":31},"end":{"line":748,"column":46}}},"40":{"name":"(anonymous_40)","line":753,"loc":{"start":{"line":753,"column":24},"end":{"line":753,"column":52}}},"41":{"name":"(anonymous_41)","line":757,"loc":{"start":{"line":757,"column":27},"end":{"line":757,"column":38}}},"42":{"name":"(anonymous_42)","line":762,"loc":{"start":{"line":762,"column":27},"end":{"line":762,"column":43}}},"43":{"name":"(anonymous_43)","line":768,"loc":{"start":{"line":768,"column":37},"end":{"line":768,"column":66}}},"44":{"name":"(anonymous_44)","line":774,"loc":{"start":{"line":774,"column":27},"end":{"line":774,"column":38}}},"45":{"name":"(anonymous_45)","line":779,"loc":{"start":{"line":779,"column":27},"end":{"line":779,"column":43}}},"46":{"name":"(anonymous_46)","line":785,"loc":{"start":{"line":785,"column":24},"end":{"line":785,"column":44}}},"47":{"name":"(anonymous_47)","line":810,"loc":{"start":{"line":810,"column":29},"end":{"line":810,"column":56}}},"48":{"name":"(anonymous_48)","line":881,"loc":{"start":{"line":881,"column":70},"end":{"line":881,"column":96}}},"49":{"name":"(anonymous_49)","line":891,"loc":{"start":{"line":891,"column":45},"end":{"line":891,"column":59}}},"50":{"name":"(anonymous_50)","line":896,"loc":{"start":{"line":896,"column":42},"end":{"line":896,"column":56}}},"51":{"name":"(anonymous_51)","line":901,"loc":{"start":{"line":901,"column":44},"end":{"line":901,"column":58}}},"52":{"name":"(anonymous_52)","line":906,"loc":{"start":{"line":906,"column":43},"end":{"line":906,"column":57}}},"53":{"name":"(anonymous_53)","line":911,"loc":{"start":{"line":911,"column":42},"end":{"line":911,"column":56}}},"54":{"name":"(anonymous_54)","line":916,"loc":{"start":{"line":916,"column":45},"end":{"line":916,"column":59}}},"55":{"name":"(anonymous_55)","line":921,"loc":{"start":{"line":921,"column":46},"end":{"line":921,"column":60}}},"56":{"name":"(anonymous_56)","line":933,"loc":{"start":{"line":933,"column":46},"end":{"line":933,"column":59}}},"57":{"name":"(anonymous_57)","line":944,"loc":{"start":{"line":944,"column":57},"end":{"line":944,"column":71}}},"58":{"name":"(anonymous_58)","line":958,"loc":{"start":{"line":958,"column":39},"end":{"line":958,"column":53}}},"59":{"name":"(anonymous_59)","line":968,"loc":{"start":{"line":968,"column":34},"end":{"line":968,"column":54}}},"60":{"name":"(anonymous_60)","line":978,"loc":{"start":{"line":978,"column":23},"end":{"line":978,"column":41}}},"61":{"name":"(anonymous_61)","line":985,"loc":{"start":{"line":985,"column":21},"end":{"line":985,"column":33}}},"62":{"name":"(anonymous_62)","line":989,"loc":{"start":{"line":989,"column":10},"end":{"line":989,"column":22}}},"63":{"name":"(anonymous_63)","line":993,"loc":{"start":{"line":993,"column":10},"end":{"line":993,"column":22}}},"64":{"name":"(anonymous_64)","line":995,"loc":{"start":{"line":995,"column":10},"end":{"line":995,"column":22}}},"65":{"name":"(anonymous_65)","line":997,"loc":{"start":{"line":997,"column":10},"end":{"line":997,"column":29}}},"66":{"name":"(anonymous_66)","line":1001,"loc":{"start":{"line":1001,"column":45},"end":{"line":1001,"column":62}}},"67":{"name":"(anonymous_67)","line":1002,"loc":{"start":{"line":1002,"column":30},"end":{"line":1002,"column":47}}},"68":{"name":"(anonymous_68)","line":1007,"loc":{"start":{"line":1007,"column":32},"end":{"line":1007,"column":49}}},"69":{"name":"(anonymous_69)","line":1015,"loc":{"start":{"line":1015,"column":10},"end":{"line":1015,"column":22}}},"70":{"name":"(anonymous_70)","line":1030,"loc":{"start":{"line":1030,"column":23},"end":{"line":1030,"column":41}}},"71":{"name":"(anonymous_71)","line":1034,"loc":{"start":{"line":1034,"column":29},"end":{"line":1034,"column":46}}},"72":{"name":"(anonymous_72)","line":1049,"loc":{"start":{"line":1049,"column":25},"end":{"line":1049,"column":51}}},"73":{"name":"(anonymous_73)","line":1065,"loc":{"start":{"line":1065,"column":19},"end":{"line":1065,"column":30}}},"74":{"name":"(anonymous_74)","line":1083,"loc":{"start":{"line":1083,"column":31},"end":{"line":1083,"column":49}}},"75":{"name":"(anonymous_75)","line":1090,"loc":{"start":{"line":1090,"column":27},"end":{"line":1090,"column":39}}},"76":{"name":"(anonymous_76)","line":1104,"loc":{"start":{"line":1104,"column":27},"end":{"line":1104,"column":59}}},"77":{"name":"(anonymous_77)","line":1168,"loc":{"start":{"line":1168,"column":24},"end":{"line":1168,"column":41}}},"78":{"name":"(anonymous_78)","line":1182,"loc":{"start":{"line":1182,"column":18},"end":{"line":1182,"column":35}}},"79":{"name":"scopeCustomizer","line":1214,"loc":{"start":{"line":1214,"column":39},"end":{"line":1214,"column":95}}},"80":{"name":"(anonymous_80)","line":1231,"loc":{"start":{"line":1231,"column":22},"end":{"line":1231,"column":40}}},"81":{"name":"(anonymous_81)","line":1336,"loc":{"start":{"line":1336,"column":26},"end":{"line":1336,"column":44}}},"82":{"name":"(anonymous_82)","line":1355,"loc":{"start":{"line":1355,"column":33},"end":{"line":1355,"column":44}}},"83":{"name":"(anonymous_83)","line":1362,"loc":{"start":{"line":1362,"column":10},"end":{"line":1362,"column":21}}},"84":{"name":"(anonymous_84)","line":1368,"loc":{"start":{"line":1368,"column":10},"end":{"line":1368,"column":21}}},"85":{"name":"(anonymous_85)","line":1395,"loc":{"start":{"line":1395,"column":10},"end":{"line":1395,"column":21}}},"86":{"name":"(anonymous_86)","line":1399,"loc":{"start":{"line":1399,"column":9},"end":{"line":1399,"column":27}}},"87":{"name":"(anonymous_87)","line":1403,"loc":{"start":{"line":1403,"column":10},"end":{"line":1403,"column":29}}},"88":{"name":"(anonymous_88)","line":1420,"loc":{"start":{"line":1420,"column":22},"end":{"line":1420,"column":49}}},"89":{"name":"(anonymous_89)","line":1428,"loc":{"start":{"line":1428,"column":38},"end":{"line":1428,"column":57}}},"90":{"name":"(anonymous_90)","line":1431,"loc":{"start":{"line":1431,"column":23},"end":{"line":1431,"column":47}}},"91":{"name":"(anonymous_91)","line":1454,"loc":{"start":{"line":1454,"column":12},"end":{"line":1454,"column":27}}},"92":{"name":"(anonymous_92)","line":1455,"loc":{"start":{"line":1455,"column":22},"end":{"line":1455,"column":40}}},"93":{"name":"(anonymous_93)","line":1480,"loc":{"start":{"line":1480,"column":27},"end":{"line":1480,"column":52}}},"94":{"name":"(anonymous_94)","line":1511,"loc":{"start":{"line":1511,"column":26},"end":{"line":1511,"column":44}}},"95":{"name":"(anonymous_95)","line":1550,"loc":{"start":{"line":1550,"column":28},"end":{"line":1550,"column":76}}},"96":{"name":"(anonymous_96)","line":1605,"loc":{"start":{"line":1605,"column":24},"end":{"line":1605,"column":42}}},"97":{"name":"(anonymous_97)","line":1606,"loc":{"start":{"line":1606,"column":33},"end":{"line":1606,"column":44}}},"98":{"name":"(anonymous_98)","line":1611,"loc":{"start":{"line":1611,"column":10},"end":{"line":1611,"column":21}}},"99":{"name":"(anonymous_99)","line":1662,"loc":{"start":{"line":1662,"column":31},"end":{"line":1662,"column":49}}},"100":{"name":"(anonymous_100)","line":1672,"loc":{"start":{"line":1672,"column":39},"end":{"line":1672,"column":55}}},"101":{"name":"(anonymous_101)","line":1679,"loc":{"start":{"line":1679,"column":38},"end":{"line":1679,"column":56}}},"102":{"name":"(anonymous_102)","line":1699,"loc":{"start":{"line":1699,"column":22},"end":{"line":1699,"column":47}}},"103":{"name":"(anonymous_103)","line":1712,"loc":{"start":{"line":1712,"column":22},"end":{"line":1712,"column":47}}},"104":{"name":"(anonymous_104)","line":1725,"loc":{"start":{"line":1725,"column":22},"end":{"line":1725,"column":47}}},"105":{"name":"(anonymous_105)","line":1740,"loc":{"start":{"line":1740,"column":24},"end":{"line":1740,"column":50}}},"106":{"name":"(anonymous_106)","line":1751,"loc":{"start":{"line":1751,"column":48},"end":{"line":1751,"column":68}}},"107":{"name":"(anonymous_107)","line":1768,"loc":{"start":{"line":1768,"column":28},"end":{"line":1768,"column":57}}},"108":{"name":"(anonymous_108)","line":1782,"loc":{"start":{"line":1782,"column":48},"end":{"line":1782,"column":68}}},"109":{"name":"(anonymous_109)","line":1787,"loc":{"start":{"line":1787,"column":23},"end":{"line":1787,"column":40}}},"110":{"name":"(anonymous_110)","line":1812,"loc":{"start":{"line":1812,"column":25},"end":{"line":1812,"column":51}}},"111":{"name":"(anonymous_111)","line":1838,"loc":{"start":{"line":1838,"column":65},"end":{"line":1838,"column":83}}},"112":{"name":"(anonymous_112)","line":1849,"loc":{"start":{"line":1849,"column":33},"end":{"line":1849,"column":52}}},"113":{"name":"(anonymous_113)","line":1880,"loc":{"start":{"line":1880,"column":31},"end":{"line":1880,"column":49}}},"114":{"name":"(anonymous_114)","line":1907,"loc":{"start":{"line":1907,"column":59},"end":{"line":1907,"column":72}}},"115":{"name":"(anonymous_115)","line":1914,"loc":{"start":{"line":1914,"column":10},"end":{"line":1914,"column":29}}},"116":{"name":"(anonymous_116)","line":1926,"loc":{"start":{"line":1926,"column":56},"end":{"line":1926,"column":75}}},"117":{"name":"(anonymous_117)","line":1933,"loc":{"start":{"line":1933,"column":51},"end":{"line":1933,"column":66}}},"118":{"name":"(anonymous_118)","line":1943,"loc":{"start":{"line":1943,"column":24},"end":{"line":1943,"column":43}}},"119":{"name":"(anonymous_119)","line":1950,"loc":{"start":{"line":1950,"column":13},"end":{"line":1950,"column":25}}},"120":{"name":"(anonymous_120)","line":1968,"loc":{"start":{"line":1968,"column":33},"end":{"line":1968,"column":51}}},"121":{"name":"(anonymous_121)","line":1981,"loc":{"start":{"line":1981,"column":47},"end":{"line":1981,"column":65}}},"122":{"name":"(anonymous_122)","line":1984,"loc":{"start":{"line":1984,"column":56},"end":{"line":1984,"column":74}}},"123":{"name":"(anonymous_123)","line":1986,"loc":{"start":{"line":1986,"column":51},"end":{"line":1986,"column":66}}},"124":{"name":"(anonymous_124)","line":1987,"loc":{"start":{"line":1987,"column":40},"end":{"line":1987,"column":58}}},"125":{"name":"(anonymous_125)","line":2017,"loc":{"start":{"line":2017,"column":25},"end":{"line":2017,"column":52}}},"126":{"name":"(anonymous_126)","line":2029,"loc":{"start":{"line":2029,"column":56},"end":{"line":2029,"column":68}}},"127":{"name":"(anonymous_127)","line":2080,"loc":{"start":{"line":2080,"column":29},"end":{"line":2080,"column":56}}},"128":{"name":"(anonymous_128)","line":2119,"loc":{"start":{"line":2119,"column":30},"end":{"line":2119,"column":47}}},"129":{"name":"(anonymous_129)","line":2123,"loc":{"start":{"line":2123,"column":21},"end":{"line":2123,"column":32}}},"130":{"name":"(anonymous_130)","line":2128,"loc":{"start":{"line":2128,"column":10},"end":{"line":2128,"column":21}}},"131":{"name":"(anonymous_131)","line":2132,"loc":{"start":{"line":2132,"column":36},"end":{"line":2132,"column":55}}},"132":{"name":"(anonymous_132)","line":2135,"loc":{"start":{"line":2135,"column":54},"end":{"line":2135,"column":69}}},"133":{"name":"(anonymous_133)","line":2141,"loc":{"start":{"line":2141,"column":49},"end":{"line":2141,"column":64}}},"134":{"name":"(anonymous_134)","line":2147,"loc":{"start":{"line":2147,"column":14},"end":{"line":2147,"column":25}}},"135":{"name":"(anonymous_135)","line":2154,"loc":{"start":{"line":2154,"column":10},"end":{"line":2154,"column":21}}},"136":{"name":"(anonymous_136)","line":2155,"loc":{"start":{"line":2155,"column":22},"end":{"line":2155,"column":41}}},"137":{"name":"(anonymous_137)","line":2171,"loc":{"start":{"line":2171,"column":36},"end":{"line":2171,"column":55}}},"138":{"name":"(anonymous_138)","line":2180,"loc":{"start":{"line":2180,"column":14},"end":{"line":2180,"column":35}}},"139":{"name":"(anonymous_139)","line":2186,"loc":{"start":{"line":2186,"column":30},"end":{"line":2186,"column":49}}},"140":{"name":"(anonymous_140)","line":2199,"loc":{"start":{"line":2199,"column":107},"end":{"line":2199,"column":126}}},"141":{"name":"(anonymous_141)","line":2201,"loc":{"start":{"line":2201,"column":26},"end":{"line":2201,"column":47}}},"142":{"name":"(anonymous_142)","line":2209,"loc":{"start":{"line":2209,"column":10},"end":{"line":2209,"column":21}}},"143":{"name":"(anonymous_143)","line":2214,"loc":{"start":{"line":2214,"column":10},"end":{"line":2214,"column":21}}},"144":{"name":"(anonymous_144)","line":2234,"loc":{"start":{"line":2234,"column":27},"end":{"line":2234,"column":45}}},"145":{"name":"(anonymous_145)","line":2257,"loc":{"start":{"line":2257,"column":26},"end":{"line":2257,"column":44}}},"146":{"name":"(anonymous_146)","line":2284,"loc":{"start":{"line":2284,"column":21},"end":{"line":2284,"column":32}}},"147":{"name":"(anonymous_147)","line":2289,"loc":{"start":{"line":2289,"column":10},"end":{"line":2289,"column":21}}},"148":{"name":"(anonymous_148)","line":2292,"loc":{"start":{"line":2292,"column":144},"end":{"line":2292,"column":163}}},"149":{"name":"(anonymous_149)","line":2293,"loc":{"start":{"line":2293,"column":70},"end":{"line":2293,"column":81}}},"150":{"name":"(anonymous_150)","line":2296,"loc":{"start":{"line":2296,"column":14},"end":{"line":2296,"column":35}}},"151":{"name":"(anonymous_151)","line":2300,"loc":{"start":{"line":2300,"column":10},"end":{"line":2300,"column":21}}},"152":{"name":"(anonymous_152)","line":2319,"loc":{"start":{"line":2319,"column":9},"end":{"line":2319,"column":20}}},"153":{"name":"(anonymous_153)","line":2322,"loc":{"start":{"line":2322,"column":36},"end":{"line":2322,"column":55}}},"154":{"name":"(anonymous_154)","line":2326,"loc":{"start":{"line":2326,"column":9},"end":{"line":2326,"column":20}}},"155":{"name":"(anonymous_155)","line":2331,"loc":{"start":{"line":2331,"column":10},"end":{"line":2331,"column":33}}},"156":{"name":"(anonymous_156)","line":2350,"loc":{"start":{"line":2350,"column":26},"end":{"line":2350,"column":44}}},"157":{"name":"(anonymous_157)","line":2368,"loc":{"start":{"line":2368,"column":21},"end":{"line":2368,"column":32}}},"158":{"name":"(anonymous_158)","line":2373,"loc":{"start":{"line":2373,"column":10},"end":{"line":2373,"column":21}}},"159":{"name":"(anonymous_159)","line":2376,"loc":{"start":{"line":2376,"column":161},"end":{"line":2376,"column":180}}},"160":{"name":"(anonymous_160)","line":2377,"loc":{"start":{"line":2377,"column":70},"end":{"line":2377,"column":81}}},"161":{"name":"(anonymous_161)","line":2380,"loc":{"start":{"line":2380,"column":14},"end":{"line":2380,"column":35}}},"162":{"name":"(anonymous_162)","line":2384,"loc":{"start":{"line":2384,"column":10},"end":{"line":2384,"column":21}}},"163":{"name":"(anonymous_163)","line":2394,"loc":{"start":{"line":2394,"column":9},"end":{"line":2394,"column":20}}},"164":{"name":"(anonymous_164)","line":2397,"loc":{"start":{"line":2397,"column":36},"end":{"line":2397,"column":55}}},"165":{"name":"(anonymous_165)","line":2401,"loc":{"start":{"line":2401,"column":9},"end":{"line":2401,"column":20}}},"166":{"name":"(anonymous_166)","line":2406,"loc":{"start":{"line":2406,"column":10},"end":{"line":2406,"column":33}}},"167":{"name":"(anonymous_167)","line":2432,"loc":{"start":{"line":2432,"column":25},"end":{"line":2432,"column":51}}},"168":{"name":"(anonymous_168)","line":2465,"loc":{"start":{"line":2465,"column":32},"end":{"line":2465,"column":46}}},"169":{"name":"(anonymous_169)","line":2485,"loc":{"start":{"line":2485,"column":21},"end":{"line":2485,"column":32}}},"170":{"name":"(anonymous_170)","line":2498,"loc":{"start":{"line":2498,"column":46},"end":{"line":2498,"column":67}}},"171":{"name":"(anonymous_171)","line":2506,"loc":{"start":{"line":2506,"column":10},"end":{"line":2506,"column":21}}},"172":{"name":"(anonymous_172)","line":2510,"loc":{"start":{"line":2510,"column":61},"end":{"line":2510,"column":72}}},"173":{"name":"(anonymous_173)","line":2516,"loc":{"start":{"line":2516,"column":10},"end":{"line":2516,"column":21}}},"174":{"name":"(anonymous_174)","line":2521,"loc":{"start":{"line":2521,"column":145},"end":{"line":2521,"column":166}}},"175":{"name":"(anonymous_175)","line":2532,"loc":{"start":{"line":2532,"column":38},"end":{"line":2532,"column":57}}},"176":{"name":"(anonymous_176)","line":2536,"loc":{"start":{"line":2536,"column":35},"end":{"line":2536,"column":60}}},"177":{"name":"(anonymous_177)","line":2543,"loc":{"start":{"line":2543,"column":71},"end":{"line":2543,"column":82}}},"178":{"name":"(anonymous_178)","line":2546,"loc":{"start":{"line":2546,"column":49},"end":{"line":2546,"column":74}}},"179":{"name":"(anonymous_179)","line":2561,"loc":{"start":{"line":2561,"column":16},"end":{"line":2561,"column":37}}},"180":{"name":"(anonymous_180)","line":2576,"loc":{"start":{"line":2576,"column":42},"end":{"line":2576,"column":61}}},"181":{"name":"(anonymous_181)","line":2583,"loc":{"start":{"line":2583,"column":19},"end":{"line":2583,"column":40}}},"182":{"name":"(anonymous_182)","line":2590,"loc":{"start":{"line":2590,"column":10},"end":{"line":2590,"column":28}}},"183":{"name":"(anonymous_183)","line":2601,"loc":{"start":{"line":2601,"column":132},"end":{"line":2601,"column":155}}},"184":{"name":"(anonymous_184)","line":2609,"loc":{"start":{"line":2609,"column":9},"end":{"line":2609,"column":26}}},"185":{"name":"(anonymous_185)","line":2611,"loc":{"start":{"line":2611,"column":36},"end":{"line":2611,"column":55}}},"186":{"name":"(anonymous_186)","line":2613,"loc":{"start":{"line":2613,"column":14},"end":{"line":2613,"column":25}}},"187":{"name":"(anonymous_187)","line":2617,"loc":{"start":{"line":2617,"column":9},"end":{"line":2617,"column":20}}},"188":{"name":"(anonymous_188)","line":2621,"loc":{"start":{"line":2621,"column":60},"end":{"line":2621,"column":71}}},"189":{"name":"(anonymous_189)","line":2625,"loc":{"start":{"line":2625,"column":10},"end":{"line":2625,"column":27}}},"190":{"name":"(anonymous_190)","line":2636,"loc":{"start":{"line":2636,"column":27},"end":{"line":2636,"column":53}}},"191":{"name":"(anonymous_191)","line":2640,"loc":{"start":{"line":2640,"column":39},"end":{"line":2640,"column":54}}},"192":{"name":"(anonymous_192)","line":2647,"loc":{"start":{"line":2647,"column":36},"end":{"line":2647,"column":55}}},"193":{"name":"(anonymous_193)","line":2652,"loc":{"start":{"line":2652,"column":37},"end":{"line":2652,"column":53}}},"194":{"name":"(anonymous_194)","line":2665,"loc":{"start":{"line":2665,"column":31},"end":{"line":2665,"column":50}}},"195":{"name":"(anonymous_195)","line":2679,"loc":{"start":{"line":2679,"column":36},"end":{"line":2679,"column":60}}},"196":{"name":"matchesModelAndAlias","line":2680,"loc":{"start":{"line":2680,"column":52},"end":{"line":2680,"column":88}}},"197":{"name":"(anonymous_197)","line":2697,"loc":{"start":{"line":2697,"column":26},"end":{"line":2697,"column":37}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":16,"column":56}},"2":{"start":{"line":26,"column":0},"end":{"line":100,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":45,"column":20}},"4":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"5":{"start":{"line":48,"column":2},"end":{"line":48,"column":27}},"6":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"7":{"start":{"line":50,"column":2},"end":{"line":53,"column":5}},"8":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"9":{"start":{"line":51,"column":31},"end":{"line":51,"column":47}},"10":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"11":{"start":{"line":55,"column":2},"end":{"line":55,"column":37}},"12":{"start":{"line":56,"column":2},"end":{"line":56,"column":61}},"13":{"start":{"line":58,"column":2},"end":{"line":62,"column":3}},"14":{"start":{"line":59,"column":4},"end":{"line":59,"column":131}},"15":{"start":{"line":61,"column":4},"end":{"line":61,"column":44}},"16":{"start":{"line":64,"column":2},"end":{"line":64,"column":37}},"17":{"start":{"line":65,"column":2},"end":{"line":65,"column":55}},"18":{"start":{"line":68,"column":2},"end":{"line":76,"column":5}},"19":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"20":{"start":{"line":70,"column":6},"end":{"line":70,"column":153}},"21":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"22":{"start":{"line":74,"column":6},"end":{"line":74,"column":140}},"23":{"start":{"line":78,"column":1},"end":{"line":99,"column":16}},"24":{"start":{"line":79,"column":3},"end":{"line":81,"column":4}},"25":{"start":{"line":80,"column":5},"end":{"line":80,"column":37}},"26":{"start":{"line":84,"column":4},"end":{"line":84,"column":61}},"27":{"start":{"line":86,"column":4},"end":{"line":92,"column":5}},"28":{"start":{"line":87,"column":6},"end":{"line":87,"column":52}},"29":{"start":{"line":89,"column":6},"end":{"line":91,"column":7}},"30":{"start":{"line":90,"column":8},"end":{"line":90,"column":74}},"31":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"32":{"start":{"line":95,"column":6},"end":{"line":95,"column":66}},"33":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"34":{"start":{"line":102,"column":0},"end":{"line":106,"column":3}},"35":{"start":{"line":104,"column":4},"end":{"line":104,"column":59}},"36":{"start":{"line":108,"column":0},"end":{"line":112,"column":3}},"37":{"start":{"line":110,"column":4},"end":{"line":110,"column":46}},"38":{"start":{"line":114,"column":0},"end":{"line":116,"column":2}},"39":{"start":{"line":115,"column":2},"end":{"line":115,"column":49}},"40":{"start":{"line":121,"column":0},"end":{"line":160,"column":2}},"41":{"start":{"line":122,"column":2},"end":{"line":122,"column":26}},"42":{"start":{"line":127,"column":2},"end":{"line":131,"column":3}},"43":{"start":{"line":128,"column":4},"end":{"line":130,"column":7}},"44":{"start":{"line":129,"column":6},"end":{"line":129,"column":45}},"45":{"start":{"line":134,"column":2},"end":{"line":139,"column":3}},"46":{"start":{"line":135,"column":4},"end":{"line":135,"column":71}},"47":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"48":{"start":{"line":137,"column":6},"end":{"line":137,"column":96}},"49":{"start":{"line":141,"column":2},"end":{"line":144,"column":3}},"50":{"start":{"line":143,"column":4},"end":{"line":143,"column":19}},"51":{"start":{"line":146,"column":2},"end":{"line":149,"column":121}},"52":{"start":{"line":151,"column":2},"end":{"line":151,"column":84}},"53":{"start":{"line":153,"column":2},"end":{"line":157,"column":3}},"54":{"start":{"line":154,"column":4},"end":{"line":154,"column":36}},"55":{"start":{"line":156,"column":4},"end":{"line":156,"column":63}},"56":{"start":{"line":159,"column":2},"end":{"line":159,"column":17}},"57":{"start":{"line":162,"column":0},"end":{"line":165,"column":2}},"58":{"start":{"line":163,"column":2},"end":{"line":163,"column":18}},"59":{"start":{"line":164,"column":2},"end":{"line":164,"column":91}},"60":{"start":{"line":164,"column":70},"end":{"line":164,"column":87}},"61":{"start":{"line":167,"column":0},"end":{"line":232,"column":2}},"62":{"start":{"line":168,"column":2},"end":{"line":170,"column":16}},"63":{"start":{"line":174,"column":2},"end":{"line":189,"column":3}},"64":{"start":{"line":175,"column":4},"end":{"line":178,"column":5}},"65":{"start":{"line":177,"column":6},"end":{"line":177,"column":141}},"66":{"start":{"line":180,"column":4},"end":{"line":188,"column":6}},"67":{"start":{"line":191,"column":2},"end":{"line":197,"column":3}},"68":{"start":{"line":192,"column":4},"end":{"line":196,"column":6}},"69":{"start":{"line":198,"column":2},"end":{"line":204,"column":3}},"70":{"start":{"line":199,"column":4},"end":{"line":203,"column":6}},"71":{"start":{"line":205,"column":2},"end":{"line":210,"column":3}},"72":{"start":{"line":206,"column":4},"end":{"line":209,"column":6}},"73":{"start":{"line":212,"column":2},"end":{"line":212,"column":61}},"74":{"start":{"line":213,"column":2},"end":{"line":213,"column":26}},"75":{"start":{"line":215,"column":2},"end":{"line":217,"column":5}},"76":{"start":{"line":216,"column":4},"end":{"line":216,"column":37}},"77":{"start":{"line":219,"column":2},"end":{"line":221,"column":5}},"78":{"start":{"line":220,"column":4},"end":{"line":220,"column":37}},"79":{"start":{"line":223,"column":2},"end":{"line":227,"column":5}},"80":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"81":{"start":{"line":225,"column":6},"end":{"line":225,"column":39}},"82":{"start":{"line":229,"column":2},"end":{"line":231,"column":3}},"83":{"start":{"line":230,"column":4},"end":{"line":230,"column":48}},"84":{"start":{"line":234,"column":0},"end":{"line":246,"column":2}},"85":{"start":{"line":235,"column":2},"end":{"line":235,"column":64}},"86":{"start":{"line":237,"column":2},"end":{"line":237,"column":33}},"87":{"start":{"line":239,"column":2},"end":{"line":245,"column":16}},"88":{"start":{"line":240,"column":4},"end":{"line":244,"column":5}},"89":{"start":{"line":241,"column":6},"end":{"line":241,"column":92}},"90":{"start":{"line":243,"column":6},"end":{"line":243,"column":38}},"91":{"start":{"line":248,"column":0},"end":{"line":270,"column":1}},"92":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"93":{"start":{"line":250,"column":4},"end":{"line":250,"column":36}},"94":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"95":{"start":{"line":254,"column":4},"end":{"line":254,"column":11}},"96":{"start":{"line":257,"column":2},"end":{"line":262,"column":3}},"97":{"start":{"line":258,"column":4},"end":{"line":258,"column":40}},"98":{"start":{"line":259,"column":9},"end":{"line":262,"column":3}},"99":{"start":{"line":260,"column":4},"end":{"line":260,"column":27}},"100":{"start":{"line":261,"column":4},"end":{"line":261,"column":11}},"101":{"start":{"line":265,"column":2},"end":{"line":269,"column":5}},"102":{"start":{"line":266,"column":4},"end":{"line":266,"column":44}},"103":{"start":{"line":268,"column":4},"end":{"line":268,"column":19}},"104":{"start":{"line":272,"column":0},"end":{"line":272,"column":39}},"105":{"start":{"line":274,"column":0},"end":{"line":313,"column":1}},"106":{"start":{"line":275,"column":2},"end":{"line":275,"column":12}},"107":{"start":{"line":277,"column":2},"end":{"line":277,"column":38}},"108":{"start":{"line":277,"column":23},"end":{"line":277,"column":38}},"109":{"start":{"line":279,"column":2},"end":{"line":310,"column":3}},"110":{"start":{"line":280,"column":4},"end":{"line":284,"column":5}},"111":{"start":{"line":281,"column":6},"end":{"line":281,"column":29}},"112":{"start":{"line":283,"column":6},"end":{"line":283,"column":29}},"113":{"start":{"line":286,"column":4},"end":{"line":286,"column":69}},"114":{"start":{"line":287,"column":9},"end":{"line":310,"column":3}},"115":{"start":{"line":288,"column":4},"end":{"line":288,"column":33}},"116":{"start":{"line":289,"column":9},"end":{"line":310,"column":3}},"117":{"start":{"line":290,"column":4},"end":{"line":305,"column":5}},"118":{"start":{"line":291,"column":6},"end":{"line":295,"column":7}},"119":{"start":{"line":292,"column":8},"end":{"line":292,"column":43}},"120":{"start":{"line":294,"column":8},"end":{"line":294,"column":43}},"121":{"start":{"line":297,"column":6},"end":{"line":299,"column":7}},"122":{"start":{"line":298,"column":8},"end":{"line":298,"column":30}},"123":{"start":{"line":300,"column":6},"end":{"line":302,"column":7}},"124":{"start":{"line":301,"column":8},"end":{"line":301,"column":44}},"125":{"start":{"line":304,"column":6},"end":{"line":304,"column":28}},"126":{"start":{"line":307,"column":4},"end":{"line":307,"column":35}},"127":{"start":{"line":309,"column":4},"end":{"line":309,"column":106}},"128":{"start":{"line":312,"column":2},"end":{"line":312,"column":17}},"129":{"start":{"line":315,"column":0},"end":{"line":315,"column":39}},"130":{"start":{"line":317,"column":0},"end":{"line":417,"column":2}},"131":{"start":{"line":319,"column":2},"end":{"line":319,"column":24}},"132":{"start":{"line":320,"column":2},"end":{"line":320,"column":21}},"133":{"start":{"line":322,"column":2},"end":{"line":360,"column":3}},"134":{"start":{"line":323,"column":4},"end":{"line":325,"column":5}},"135":{"start":{"line":324,"column":6},"end":{"line":324,"column":18}},"136":{"start":{"line":327,"column":4},"end":{"line":334,"column":6}},"137":{"start":{"line":336,"column":4},"end":{"line":359,"column":5}},"138":{"start":{"line":337,"column":6},"end":{"line":337,"column":24}},"139":{"start":{"line":338,"column":6},"end":{"line":341,"column":7}},"140":{"start":{"line":339,"column":8},"end":{"line":339,"column":19}},"141":{"start":{"line":340,"column":8},"end":{"line":340,"column":14}},"142":{"start":{"line":343,"column":6},"end":{"line":343,"column":35}},"143":{"start":{"line":344,"column":6},"end":{"line":346,"column":7}},"144":{"start":{"line":345,"column":8},"end":{"line":345,"column":129}},"145":{"start":{"line":348,"column":6},"end":{"line":358,"column":7}},"146":{"start":{"line":350,"column":8},"end":{"line":350,"column":25}},"147":{"start":{"line":351,"column":8},"end":{"line":351,"column":12}},"148":{"start":{"line":352,"column":8},"end":{"line":357,"column":9}},"149":{"start":{"line":353,"column":10},"end":{"line":356,"column":11}},"150":{"start":{"line":354,"column":12},"end":{"line":354,"column":34}},"151":{"start":{"line":355,"column":12},"end":{"line":355,"column":16}},"152":{"start":{"line":363,"column":2},"end":{"line":363,"column":30}},"153":{"start":{"line":364,"column":2},"end":{"line":372,"column":3}},"154":{"start":{"line":365,"column":4},"end":{"line":365,"column":26}},"155":{"start":{"line":367,"column":4},"end":{"line":371,"column":5}},"156":{"start":{"line":368,"column":6},"end":{"line":368,"column":27}},"157":{"start":{"line":369,"column":11},"end":{"line":371,"column":5}},"158":{"start":{"line":370,"column":6},"end":{"line":370,"column":42}},"159":{"start":{"line":374,"column":2},"end":{"line":374,"column":16}},"160":{"start":{"line":375,"column":2},"end":{"line":416,"column":21}},"161":{"start":{"line":376,"column":4},"end":{"line":414,"column":7}},"162":{"start":{"line":377,"column":6},"end":{"line":379,"column":7}},"163":{"start":{"line":378,"column":8},"end":{"line":378,"column":15}},"164":{"start":{"line":382,"column":6},"end":{"line":382,"column":37}},"165":{"start":{"line":383,"column":6},"end":{"line":383,"column":38}},"166":{"start":{"line":385,"column":6},"end":{"line":385,"column":37}},"167":{"start":{"line":386,"column":6},"end":{"line":389,"column":7}},"168":{"start":{"line":388,"column":8},"end":{"line":388,"column":26}},"169":{"start":{"line":391,"column":6},"end":{"line":393,"column":7}},"170":{"start":{"line":392,"column":8},"end":{"line":392,"column":15}},"171":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"172":{"start":{"line":397,"column":8},"end":{"line":397,"column":15}},"173":{"start":{"line":399,"column":6},"end":{"line":399,"column":24}},"174":{"start":{"line":402,"column":6},"end":{"line":402,"column":49}},"175":{"start":{"line":403,"column":6},"end":{"line":403,"column":32}},"176":{"start":{"line":404,"column":6},"end":{"line":406,"column":7}},"177":{"start":{"line":405,"column":8},"end":{"line":405,"column":28}},"178":{"start":{"line":407,"column":6},"end":{"line":407,"column":33}},"179":{"start":{"line":410,"column":6},"end":{"line":413,"column":7}},"180":{"start":{"line":411,"column":8},"end":{"line":411,"column":51}},"181":{"start":{"line":412,"column":8},"end":{"line":412,"column":73}},"182":{"start":{"line":412,"column":46},"end":{"line":412,"column":73}},"183":{"start":{"line":415,"column":4},"end":{"line":415,"column":15}},"184":{"start":{"line":419,"column":0},"end":{"line":419,"column":28}},"185":{"start":{"line":420,"column":0},"end":{"line":509,"column":2}},"186":{"start":{"line":421,"column":2},"end":{"line":421,"column":43}},"187":{"start":{"line":421,"column":22},"end":{"line":421,"column":43}},"188":{"start":{"line":423,"column":2},"end":{"line":423,"column":32}},"189":{"start":{"line":424,"column":2},"end":{"line":424,"column":28}},"190":{"start":{"line":425,"column":2},"end":{"line":425,"column":26}},"191":{"start":{"line":428,"column":2},"end":{"line":428,"column":39}},"192":{"start":{"line":429,"column":2},"end":{"line":429,"column":38}},"193":{"start":{"line":431,"column":2},"end":{"line":434,"column":3}},"194":{"start":{"line":432,"column":4},"end":{"line":432,"column":37}},"195":{"start":{"line":433,"column":4},"end":{"line":433,"column":37}},"196":{"start":{"line":436,"column":2},"end":{"line":454,"column":5}},"197":{"start":{"line":437,"column":4},"end":{"line":437,"column":38}},"198":{"start":{"line":438,"column":4},"end":{"line":438,"column":29}},"199":{"start":{"line":440,"column":4},"end":{"line":440,"column":78}},"200":{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},"201":{"start":{"line":443,"column":6},"end":{"line":443,"column":67}},"202":{"start":{"line":446,"column":4},"end":{"line":446,"column":75}},"203":{"start":{"line":447,"column":4},"end":{"line":447,"column":66}},"204":{"start":{"line":449,"column":4},"end":{"line":449,"column":78}},"205":{"start":{"line":450,"column":4},"end":{"line":450,"column":66}},"206":{"start":{"line":452,"column":4},"end":{"line":452,"column":79}},"207":{"start":{"line":453,"column":4},"end":{"line":453,"column":19}},"208":{"start":{"line":456,"column":2},"end":{"line":503,"column":5}},"209":{"start":{"line":457,"column":4},"end":{"line":457,"column":71}},"210":{"start":{"line":458,"column":4},"end":{"line":458,"column":80}},"211":{"start":{"line":460,"column":4},"end":{"line":477,"column":5}},"212":{"start":{"line":461,"column":6},"end":{"line":467,"column":7}},"213":{"start":{"line":462,"column":8},"end":{"line":462,"column":33}},"214":{"start":{"line":463,"column":8},"end":{"line":463,"column":53}},"215":{"start":{"line":465,"column":8},"end":{"line":465,"column":47}},"216":{"start":{"line":466,"column":8},"end":{"line":466,"column":39}},"217":{"start":{"line":469,"column":6},"end":{"line":469,"column":51}},"218":{"start":{"line":470,"column":6},"end":{"line":476,"column":7}},"219":{"start":{"line":471,"column":8},"end":{"line":471,"column":50}},"220":{"start":{"line":472,"column":8},"end":{"line":472,"column":33}},"221":{"start":{"line":474,"column":8},"end":{"line":474,"column":39}},"222":{"start":{"line":475,"column":8},"end":{"line":475,"column":98}},"223":{"start":{"line":479,"column":4},"end":{"line":479,"column":45}},"224":{"start":{"line":480,"column":4},"end":{"line":480,"column":42}},"225":{"start":{"line":483,"column":4},"end":{"line":489,"column":5}},"226":{"start":{"line":484,"column":6},"end":{"line":488,"column":7}},"227":{"start":{"line":485,"column":8},"end":{"line":485,"column":44}},"228":{"start":{"line":486,"column":13},"end":{"line":488,"column":7}},"229":{"start":{"line":487,"column":8},"end":{"line":487,"column":32}},"230":{"start":{"line":492,"column":4},"end":{"line":492,"column":100}},"231":{"start":{"line":493,"column":4},"end":{"line":493,"column":112}},"232":{"start":{"line":495,"column":4},"end":{"line":497,"column":5}},"233":{"start":{"line":496,"column":6},"end":{"line":496,"column":41}},"234":{"start":{"line":498,"column":4},"end":{"line":500,"column":5}},"235":{"start":{"line":499,"column":6},"end":{"line":499,"column":42}},"236":{"start":{"line":502,"column":4},"end":{"line":502,"column":19}},"237":{"start":{"line":505,"column":2},"end":{"line":507,"column":3}},"238":{"start":{"line":506,"column":4},"end":{"line":506,"column":29}},"239":{"start":{"line":508,"column":2},"end":{"line":508,"column":17}},"240":{"start":{"line":510,"column":0},"end":{"line":510,"column":59}},"241":{"start":{"line":512,"column":0},"end":{"line":637,"column":2}},"242":{"start":{"line":513,"column":2},"end":{"line":513,"column":50}},"243":{"start":{"line":515,"column":2},"end":{"line":538,"column":3}},"244":{"start":{"line":516,"column":4},"end":{"line":516,"column":45}},"245":{"start":{"line":519,"column":4},"end":{"line":519,"column":61}},"246":{"start":{"line":521,"column":4},"end":{"line":521,"column":61}},"247":{"start":{"line":523,"column":4},"end":{"line":535,"column":5}},"248":{"start":{"line":524,"column":6},"end":{"line":534,"column":9}},"249":{"start":{"line":526,"column":8},"end":{"line":533,"column":9}},"250":{"start":{"line":527,"column":12},"end":{"line":529,"column":13}},"251":{"start":{"line":528,"column":14},"end":{"line":528,"column":107}},"252":{"start":{"line":530,"column":12},"end":{"line":530,"column":39}},"253":{"start":{"line":532,"column":10},"end":{"line":532,"column":42}},"254":{"start":{"line":537,"column":4},"end":{"line":537,"column":61}},"255":{"start":{"line":541,"column":2},"end":{"line":544,"column":3}},"256":{"start":{"line":542,"column":4},"end":{"line":542,"column":68}},"257":{"start":{"line":543,"column":4},"end":{"line":543,"column":58}},"258":{"start":{"line":547,"column":2},"end":{"line":547,"column":90}},"259":{"start":{"line":549,"column":2},"end":{"line":559,"column":3}},"260":{"start":{"line":550,"column":4},"end":{"line":550,"column":33}},"261":{"start":{"line":552,"column":4},"end":{"line":554,"column":5}},"262":{"start":{"line":553,"column":6},"end":{"line":553,"column":37}},"263":{"start":{"line":556,"column":4},"end":{"line":556,"column":54}},"264":{"start":{"line":558,"column":4},"end":{"line":558,"column":25}},"265":{"start":{"line":561,"column":2},"end":{"line":561,"column":36}},"266":{"start":{"line":562,"column":2},"end":{"line":562,"column":30}},"267":{"start":{"line":565,"column":2},"end":{"line":586,"column":3}},"268":{"start":{"line":566,"column":4},"end":{"line":566,"column":47}},"269":{"start":{"line":566,"column":26},"end":{"line":566,"column":47}},"270":{"start":{"line":567,"column":4},"end":{"line":567,"column":46}},"271":{"start":{"line":569,"column":4},"end":{"line":577,"column":7}},"272":{"start":{"line":580,"column":4},"end":{"line":582,"column":5}},"273":{"start":{"line":581,"column":6},"end":{"line":581,"column":119}},"274":{"start":{"line":584,"column":4},"end":{"line":584,"column":42}},"275":{"start":{"line":585,"column":4},"end":{"line":585,"column":41}},"276":{"start":{"line":589,"column":2},"end":{"line":589,"column":12}},"277":{"start":{"line":590,"column":2},"end":{"line":596,"column":3}},"278":{"start":{"line":592,"column":4},"end":{"line":592,"column":26}},"279":{"start":{"line":595,"column":4},"end":{"line":595,"column":125}},"280":{"start":{"line":598,"column":2},"end":{"line":598,"column":30}},"281":{"start":{"line":601,"column":2},"end":{"line":603,"column":3}},"282":{"start":{"line":602,"column":4},"end":{"line":602,"column":68}},"283":{"start":{"line":605,"column":2},"end":{"line":605,"column":59}},"284":{"start":{"line":607,"column":2},"end":{"line":609,"column":3}},"285":{"start":{"line":608,"column":4},"end":{"line":608,"column":39}},"286":{"start":{"line":611,"column":2},"end":{"line":613,"column":3}},"287":{"start":{"line":612,"column":4},"end":{"line":612,"column":117}},"288":{"start":{"line":615,"column":2},"end":{"line":617,"column":3}},"289":{"start":{"line":616,"column":4},"end":{"line":616,"column":28}},"290":{"start":{"line":619,"column":2},"end":{"line":621,"column":3}},"291":{"start":{"line":620,"column":4},"end":{"line":620,"column":74}},"292":{"start":{"line":623,"column":2},"end":{"line":625,"column":3}},"293":{"start":{"line":624,"column":4},"end":{"line":624,"column":32}},"294":{"start":{"line":627,"column":2},"end":{"line":629,"column":3}},"295":{"start":{"line":628,"column":4},"end":{"line":628,"column":68}},"296":{"start":{"line":632,"column":2},"end":{"line":634,"column":3}},"297":{"start":{"line":633,"column":4},"end":{"line":633,"column":79}},"298":{"start":{"line":636,"column":2},"end":{"line":636,"column":17}},"299":{"start":{"line":639,"column":0},"end":{"line":659,"column":2}},"300":{"start":{"line":640,"column":2},"end":{"line":640,"column":33}},"301":{"start":{"line":641,"column":2},"end":{"line":643,"column":3}},"302":{"start":{"line":642,"column":4},"end":{"line":642,"column":11}},"303":{"start":{"line":645,"column":1},"end":{"line":654,"column":3}},"304":{"start":{"line":646,"column":4},"end":{"line":646,"column":34}},"305":{"start":{"line":648,"column":4},"end":{"line":653,"column":5}},"306":{"start":{"line":649,"column":6},"end":{"line":649,"column":32}},"307":{"start":{"line":650,"column":6},"end":{"line":650,"column":14}},"308":{"start":{"line":652,"column":6},"end":{"line":652,"column":60}},"309":{"start":{"line":656,"column":2},"end":{"line":658,"column":5}},"310":{"start":{"line":657,"column":4},"end":{"line":657,"column":50}},"311":{"start":{"line":661,"column":0},"end":{"line":726,"column":2}},"312":{"start":{"line":662,"column":2},"end":{"line":662,"column":18}},"313":{"start":{"line":664,"column":2},"end":{"line":664,"column":35}},"314":{"start":{"line":665,"column":2},"end":{"line":665,"column":24}},"315":{"start":{"line":668,"column":2},"end":{"line":668,"column":33}},"316":{"start":{"line":669,"column":2},"end":{"line":679,"column":3}},"317":{"start":{"line":670,"column":4},"end":{"line":672,"column":5}},"318":{"start":{"line":671,"column":6},"end":{"line":671,"column":129}},"319":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"320":{"start":{"line":674,"column":6},"end":{"line":674,"column":129}},"321":{"start":{"line":676,"column":4},"end":{"line":678,"column":5}},"322":{"start":{"line":677,"column":6},"end":{"line":677,"column":129}},"323":{"start":{"line":682,"column":2},"end":{"line":682,"column":37}},"324":{"start":{"line":685,"column":2},"end":{"line":687,"column":4}},"325":{"start":{"line":686,"column":4},"end":{"line":686,"column":36}},"326":{"start":{"line":689,"column":2},"end":{"line":689,"column":41}},"327":{"start":{"line":691,"column":2},"end":{"line":691,"column":71}},"328":{"start":{"line":692,"column":2},"end":{"line":692,"column":92}},"329":{"start":{"line":693,"column":2},"end":{"line":695,"column":5}},"330":{"start":{"line":694,"column":4},"end":{"line":694,"column":87}},"331":{"start":{"line":697,"column":2},"end":{"line":701,"column":3}},"332":{"start":{"line":698,"column":4},"end":{"line":700,"column":7}},"333":{"start":{"line":699,"column":6},"end":{"line":699,"column":42}},"334":{"start":{"line":703,"column":2},"end":{"line":703,"column":34}},"335":{"start":{"line":704,"column":2},"end":{"line":704,"column":27}},"336":{"start":{"line":706,"column":2},"end":{"line":706,"column":36}},"337":{"start":{"line":708,"column":2},"end":{"line":708,"column":42}},"338":{"start":{"line":710,"column":2},"end":{"line":712,"column":3}},"339":{"start":{"line":711,"column":4},"end":{"line":711,"column":38}},"340":{"start":{"line":714,"column":2},"end":{"line":718,"column":16}},"341":{"start":{"line":715,"column":4},"end":{"line":717,"column":5}},"342":{"start":{"line":716,"column":6},"end":{"line":716,"column":34}},"343":{"start":{"line":720,"column":2},"end":{"line":720,"column":70}},"344":{"start":{"line":722,"column":2},"end":{"line":723,"column":39}},"345":{"start":{"line":725,"column":2},"end":{"line":725,"column":14}},"346":{"start":{"line":728,"column":0},"end":{"line":739,"column":2}},"347":{"start":{"line":729,"column":2},"end":{"line":732,"column":5}},"348":{"start":{"line":734,"column":2},"end":{"line":737,"column":3}},"349":{"start":{"line":735,"column":4},"end":{"line":735,"column":24}},"350":{"start":{"line":736,"column":4},"end":{"line":736,"column":22}},"351":{"start":{"line":738,"column":2},"end":{"line":738,"column":15}},"352":{"start":{"line":741,"column":0},"end":{"line":962,"column":2}},"353":{"start":{"line":742,"column":2},"end":{"line":743,"column":33}},"354":{"start":{"line":745,"column":2},"end":{"line":745,"column":46}},"355":{"start":{"line":746,"column":2},"end":{"line":746,"column":46}},"356":{"start":{"line":748,"column":2},"end":{"line":793,"column":5}},"357":{"start":{"line":749,"column":4},"end":{"line":751,"column":115}},"358":{"start":{"line":753,"column":4},"end":{"line":766,"column":7}},"359":{"start":{"line":754,"column":6},"end":{"line":754,"column":34}},"360":{"start":{"line":756,"column":6},"end":{"line":760,"column":7}},"361":{"start":{"line":757,"column":8},"end":{"line":759,"column":10}},"362":{"start":{"line":758,"column":10},"end":{"line":758,"column":37}},"363":{"start":{"line":761,"column":6},"end":{"line":765,"column":7}},"364":{"start":{"line":762,"column":8},"end":{"line":764,"column":10}},"365":{"start":{"line":763,"column":10},"end":{"line":763,"column":44}},"366":{"start":{"line":768,"column":4},"end":{"line":783,"column":7}},"367":{"start":{"line":769,"column":6},"end":{"line":771,"column":7}},"368":{"start":{"line":770,"column":8},"end":{"line":770,"column":43}},"369":{"start":{"line":773,"column":6},"end":{"line":777,"column":7}},"370":{"start":{"line":774,"column":8},"end":{"line":776,"column":10}},"371":{"start":{"line":775,"column":10},"end":{"line":775,"column":37}},"372":{"start":{"line":778,"column":6},"end":{"line":782,"column":7}},"373":{"start":{"line":779,"column":8},"end":{"line":781,"column":10}},"374":{"start":{"line":780,"column":10},"end":{"line":780,"column":44}},"375":{"start":{"line":785,"column":4},"end":{"line":792,"column":7}},"376":{"start":{"line":786,"column":6},"end":{"line":790,"column":7}},"377":{"start":{"line":787,"column":8},"end":{"line":789,"column":10}},"378":{"start":{"line":791,"column":6},"end":{"line":791,"column":46}},"379":{"start":{"line":795,"column":2},"end":{"line":795,"column":31}},"380":{"start":{"line":796,"column":2},"end":{"line":796,"column":28}},"381":{"start":{"line":797,"column":2},"end":{"line":797,"column":30}},"382":{"start":{"line":798,"column":2},"end":{"line":798,"column":29}},"383":{"start":{"line":799,"column":2},"end":{"line":799,"column":28}},"384":{"start":{"line":800,"column":2},"end":{"line":800,"column":32}},"385":{"start":{"line":801,"column":2},"end":{"line":801,"column":31}},"386":{"start":{"line":802,"column":2},"end":{"line":802,"column":27}},"387":{"start":{"line":803,"column":2},"end":{"line":803,"column":42}},"388":{"start":{"line":805,"column":2},"end":{"line":805,"column":34}},"389":{"start":{"line":807,"column":2},"end":{"line":807,"column":24}},"390":{"start":{"line":808,"column":2},"end":{"line":808,"column":31}},"391":{"start":{"line":810,"column":2},"end":{"line":879,"column":5}},"392":{"start":{"line":811,"column":4},"end":{"line":811,"column":72}},"393":{"start":{"line":813,"column":4},"end":{"line":813,"column":28}},"394":{"start":{"line":814,"column":4},"end":{"line":814,"column":32}},"395":{"start":{"line":815,"column":4},"end":{"line":815,"column":38}},"396":{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},"397":{"start":{"line":818,"column":6},"end":{"line":818,"column":30}},"398":{"start":{"line":821,"column":4},"end":{"line":823,"column":5}},"399":{"start":{"line":822,"column":6},"end":{"line":822,"column":42}},"400":{"start":{"line":825,"column":4},"end":{"line":825,"column":62}},"401":{"start":{"line":827,"column":4},"end":{"line":841,"column":5}},"402":{"start":{"line":828,"column":6},"end":{"line":828,"column":41}},"403":{"start":{"line":829,"column":11},"end":{"line":841,"column":5}},"404":{"start":{"line":830,"column":6},"end":{"line":830,"column":38}},"405":{"start":{"line":831,"column":11},"end":{"line":841,"column":5}},"406":{"start":{"line":832,"column":6},"end":{"line":832,"column":40}},"407":{"start":{"line":833,"column":11},"end":{"line":841,"column":5}},"408":{"start":{"line":834,"column":6},"end":{"line":834,"column":39}},"409":{"start":{"line":835,"column":11},"end":{"line":841,"column":5}},"410":{"start":{"line":836,"column":6},"end":{"line":836,"column":38}},"411":{"start":{"line":837,"column":11},"end":{"line":841,"column":5}},"412":{"start":{"line":838,"column":6},"end":{"line":838,"column":41}},"413":{"start":{"line":839,"column":11},"end":{"line":841,"column":5}},"414":{"start":{"line":840,"column":6},"end":{"line":840,"column":42}},"415":{"start":{"line":843,"column":4},"end":{"line":845,"column":5}},"416":{"start":{"line":844,"column":6},"end":{"line":844,"column":97}},"417":{"start":{"line":847,"column":4},"end":{"line":865,"column":5}},"418":{"start":{"line":848,"column":6},"end":{"line":848,"column":18}},"419":{"start":{"line":849,"column":6},"end":{"line":855,"column":7}},"420":{"start":{"line":850,"column":8},"end":{"line":850,"column":41}},"421":{"start":{"line":851,"column":13},"end":{"line":855,"column":7}},"422":{"start":{"line":852,"column":8},"end":{"line":852,"column":36}},"423":{"start":{"line":854,"column":8},"end":{"line":854,"column":58}},"424":{"start":{"line":857,"column":6},"end":{"line":857,"column":67}},"425":{"start":{"line":858,"column":6},"end":{"line":858,"column":43}},"426":{"start":{"line":859,"column":6},"end":{"line":859,"column":40}},"427":{"start":{"line":860,"column":6},"end":{"line":860,"column":57}},"428":{"start":{"line":861,"column":6},"end":{"line":861,"column":34}},"429":{"start":{"line":862,"column":6},"end":{"line":862,"column":24}},"430":{"start":{"line":864,"column":6},"end":{"line":864,"column":45}},"431":{"start":{"line":867,"column":4},"end":{"line":869,"column":5}},"432":{"start":{"line":868,"column":6},"end":{"line":868,"column":69}},"433":{"start":{"line":871,"column":4},"end":{"line":878,"column":5}},"434":{"start":{"line":872,"column":6},"end":{"line":875,"column":9}},"435":{"start":{"line":877,"column":6},"end":{"line":877,"column":30}},"436":{"start":{"line":881,"column":2},"end":{"line":886,"column":9}},"437":{"start":{"line":882,"column":4},"end":{"line":884,"column":5}},"438":{"start":{"line":883,"column":6},"end":{"line":883,"column":33}},"439":{"start":{"line":885,"column":4},"end":{"line":885,"column":15}},"440":{"start":{"line":888,"column":2},"end":{"line":888,"column":44}},"441":{"start":{"line":890,"column":2},"end":{"line":890,"column":64}},"442":{"start":{"line":891,"column":2},"end":{"line":893,"column":5}},"443":{"start":{"line":892,"column":4},"end":{"line":892,"column":55}},"444":{"start":{"line":895,"column":2},"end":{"line":895,"column":58}},"445":{"start":{"line":896,"column":2},"end":{"line":898,"column":5}},"446":{"start":{"line":897,"column":4},"end":{"line":897,"column":52}},"447":{"start":{"line":900,"column":2},"end":{"line":900,"column":62}},"448":{"start":{"line":901,"column":2},"end":{"line":903,"column":5}},"449":{"start":{"line":902,"column":4},"end":{"line":902,"column":54}},"450":{"start":{"line":905,"column":2},"end":{"line":905,"column":60}},"451":{"start":{"line":906,"column":2},"end":{"line":908,"column":5}},"452":{"start":{"line":907,"column":4},"end":{"line":907,"column":53}},"453":{"start":{"line":910,"column":2},"end":{"line":910,"column":58}},"454":{"start":{"line":911,"column":2},"end":{"line":913,"column":5}},"455":{"start":{"line":912,"column":4},"end":{"line":912,"column":52}},"456":{"start":{"line":915,"column":2},"end":{"line":915,"column":64}},"457":{"start":{"line":916,"column":2},"end":{"line":918,"column":5}},"458":{"start":{"line":917,"column":4},"end":{"line":917,"column":55}},"459":{"start":{"line":920,"column":2},"end":{"line":920,"column":66}},"460":{"start":{"line":921,"column":2},"end":{"line":923,"column":5}},"461":{"start":{"line":922,"column":4},"end":{"line":922,"column":56}},"462":{"start":{"line":925,"column":2},"end":{"line":925,"column":65}},"463":{"start":{"line":927,"column":2},"end":{"line":927,"column":39}},"464":{"start":{"line":928,"column":2},"end":{"line":928,"column":83}},"465":{"start":{"line":930,"column":2},"end":{"line":930,"column":105}},"466":{"start":{"line":931,"column":2},"end":{"line":931,"column":105}},"467":{"start":{"line":933,"column":2},"end":{"line":939,"column":17}},"468":{"start":{"line":934,"column":4},"end":{"line":937,"column":5}},"469":{"start":{"line":935,"column":6},"end":{"line":935,"column":88}},"470":{"start":{"line":936,"column":6},"end":{"line":936,"column":13}},"471":{"start":{"line":938,"column":4},"end":{"line":938,"column":84}},"472":{"start":{"line":942,"column":2},"end":{"line":942,"column":61}},"473":{"start":{"line":943,"column":2},"end":{"line":943,"column":90}},"474":{"start":{"line":944,"column":2},"end":{"line":946,"column":5}},"475":{"start":{"line":945,"column":4},"end":{"line":945,"column":66}},"476":{"start":{"line":949,"column":2},"end":{"line":949,"column":60}},"477":{"start":{"line":950,"column":2},"end":{"line":950,"column":58}},"478":{"start":{"line":951,"column":2},"end":{"line":953,"column":3}},"479":{"start":{"line":952,"column":4},"end":{"line":952,"column":106}},"480":{"start":{"line":955,"column":2},"end":{"line":955,"column":58}},"481":{"start":{"line":956,"column":2},"end":{"line":956,"column":102}},"482":{"start":{"line":958,"column":2},"end":{"line":960,"column":5}},"483":{"start":{"line":959,"column":4},"end":{"line":959,"column":57}},"484":{"start":{"line":968,"column":0},"end":{"line":971,"column":2}},"485":{"start":{"line":969,"column":2},"end":{"line":969,"column":39}},"486":{"start":{"line":970,"column":2},"end":{"line":970,"column":27}},"487":{"start":{"line":978,"column":0},"end":{"line":1020,"column":2}},"488":{"start":{"line":979,"column":2},"end":{"line":979,"column":48}},"489":{"start":{"line":980,"column":2},"end":{"line":980,"column":71}},"490":{"start":{"line":982,"column":2},"end":{"line":983,"column":40}},"491":{"start":{"line":985,"column":2},"end":{"line":1019,"column":18}},"492":{"start":{"line":986,"column":4},"end":{"line":988,"column":5}},"493":{"start":{"line":987,"column":6},"end":{"line":987,"column":50}},"494":{"start":{"line":990,"column":4},"end":{"line":992,"column":5}},"495":{"start":{"line":991,"column":6},"end":{"line":991,"column":32}},"496":{"start":{"line":994,"column":4},"end":{"line":994,"column":98}},"497":{"start":{"line":996,"column":4},"end":{"line":996,"column":78}},"498":{"start":{"line":999,"column":4},"end":{"line":999,"column":97}},"499":{"start":{"line":1001,"column":4},"end":{"line":1005,"column":7}},"500":{"start":{"line":1002,"column":6},"end":{"line":1004,"column":9}},"501":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":41}},"502":{"start":{"line":1007,"column":4},"end":{"line":1014,"column":7}},"503":{"start":{"line":1008,"column":6},"end":{"line":1013,"column":32}},"504":{"start":{"line":1016,"column":4},"end":{"line":1018,"column":5}},"505":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":49}},"506":{"start":{"line":1030,"column":0},"end":{"line":1032,"column":2}},"507":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":76}},"508":{"start":{"line":1034,"column":0},"end":{"line":1036,"column":2}},"509":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":48}},"510":{"start":{"line":1049,"column":0},"end":{"line":1072,"column":2}},"511":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":18}},"512":{"start":{"line":1051,"column":2},"end":{"line":1051,"column":34}},"513":{"start":{"line":1053,"column":2},"end":{"line":1053,"column":25}},"514":{"start":{"line":1055,"column":2},"end":{"line":1063,"column":3}},"515":{"start":{"line":1056,"column":4},"end":{"line":1062,"column":5}},"516":{"start":{"line":1057,"column":6},"end":{"line":1057,"column":39}},"517":{"start":{"line":1059,"column":6},"end":{"line":1061,"column":7}},"518":{"start":{"line":1060,"column":8},"end":{"line":1060,"column":57}},"519":{"start":{"line":1065,"column":2},"end":{"line":1067,"column":4}},"520":{"start":{"line":1066,"column":4},"end":{"line":1066,"column":41}},"521":{"start":{"line":1068,"column":2},"end":{"line":1068,"column":68}},"522":{"start":{"line":1069,"column":2},"end":{"line":1069,"column":42}},"523":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":15}},"524":{"start":{"line":1083,"column":0},"end":{"line":1085,"column":2}},"525":{"start":{"line":1084,"column":2},"end":{"line":1084,"column":45}},"526":{"start":{"line":1090,"column":0},"end":{"line":1092,"column":2}},"527":{"start":{"line":1091,"column":2},"end":{"line":1091,"column":22}},"528":{"start":{"line":1104,"column":0},"end":{"line":1120,"column":2}},"529":{"start":{"line":1105,"column":2},"end":{"line":1107,"column":14}},"530":{"start":{"line":1109,"column":2},"end":{"line":1111,"column":3}},"531":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":119}},"532":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":30}},"533":{"start":{"line":1115,"column":2},"end":{"line":1119,"column":3}},"534":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":52}},"535":{"start":{"line":1118,"column":4},"end":{"line":1118,"column":38}},"536":{"start":{"line":1168,"column":0},"end":{"line":1229,"column":2}},"537":{"start":{"line":1169,"column":2},"end":{"line":1172,"column":16}},"538":{"start":{"line":1174,"column":2},"end":{"line":1174,"column":19}},"539":{"start":{"line":1175,"column":2},"end":{"line":1175,"column":21}},"540":{"start":{"line":1177,"column":2},"end":{"line":1179,"column":3}},"541":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":16}},"542":{"start":{"line":1181,"column":2},"end":{"line":1181,"column":33}},"543":{"start":{"line":1182,"column":2},"end":{"line":1226,"column":5}},"544":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":17}},"545":{"start":{"line":1184,"column":4},"end":{"line":1184,"column":21}},"546":{"start":{"line":1186,"column":4},"end":{"line":1211,"column":5}},"547":{"start":{"line":1187,"column":6},"end":{"line":1198,"column":7}},"548":{"start":{"line":1188,"column":8},"end":{"line":1195,"column":9}},"549":{"start":{"line":1189,"column":10},"end":{"line":1189,"column":39}},"550":{"start":{"line":1190,"column":10},"end":{"line":1190,"column":86}},"551":{"start":{"line":1192,"column":13},"end":{"line":1195,"column":9}},"552":{"start":{"line":1193,"column":10},"end":{"line":1193,"column":36}},"553":{"start":{"line":1194,"column":10},"end":{"line":1194,"column":61}},"554":{"start":{"line":1197,"column":8},"end":{"line":1197,"column":23}},"555":{"start":{"line":1200,"column":6},"end":{"line":1210,"column":7}},"556":{"start":{"line":1201,"column":8},"end":{"line":1201,"column":42}},"557":{"start":{"line":1203,"column":8},"end":{"line":1203,"column":27}},"558":{"start":{"line":1204,"column":8},"end":{"line":1204,"column":47}},"559":{"start":{"line":1206,"column":8},"end":{"line":1209,"column":9}},"560":{"start":{"line":1207,"column":10},"end":{"line":1207,"column":26}},"561":{"start":{"line":1208,"column":10},"end":{"line":1208,"column":38}},"562":{"start":{"line":1213,"column":4},"end":{"line":1225,"column":5}},"563":{"start":{"line":1214,"column":6},"end":{"line":1222,"column":9}},"564":{"start":{"line":1215,"column":8},"end":{"line":1219,"column":9}},"565":{"start":{"line":1216,"column":10},"end":{"line":1216,"column":101}},"566":{"start":{"line":1217,"column":15},"end":{"line":1219,"column":9}},"567":{"start":{"line":1218,"column":10},"end":{"line":1218,"column":49}},"568":{"start":{"line":1221,"column":8},"end":{"line":1221,"column":55}},"569":{"start":{"line":1224,"column":6},"end":{"line":1224,"column":65}},"570":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":14}},"571":{"start":{"line":1231,"column":0},"end":{"line":1233,"column":2}},"572":{"start":{"line":1232,"column":2},"end":{"line":1232,"column":31}},"573":{"start":{"line":1336,"column":0},"end":{"line":1418,"column":2}},"574":{"start":{"line":1337,"column":2},"end":{"line":1339,"column":3}},"575":{"start":{"line":1338,"column":4},"end":{"line":1338,"column":141}},"576":{"start":{"line":1341,"column":2},"end":{"line":1343,"column":3}},"577":{"start":{"line":1342,"column":4},"end":{"line":1342,"column":107}},"578":{"start":{"line":1344,"column":2},"end":{"line":1345,"column":22}},"579":{"start":{"line":1347,"column":2},"end":{"line":1347,"column":48}},"580":{"start":{"line":1348,"column":2},"end":{"line":1348,"column":37}},"581":{"start":{"line":1350,"column":2},"end":{"line":1350,"column":82}},"582":{"start":{"line":1353,"column":4},"end":{"line":1353,"column":80}},"583":{"start":{"line":1355,"column":2},"end":{"line":1417,"column":5}},"584":{"start":{"line":1356,"column":4},"end":{"line":1356,"column":34}},"585":{"start":{"line":1357,"column":4},"end":{"line":1357,"column":31}},"586":{"start":{"line":1359,"column":4},"end":{"line":1361,"column":5}},"587":{"start":{"line":1360,"column":6},"end":{"line":1360,"column":50}},"588":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":41}},"589":{"start":{"line":1365,"column":4},"end":{"line":1367,"column":5}},"590":{"start":{"line":1366,"column":6},"end":{"line":1366,"column":71}},"591":{"start":{"line":1369,"column":4},"end":{"line":1379,"column":5}},"592":{"start":{"line":1370,"column":6},"end":{"line":1370,"column":29}},"593":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":63}},"594":{"start":{"line":1375,"column":6},"end":{"line":1378,"column":7}},"595":{"start":{"line":1376,"column":8},"end":{"line":1376,"column":56}},"596":{"start":{"line":1377,"column":8},"end":{"line":1377,"column":83}},"597":{"start":{"line":1381,"column":4},"end":{"line":1383,"column":5}},"598":{"start":{"line":1382,"column":6},"end":{"line":1382,"column":61}},"599":{"start":{"line":1386,"column":4},"end":{"line":1386,"column":57}},"600":{"start":{"line":1388,"column":4},"end":{"line":1388,"column":42}},"601":{"start":{"line":1390,"column":4},"end":{"line":1390,"column":44}},"602":{"start":{"line":1392,"column":4},"end":{"line":1394,"column":5}},"603":{"start":{"line":1393,"column":6},"end":{"line":1393,"column":62}},"604":{"start":{"line":1396,"column":4},"end":{"line":1396,"column":47}},"605":{"start":{"line":1397,"column":4},"end":{"line":1397,"column":49}},"606":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":81}},"607":{"start":{"line":1400,"column":4},"end":{"line":1402,"column":5}},"608":{"start":{"line":1401,"column":6},"end":{"line":1401,"column":58}},"609":{"start":{"line":1406,"column":4},"end":{"line":1414,"column":5}},"610":{"start":{"line":1407,"column":6},"end":{"line":1413,"column":7}},"611":{"start":{"line":1408,"column":8},"end":{"line":1408,"column":42}},"612":{"start":{"line":1409,"column":13},"end":{"line":1413,"column":7}},"613":{"start":{"line":1410,"column":8},"end":{"line":1410,"column":36}},"614":{"start":{"line":1412,"column":8},"end":{"line":1412,"column":53}},"615":{"start":{"line":1416,"column":4},"end":{"line":1416,"column":57}},"616":{"start":{"line":1420,"column":0},"end":{"line":1466,"column":2}},"617":{"start":{"line":1421,"column":2},"end":{"line":1421,"column":83}},"618":{"start":{"line":1421,"column":51},"end":{"line":1421,"column":83}},"619":{"start":{"line":1423,"column":2},"end":{"line":1423,"column":25}},"620":{"start":{"line":1424,"column":2},"end":{"line":1424,"column":41}},"621":{"start":{"line":1424,"column":21},"end":{"line":1424,"column":41}},"622":{"start":{"line":1426,"column":2},"end":{"line":1426,"column":39}},"623":{"start":{"line":1426,"column":23},"end":{"line":1426,"column":39}},"624":{"start":{"line":1428,"column":2},"end":{"line":1465,"column":22}},"625":{"start":{"line":1429,"column":4},"end":{"line":1448,"column":5}},"626":{"start":{"line":1430,"column":6},"end":{"line":1447,"column":8}},"627":{"start":{"line":1432,"column":10},"end":{"line":1432,"column":64}},"628":{"start":{"line":1435,"column":10},"end":{"line":1435,"column":41}},"629":{"start":{"line":1435,"column":29},"end":{"line":1435,"column":41}},"630":{"start":{"line":1438,"column":10},"end":{"line":1438,"column":74}},"631":{"start":{"line":1438,"column":44},"end":{"line":1438,"column":74}},"632":{"start":{"line":1440,"column":10},"end":{"line":1440,"column":43}},"633":{"start":{"line":1450,"column":4},"end":{"line":1464,"column":7}},"634":{"start":{"line":1455,"column":6},"end":{"line":1463,"column":9}},"635":{"start":{"line":1456,"column":8},"end":{"line":1462,"column":10}},"636":{"start":{"line":1480,"column":0},"end":{"line":1497,"column":2}},"637":{"start":{"line":1482,"column":2},"end":{"line":1484,"column":3}},"638":{"start":{"line":1483,"column":4},"end":{"line":1483,"column":33}},"639":{"start":{"line":1486,"column":2},"end":{"line":1486,"column":43}},"640":{"start":{"line":1488,"column":2},"end":{"line":1493,"column":3}},"641":{"start":{"line":1489,"column":4},"end":{"line":1489,"column":23}},"642":{"start":{"line":1490,"column":4},"end":{"line":1490,"column":52}},"643":{"start":{"line":1492,"column":4},"end":{"line":1492,"column":70}},"644":{"start":{"line":1496,"column":2},"end":{"line":1496,"column":53}},"645":{"start":{"line":1498,"column":0},"end":{"line":1498,"column":57}},"646":{"start":{"line":1511,"column":0},"end":{"line":1531,"column":2}},"647":{"start":{"line":1512,"column":2},"end":{"line":1514,"column":3}},"648":{"start":{"line":1513,"column":4},"end":{"line":1513,"column":141}},"649":{"start":{"line":1515,"column":2},"end":{"line":1515,"column":37}},"650":{"start":{"line":1517,"column":2},"end":{"line":1524,"column":3}},"651":{"start":{"line":1518,"column":4},"end":{"line":1518,"column":73}},"652":{"start":{"line":1521,"column":4},"end":{"line":1523,"column":5}},"653":{"start":{"line":1522,"column":6},"end":{"line":1522,"column":24}},"654":{"start":{"line":1527,"column":2},"end":{"line":1530,"column":6}},"655":{"start":{"line":1532,"column":0},"end":{"line":1532,"column":47}},"656":{"start":{"line":1550,"column":0},"end":{"line":1585,"column":2}},"657":{"start":{"line":1551,"column":2},"end":{"line":1551,"column":37}},"658":{"start":{"line":1552,"column":2},"end":{"line":1552,"column":52}},"659":{"start":{"line":1553,"column":2},"end":{"line":1553,"column":32}},"660":{"start":{"line":1554,"column":2},"end":{"line":1554,"column":29}},"661":{"start":{"line":1556,"column":2},"end":{"line":1559,"column":3}},"662":{"start":{"line":1557,"column":4},"end":{"line":1557,"column":41}},"663":{"start":{"line":1558,"column":4},"end":{"line":1558,"column":49}},"664":{"start":{"line":1561,"column":2},"end":{"line":1563,"column":50}},"665":{"start":{"line":1565,"column":2},"end":{"line":1567,"column":3}},"666":{"start":{"line":1566,"column":4},"end":{"line":1566,"column":69}},"667":{"start":{"line":1568,"column":2},"end":{"line":1568,"column":102}},"668":{"start":{"line":1570,"column":2},"end":{"line":1579,"column":3}},"669":{"start":{"line":1571,"column":4},"end":{"line":1576,"column":5}},"670":{"start":{"line":1572,"column":6},"end":{"line":1572,"column":42}},"671":{"start":{"line":1575,"column":6},"end":{"line":1575,"column":47}},"672":{"start":{"line":1578,"column":4},"end":{"line":1578,"column":74}},"673":{"start":{"line":1581,"column":2},"end":{"line":1581,"column":43}},"674":{"start":{"line":1582,"column":2},"end":{"line":1582,"column":42}},"675":{"start":{"line":1584,"column":2},"end":{"line":1584,"column":101}},"676":{"start":{"line":1605,"column":0},"end":{"line":1626,"column":2}},"677":{"start":{"line":1606,"column":2},"end":{"line":1625,"column":5}},"678":{"start":{"line":1607,"column":4},"end":{"line":1607,"column":68}},"679":{"start":{"line":1608,"column":4},"end":{"line":1610,"column":5}},"680":{"start":{"line":1609,"column":6},"end":{"line":1609,"column":51}},"681":{"start":{"line":1612,"column":4},"end":{"line":1612,"column":77}},"682":{"start":{"line":1614,"column":4},"end":{"line":1614,"column":35}},"683":{"start":{"line":1615,"column":4},"end":{"line":1615,"column":47}},"684":{"start":{"line":1616,"column":4},"end":{"line":1616,"column":44}},"685":{"start":{"line":1620,"column":4},"end":{"line":1620,"column":25}},"686":{"start":{"line":1621,"column":4},"end":{"line":1621,"column":26}},"687":{"start":{"line":1622,"column":4},"end":{"line":1622,"column":25}},"688":{"start":{"line":1624,"column":4},"end":{"line":1624,"column":49}},"689":{"start":{"line":1662,"column":0},"end":{"line":1686,"column":2}},"690":{"start":{"line":1663,"column":2},"end":{"line":1665,"column":3}},"691":{"start":{"line":1664,"column":4},"end":{"line":1664,"column":146}},"692":{"start":{"line":1667,"column":2},"end":{"line":1667,"column":18}},"693":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":46}},"694":{"start":{"line":1669,"column":2},"end":{"line":1671,"column":3}},"695":{"start":{"line":1670,"column":4},"end":{"line":1670,"column":40}},"696":{"start":{"line":1672,"column":2},"end":{"line":1685,"column":5}},"697":{"start":{"line":1673,"column":4},"end":{"line":1678,"column":5}},"698":{"start":{"line":1674,"column":6},"end":{"line":1677,"column":8}},"699":{"start":{"line":1679,"column":4},"end":{"line":1684,"column":7}},"700":{"start":{"line":1680,"column":6},"end":{"line":1683,"column":8}},"701":{"start":{"line":1687,"column":0},"end":{"line":1687,"column":63}},"702":{"start":{"line":1699,"column":0},"end":{"line":1701,"column":2}},"703":{"start":{"line":1700,"column":2},"end":{"line":1700,"column":47}},"704":{"start":{"line":1712,"column":0},"end":{"line":1714,"column":2}},"705":{"start":{"line":1713,"column":2},"end":{"line":1713,"column":47}},"706":{"start":{"line":1725,"column":0},"end":{"line":1727,"column":2}},"707":{"start":{"line":1726,"column":2},"end":{"line":1726,"column":47}},"708":{"start":{"line":1740,"column":0},"end":{"line":1765,"column":2}},"709":{"start":{"line":1741,"column":2},"end":{"line":1743,"column":3}},"710":{"start":{"line":1742,"column":4},"end":{"line":1742,"column":43}},"711":{"start":{"line":1744,"column":2},"end":{"line":1748,"column":20}},"712":{"start":{"line":1750,"column":2},"end":{"line":1754,"column":3}},"713":{"start":{"line":1751,"column":4},"end":{"line":1753,"column":7}},"714":{"start":{"line":1752,"column":6},"end":{"line":1752,"column":65}},"715":{"start":{"line":1756,"column":2},"end":{"line":1762,"column":3}},"716":{"start":{"line":1757,"column":4},"end":{"line":1757,"column":34}},"717":{"start":{"line":1758,"column":4},"end":{"line":1761,"column":5}},"718":{"start":{"line":1759,"column":6},"end":{"line":1759,"column":43}},"719":{"start":{"line":1760,"column":6},"end":{"line":1760,"column":51}},"720":{"start":{"line":1764,"column":2},"end":{"line":1764,"column":44}},"721":{"start":{"line":1768,"column":0},"end":{"line":1790,"column":2}},"722":{"start":{"line":1769,"column":2},"end":{"line":1771,"column":20}},"723":{"start":{"line":1773,"column":2},"end":{"line":1779,"column":3}},"724":{"start":{"line":1774,"column":4},"end":{"line":1774,"column":34}},"725":{"start":{"line":1775,"column":4},"end":{"line":1778,"column":5}},"726":{"start":{"line":1776,"column":6},"end":{"line":1776,"column":43}},"727":{"start":{"line":1777,"column":6},"end":{"line":1777,"column":51}},"728":{"start":{"line":1781,"column":2},"end":{"line":1785,"column":3}},"729":{"start":{"line":1782,"column":4},"end":{"line":1784,"column":7}},"730":{"start":{"line":1783,"column":6},"end":{"line":1783,"column":65}},"731":{"start":{"line":1787,"column":2},"end":{"line":1789,"column":16}},"732":{"start":{"line":1788,"column":4},"end":{"line":1788,"column":39}},"733":{"start":{"line":1812,"column":0},"end":{"line":1822,"column":2}},"734":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":43}},"735":{"start":{"line":1815,"column":2},"end":{"line":1821,"column":19}},"736":{"start":{"line":1838,"column":0},"end":{"line":1863,"column":2}},"737":{"start":{"line":1839,"column":2},"end":{"line":1844,"column":3}},"738":{"start":{"line":1840,"column":4},"end":{"line":1843,"column":6}},"739":{"start":{"line":1846,"column":2},"end":{"line":1847,"column":13}},"740":{"start":{"line":1849,"column":2},"end":{"line":1862,"column":5}},"741":{"start":{"line":1850,"column":4},"end":{"line":1859,"column":5}},"742":{"start":{"line":1851,"column":6},"end":{"line":1851,"column":53}},"743":{"start":{"line":1852,"column":6},"end":{"line":1854,"column":7}},"744":{"start":{"line":1853,"column":8},"end":{"line":1853,"column":57}},"745":{"start":{"line":1856,"column":6},"end":{"line":1856,"column":36}},"746":{"start":{"line":1858,"column":6},"end":{"line":1858,"column":47}},"747":{"start":{"line":1861,"column":4},"end":{"line":1861,"column":46}},"748":{"start":{"line":1880,"column":0},"end":{"line":1956,"column":2}},"749":{"start":{"line":1881,"column":2},"end":{"line":1886,"column":3}},"750":{"start":{"line":1882,"column":4},"end":{"line":1885,"column":6}},"751":{"start":{"line":1888,"column":2},"end":{"line":1888,"column":34}},"752":{"start":{"line":1890,"column":2},"end":{"line":1895,"column":3}},"753":{"start":{"line":1891,"column":4},"end":{"line":1891,"column":62}},"754":{"start":{"line":1892,"column":4},"end":{"line":1894,"column":5}},"755":{"start":{"line":1893,"column":6},"end":{"line":1893,"column":30}},"756":{"start":{"line":1897,"column":2},"end":{"line":1902,"column":18}},"757":{"start":{"line":1904,"column":2},"end":{"line":1904,"column":70}},"758":{"start":{"line":1904,"column":24},"end":{"line":1904,"column":70}},"759":{"start":{"line":1907,"column":2},"end":{"line":1955,"column":5}},"760":{"start":{"line":1908,"column":4},"end":{"line":1908,"column":20}},"761":{"start":{"line":1909,"column":4},"end":{"line":1909,"column":28}},"762":{"start":{"line":1911,"column":4},"end":{"line":1913,"column":17}},"763":{"start":{"line":1915,"column":4},"end":{"line":1917,"column":5}},"764":{"start":{"line":1916,"column":6},"end":{"line":1916,"column":31}},"765":{"start":{"line":1919,"column":4},"end":{"line":1919,"column":51}},"766":{"start":{"line":1920,"column":4},"end":{"line":1922,"column":5}},"767":{"start":{"line":1921,"column":6},"end":{"line":1921,"column":49}},"768":{"start":{"line":1924,"column":4},"end":{"line":1924,"column":29}},"769":{"start":{"line":1926,"column":4},"end":{"line":1949,"column":7}},"770":{"start":{"line":1927,"column":6},"end":{"line":1930,"column":7}},"771":{"start":{"line":1929,"column":8},"end":{"line":1929,"column":57}},"772":{"start":{"line":1932,"column":6},"end":{"line":1932,"column":30}},"773":{"start":{"line":1934,"column":6},"end":{"line":1938,"column":7}},"774":{"start":{"line":1935,"column":8},"end":{"line":1937,"column":9}},"775":{"start":{"line":1936,"column":10},"end":{"line":1936,"column":20}},"776":{"start":{"line":1941,"column":6},"end":{"line":1948,"column":9}},"777":{"start":{"line":1946,"column":8},"end":{"line":1946,"column":41}},"778":{"start":{"line":1946,"column":31},"end":{"line":1946,"column":41}},"779":{"start":{"line":1947,"column":8},"end":{"line":1947,"column":33}},"780":{"start":{"line":1951,"column":4},"end":{"line":1954,"column":5}},"781":{"start":{"line":1953,"column":6},"end":{"line":1953,"column":34}},"782":{"start":{"line":1968,"column":0},"end":{"line":1992,"column":2}},"783":{"start":{"line":1969,"column":2},"end":{"line":1973,"column":3}},"784":{"start":{"line":1970,"column":4},"end":{"line":1972,"column":6}},"785":{"start":{"line":1975,"column":2},"end":{"line":1975,"column":53}},"786":{"start":{"line":1976,"column":2},"end":{"line":1978,"column":3}},"787":{"start":{"line":1977,"column":4},"end":{"line":1977,"column":47}},"788":{"start":{"line":1981,"column":2},"end":{"line":1991,"column":5}},"789":{"start":{"line":1982,"column":4},"end":{"line":1982,"column":39}},"790":{"start":{"line":1982,"column":16},"end":{"line":1982,"column":39}},"791":{"start":{"line":1984,"column":4},"end":{"line":1990,"column":7}},"792":{"start":{"line":1985,"column":6},"end":{"line":1985,"column":28}},"793":{"start":{"line":1987,"column":6},"end":{"line":1989,"column":9}},"794":{"start":{"line":1988,"column":8},"end":{"line":1988,"column":31}},"795":{"start":{"line":2017,"column":0},"end":{"line":2053,"column":2}},"796":{"start":{"line":2018,"column":2},"end":{"line":2018,"column":43}},"797":{"start":{"line":2020,"column":2},"end":{"line":2022,"column":3}},"798":{"start":{"line":2021,"column":4},"end":{"line":2021,"column":50}},"799":{"start":{"line":2024,"column":2},"end":{"line":2027,"column":36}},"800":{"start":{"line":2029,"column":2},"end":{"line":2052,"column":5}},"801":{"start":{"line":2031,"column":4},"end":{"line":2034,"column":56}},"802":{"start":{"line":2037,"column":4},"end":{"line":2039,"column":5}},"803":{"start":{"line":2038,"column":6},"end":{"line":2038,"column":84}},"804":{"start":{"line":2040,"column":4},"end":{"line":2042,"column":5}},"805":{"start":{"line":2041,"column":6},"end":{"line":2041,"column":114}},"806":{"start":{"line":2046,"column":4},"end":{"line":2049,"column":5}},"807":{"start":{"line":2047,"column":6},"end":{"line":2047,"column":48}},"808":{"start":{"line":2048,"column":6},"end":{"line":2048,"column":48}},"809":{"start":{"line":2051,"column":4},"end":{"line":2051,"column":127}},"810":{"start":{"line":2055,"column":0},"end":{"line":2055,"column":56}},"811":{"start":{"line":2080,"column":0},"end":{"line":2217,"column":2}},"812":{"start":{"line":2081,"column":2},"end":{"line":2083,"column":3}},"813":{"start":{"line":2082,"column":4},"end":{"line":2082,"column":31}},"814":{"start":{"line":2085,"column":2},"end":{"line":2090,"column":20}},"815":{"start":{"line":2092,"column":2},"end":{"line":2092,"column":71}},"816":{"start":{"line":2095,"column":2},"end":{"line":2095,"column":23}},"817":{"start":{"line":2097,"column":2},"end":{"line":2097,"column":47}},"818":{"start":{"line":2098,"column":2},"end":{"line":2100,"column":3}},"819":{"start":{"line":2099,"column":4},"end":{"line":2099,"column":101}},"820":{"start":{"line":2101,"column":2},"end":{"line":2103,"column":3}},"821":{"start":{"line":2102,"column":4},"end":{"line":2102,"column":102}},"822":{"start":{"line":2105,"column":2},"end":{"line":2112,"column":3}},"823":{"start":{"line":2107,"column":4},"end":{"line":2107,"column":87}},"824":{"start":{"line":2108,"column":4},"end":{"line":2110,"column":5}},"825":{"start":{"line":2109,"column":6},"end":{"line":2109,"column":89}},"826":{"start":{"line":2111,"column":4},"end":{"line":2111,"column":48}},"827":{"start":{"line":2114,"column":2},"end":{"line":2117,"column":67}},"828":{"start":{"line":2119,"column":2},"end":{"line":2121,"column":5}},"829":{"start":{"line":2120,"column":4},"end":{"line":2120,"column":51}},"830":{"start":{"line":2123,"column":2},"end":{"line":2216,"column":5}},"831":{"start":{"line":2125,"column":4},"end":{"line":2127,"column":5}},"832":{"start":{"line":2126,"column":6},"end":{"line":2126,"column":67}},"833":{"start":{"line":2130,"column":4},"end":{"line":2153,"column":5}},"834":{"start":{"line":2131,"column":6},"end":{"line":2131,"column":22}},"835":{"start":{"line":2132,"column":6},"end":{"line":2152,"column":9}},"836":{"start":{"line":2134,"column":8},"end":{"line":2146,"column":9}},"837":{"start":{"line":2135,"column":10},"end":{"line":2139,"column":13}},"838":{"start":{"line":2136,"column":12},"end":{"line":2138,"column":13}},"839":{"start":{"line":2137,"column":14},"end":{"line":2137,"column":59}},"840":{"start":{"line":2141,"column":10},"end":{"line":2145,"column":13}},"841":{"start":{"line":2142,"column":12},"end":{"line":2144,"column":13}},"842":{"start":{"line":2143,"column":14},"end":{"line":2143,"column":59}},"843":{"start":{"line":2148,"column":8},"end":{"line":2148,"column":28}},"844":{"start":{"line":2149,"column":8},"end":{"line":2151,"column":9}},"845":{"start":{"line":2150,"column":10},"end":{"line":2150,"column":40}},"846":{"start":{"line":2155,"column":4},"end":{"line":2167,"column":7}},"847":{"start":{"line":2156,"column":6},"end":{"line":2156,"column":87}},"848":{"start":{"line":2159,"column":6},"end":{"line":2161,"column":7}},"849":{"start":{"line":2160,"column":8},"end":{"line":2160,"column":36}},"850":{"start":{"line":2162,"column":6},"end":{"line":2164,"column":7}},"851":{"start":{"line":2163,"column":8},"end":{"line":2163,"column":36}},"852":{"start":{"line":2166,"column":6},"end":{"line":2166,"column":35}},"853":{"start":{"line":2169,"column":4},"end":{"line":2208,"column":5}},"854":{"start":{"line":2171,"column":6},"end":{"line":2182,"column":9}},"855":{"start":{"line":2172,"column":8},"end":{"line":2172,"column":55}},"856":{"start":{"line":2173,"column":8},"end":{"line":2173,"column":40}},"857":{"start":{"line":2174,"column":8},"end":{"line":2174,"column":49}},"858":{"start":{"line":2175,"column":8},"end":{"line":2175,"column":50}},"859":{"start":{"line":2176,"column":8},"end":{"line":2176,"column":43}},"860":{"start":{"line":2177,"column":8},"end":{"line":2177,"column":39}},"861":{"start":{"line":2179,"column":8},"end":{"line":2179,"column":48}},"862":{"start":{"line":2181,"column":8},"end":{"line":2181,"column":31}},"863":{"start":{"line":2186,"column":6},"end":{"line":2188,"column":9}},"864":{"start":{"line":2187,"column":8},"end":{"line":2187,"column":74}},"865":{"start":{"line":2191,"column":6},"end":{"line":2191,"column":26}},"866":{"start":{"line":2192,"column":6},"end":{"line":2197,"column":7}},"867":{"start":{"line":2193,"column":8},"end":{"line":2193,"column":52}},"868":{"start":{"line":2194,"column":8},"end":{"line":2196,"column":9}},"869":{"start":{"line":2195,"column":10},"end":{"line":2195,"column":80}},"870":{"start":{"line":2199,"column":6},"end":{"line":2207,"column":9}},"871":{"start":{"line":2200,"column":8},"end":{"line":2205,"column":9}},"872":{"start":{"line":2201,"column":10},"end":{"line":2204,"column":13}},"873":{"start":{"line":2202,"column":12},"end":{"line":2202,"column":128}},"874":{"start":{"line":2203,"column":12},"end":{"line":2203,"column":45}},"875":{"start":{"line":2206,"column":8},"end":{"line":2206,"column":23}},"876":{"start":{"line":2211,"column":4},"end":{"line":2213,"column":5}},"877":{"start":{"line":2212,"column":6},"end":{"line":2212,"column":66}},"878":{"start":{"line":2215,"column":4},"end":{"line":2215,"column":21}},"879":{"start":{"line":2234,"column":0},"end":{"line":2238,"column":2}},"880":{"start":{"line":2235,"column":2},"end":{"line":2235,"column":43}},"881":{"start":{"line":2236,"column":2},"end":{"line":2236,"column":26}},"882":{"start":{"line":2237,"column":2},"end":{"line":2237,"column":31}},"883":{"start":{"line":2257,"column":0},"end":{"line":2334,"column":2}},"884":{"start":{"line":2258,"column":2},"end":{"line":2259,"column":16}},"885":{"start":{"line":2261,"column":2},"end":{"line":2263,"column":3}},"886":{"start":{"line":2262,"column":4},"end":{"line":2262,"column":102}},"887":{"start":{"line":2265,"column":2},"end":{"line":2267,"column":3}},"888":{"start":{"line":2266,"column":4},"end":{"line":2266,"column":121}},"889":{"start":{"line":2269,"column":2},"end":{"line":2269,"column":37}},"890":{"start":{"line":2270,"column":2},"end":{"line":2276,"column":5}},"891":{"start":{"line":2278,"column":2},"end":{"line":2278,"column":39}},"892":{"start":{"line":2279,"column":2},"end":{"line":2279,"column":29}},"893":{"start":{"line":2281,"column":2},"end":{"line":2281,"column":43}},"894":{"start":{"line":2282,"column":2},"end":{"line":2282,"column":23}},"895":{"start":{"line":2284,"column":2},"end":{"line":2333,"column":5}},"896":{"start":{"line":2286,"column":4},"end":{"line":2288,"column":5}},"897":{"start":{"line":2287,"column":6},"end":{"line":2287,"column":57}},"898":{"start":{"line":2291,"column":4},"end":{"line":2299,"column":5}},"899":{"start":{"line":2292,"column":6},"end":{"line":2298,"column":9}},"900":{"start":{"line":2293,"column":8},"end":{"line":2295,"column":11}},"901":{"start":{"line":2294,"column":10},"end":{"line":2294,"column":26}},"902":{"start":{"line":2297,"column":8},"end":{"line":2297,"column":31}},"903":{"start":{"line":2303,"column":4},"end":{"line":2318,"column":5}},"904":{"start":{"line":2305,"column":6},"end":{"line":2305,"column":43}},"905":{"start":{"line":2307,"column":6},"end":{"line":2310,"column":21}},"906":{"start":{"line":2312,"column":6},"end":{"line":2312,"column":112}},"907":{"start":{"line":2314,"column":6},"end":{"line":2314,"column":84}},"908":{"start":{"line":2315,"column":6},"end":{"line":2315,"column":150}},"909":{"start":{"line":2317,"column":6},"end":{"line":2317,"column":102}},"910":{"start":{"line":2321,"column":4},"end":{"line":2325,"column":5}},"911":{"start":{"line":2322,"column":6},"end":{"line":2324,"column":9}},"912":{"start":{"line":2323,"column":8},"end":{"line":2323,"column":64}},"913":{"start":{"line":2328,"column":4},"end":{"line":2330,"column":5}},"914":{"start":{"line":2329,"column":6},"end":{"line":2329,"column":56}},"915":{"start":{"line":2332,"column":4},"end":{"line":2332,"column":24}},"916":{"start":{"line":2350,"column":0},"end":{"line":2409,"column":2}},"917":{"start":{"line":2351,"column":2},"end":{"line":2351,"column":85}},"918":{"start":{"line":2351,"column":44},"end":{"line":2351,"column":85}},"919":{"start":{"line":2353,"column":2},"end":{"line":2356,"column":20}},"920":{"start":{"line":2358,"column":2},"end":{"line":2358,"column":32}},"921":{"start":{"line":2361,"column":2},"end":{"line":2361,"column":23}},"922":{"start":{"line":2363,"column":2},"end":{"line":2364,"column":16}},"923":{"start":{"line":2366,"column":2},"end":{"line":2366,"column":43}},"924":{"start":{"line":2368,"column":2},"end":{"line":2408,"column":5}},"925":{"start":{"line":2370,"column":4},"end":{"line":2372,"column":5}},"926":{"start":{"line":2371,"column":6},"end":{"line":2371,"column":57}},"927":{"start":{"line":2375,"column":4},"end":{"line":2383,"column":5}},"928":{"start":{"line":2376,"column":6},"end":{"line":2382,"column":9}},"929":{"start":{"line":2377,"column":8},"end":{"line":2379,"column":11}},"930":{"start":{"line":2378,"column":10},"end":{"line":2378,"column":26}},"931":{"start":{"line":2381,"column":8},"end":{"line":2381,"column":31}},"932":{"start":{"line":2386,"column":4},"end":{"line":2389,"column":123}},"933":{"start":{"line":2391,"column":4},"end":{"line":2391,"column":84}},"934":{"start":{"line":2392,"column":4},"end":{"line":2392,"column":29}},"935":{"start":{"line":2393,"column":4},"end":{"line":2393,"column":146}},"936":{"start":{"line":2396,"column":4},"end":{"line":2400,"column":5}},"937":{"start":{"line":2397,"column":6},"end":{"line":2399,"column":9}},"938":{"start":{"line":2398,"column":8},"end":{"line":2398,"column":64}},"939":{"start":{"line":2403,"column":4},"end":{"line":2405,"column":5}},"940":{"start":{"line":2404,"column":6},"end":{"line":2404,"column":56}},"941":{"start":{"line":2407,"column":4},"end":{"line":2407,"column":24}},"942":{"start":{"line":2432,"column":0},"end":{"line":2629,"column":2}},"943":{"start":{"line":2433,"column":2},"end":{"line":2433,"column":18}},"944":{"start":{"line":2435,"column":2},"end":{"line":2437,"column":3}},"945":{"start":{"line":2436,"column":4},"end":{"line":2436,"column":90}},"946":{"start":{"line":2439,"column":2},"end":{"line":2441,"column":3}},"947":{"start":{"line":2440,"column":4},"end":{"line":2440,"column":120}},"948":{"start":{"line":2443,"column":2},"end":{"line":2443,"column":37}},"949":{"start":{"line":2444,"column":2},"end":{"line":2451,"column":5}},"950":{"start":{"line":2453,"column":2},"end":{"line":2453,"column":39}},"951":{"start":{"line":2456,"column":2},"end":{"line":2456,"column":23}},"952":{"start":{"line":2458,"column":2},"end":{"line":2458,"column":29}},"953":{"start":{"line":2461,"column":2},"end":{"line":2461,"column":27}},"954":{"start":{"line":2464,"column":2},"end":{"line":2476,"column":3}},"955":{"start":{"line":2465,"column":4},"end":{"line":2469,"column":7}},"956":{"start":{"line":2466,"column":6},"end":{"line":2468,"column":7}},"957":{"start":{"line":2467,"column":8},"end":{"line":2467,"column":27}},"958":{"start":{"line":2471,"column":4},"end":{"line":2471,"column":60}},"959":{"start":{"line":2472,"column":4},"end":{"line":2472,"column":92}},"960":{"start":{"line":2473,"column":4},"end":{"line":2475,"column":5}},"961":{"start":{"line":2474,"column":6},"end":{"line":2474,"column":41}},"962":{"start":{"line":2478,"column":2},"end":{"line":2480,"column":3}},"963":{"start":{"line":2479,"column":4},"end":{"line":2479,"column":158}},"964":{"start":{"line":2482,"column":2},"end":{"line":2483,"column":16}},"965":{"start":{"line":2485,"column":2},"end":{"line":2628,"column":5}},"966":{"start":{"line":2487,"column":4},"end":{"line":2504,"column":5}},"967":{"start":{"line":2488,"column":6},"end":{"line":2488,"column":37}},"968":{"start":{"line":2489,"column":6},"end":{"line":2489,"column":113}},"969":{"start":{"line":2491,"column":6},"end":{"line":2494,"column":7}},"970":{"start":{"line":2492,"column":8},"end":{"line":2492,"column":84}},"971":{"start":{"line":2493,"column":8},"end":{"line":2493,"column":76}},"972":{"start":{"line":2497,"column":6},"end":{"line":2497,"column":91}},"973":{"start":{"line":2498,"column":6},"end":{"line":2503,"column":9}},"974":{"start":{"line":2499,"column":8},"end":{"line":2499,"column":33}},"975":{"start":{"line":2500,"column":8},"end":{"line":2502,"column":9}},"976":{"start":{"line":2501,"column":10},"end":{"line":2501,"column":76}},"977":{"start":{"line":2505,"column":4},"end":{"line":2505,"column":16}},"978":{"start":{"line":2508,"column":4},"end":{"line":2514,"column":5}},"979":{"start":{"line":2509,"column":6},"end":{"line":2509,"column":34}},"980":{"start":{"line":2510,"column":6},"end":{"line":2513,"column":9}},"981":{"start":{"line":2511,"column":8},"end":{"line":2511,"column":36}},"982":{"start":{"line":2512,"column":8},"end":{"line":2512,"column":34}},"983":{"start":{"line":2515,"column":4},"end":{"line":2515,"column":16}},"984":{"start":{"line":2517,"column":4},"end":{"line":2517,"column":23}},"985":{"start":{"line":2520,"column":4},"end":{"line":2589,"column":5}},"986":{"start":{"line":2521,"column":6},"end":{"line":2588,"column":9}},"987":{"start":{"line":2522,"column":8},"end":{"line":2522,"column":31}},"988":{"start":{"line":2523,"column":8},"end":{"line":2525,"column":9}},"989":{"start":{"line":2524,"column":10},"end":{"line":2524,"column":20}},"990":{"start":{"line":2529,"column":8},"end":{"line":2530,"column":30}},"991":{"start":{"line":2532,"column":8},"end":{"line":2587,"column":11}},"992":{"start":{"line":2534,"column":10},"end":{"line":2534,"column":54}},"993":{"start":{"line":2536,"column":10},"end":{"line":2540,"column":13}},"994":{"start":{"line":2537,"column":12},"end":{"line":2539,"column":13}},"995":{"start":{"line":2538,"column":14},"end":{"line":2538,"column":52}},"996":{"start":{"line":2543,"column":10},"end":{"line":2560,"column":13}},"997":{"start":{"line":2544,"column":12},"end":{"line":2557,"column":13}},"998":{"start":{"line":2545,"column":14},"end":{"line":2545,"column":41}},"999":{"start":{"line":2546,"column":14},"end":{"line":2550,"column":17}},"1000":{"start":{"line":2547,"column":16},"end":{"line":2549,"column":17}},"1001":{"start":{"line":2548,"column":18},"end":{"line":2548,"column":53}},"1002":{"start":{"line":2552,"column":14},"end":{"line":2556,"column":15}},"1003":{"start":{"line":2553,"column":16},"end":{"line":2553,"column":50}},"1004":{"start":{"line":2555,"column":16},"end":{"line":2555,"column":79}},"1005":{"start":{"line":2559,"column":12},"end":{"line":2559,"column":28}},"1006":{"start":{"line":2562,"column":10},"end":{"line":2562,"column":33}},"1007":{"start":{"line":2564,"column":10},"end":{"line":2586,"column":11}},"1008":{"start":{"line":2565,"column":12},"end":{"line":2565,"column":50}},"1009":{"start":{"line":2567,"column":12},"end":{"line":2571,"column":13}},"1010":{"start":{"line":2569,"column":14},"end":{"line":2569,"column":40}},"1011":{"start":{"line":2570,"column":14},"end":{"line":2570,"column":67}},"1012":{"start":{"line":2572,"column":12},"end":{"line":2572,"column":19}},"1013":{"start":{"line":2576,"column":12},"end":{"line":2585,"column":15}},"1014":{"start":{"line":2577,"column":14},"end":{"line":2577,"column":61}},"1015":{"start":{"line":2578,"column":14},"end":{"line":2578,"column":55}},"1016":{"start":{"line":2579,"column":14},"end":{"line":2579,"column":46}},"1017":{"start":{"line":2580,"column":14},"end":{"line":2580,"column":49}},"1018":{"start":{"line":2582,"column":14},"end":{"line":2582,"column":54}},"1019":{"start":{"line":2584,"column":14},"end":{"line":2584,"column":37}},"1020":{"start":{"line":2591,"column":4},"end":{"line":2594,"column":5}},"1021":{"start":{"line":2593,"column":6},"end":{"line":2593,"column":39}},"1022":{"start":{"line":2596,"column":4},"end":{"line":2596,"column":74}},"1023":{"start":{"line":2597,"column":4},"end":{"line":2597,"column":55}},"1024":{"start":{"line":2598,"column":4},"end":{"line":2598,"column":73}},"1025":{"start":{"line":2601,"column":4},"end":{"line":2608,"column":7}},"1026":{"start":{"line":2602,"column":6},"end":{"line":2605,"column":7}},"1027":{"start":{"line":2603,"column":8},"end":{"line":2603,"column":33}},"1028":{"start":{"line":2604,"column":8},"end":{"line":2604,"column":51}},"1029":{"start":{"line":2607,"column":6},"end":{"line":2607,"column":28}},"1030":{"start":{"line":2610,"column":4},"end":{"line":2616,"column":5}},"1031":{"start":{"line":2611,"column":6},"end":{"line":2615,"column":9}},"1032":{"start":{"line":2612,"column":8},"end":{"line":2612,"column":63}},"1033":{"start":{"line":2614,"column":8},"end":{"line":2614,"column":30}},"1034":{"start":{"line":2619,"column":4},"end":{"line":2624,"column":5}},"1035":{"start":{"line":2620,"column":6},"end":{"line":2620,"column":34}},"1036":{"start":{"line":2621,"column":6},"end":{"line":2623,"column":9}},"1037":{"start":{"line":2622,"column":8},"end":{"line":2622,"column":34}},"1038":{"start":{"line":2627,"column":4},"end":{"line":2627,"column":18}},"1039":{"start":{"line":2636,"column":0},"end":{"line":2638,"column":2}},"1040":{"start":{"line":2637,"column":2},"end":{"line":2637,"column":125}},"1041":{"start":{"line":2640,"column":0},"end":{"line":2645,"column":2}},"1042":{"start":{"line":2641,"column":2},"end":{"line":2643,"column":3}},"1043":{"start":{"line":2642,"column":4},"end":{"line":2642,"column":71}},"1044":{"start":{"line":2644,"column":2},"end":{"line":2644,"column":19}},"1045":{"start":{"line":2647,"column":0},"end":{"line":2662,"column":2}},"1046":{"start":{"line":2648,"column":2},"end":{"line":2661,"column":3}},"1047":{"start":{"line":2649,"column":4},"end":{"line":2649,"column":53}},"1048":{"start":{"line":2651,"column":4},"end":{"line":2655,"column":5}},"1049":{"start":{"line":2652,"column":6},"end":{"line":2654,"column":9}},"1050":{"start":{"line":2653,"column":8},"end":{"line":2653,"column":63}},"1051":{"start":{"line":2656,"column":4},"end":{"line":2658,"column":5}},"1052":{"start":{"line":2657,"column":6},"end":{"line":2657,"column":65}},"1053":{"start":{"line":2660,"column":4},"end":{"line":2660,"column":36}},"1054":{"start":{"line":2665,"column":0},"end":{"line":2695,"column":2}},"1055":{"start":{"line":2666,"column":2},"end":{"line":2666,"column":18}},"1056":{"start":{"line":2667,"column":2},"end":{"line":2667,"column":43}},"1057":{"start":{"line":2669,"column":2},"end":{"line":2669,"column":47}},"1058":{"start":{"line":2671,"column":2},"end":{"line":2671,"column":37}},"1059":{"start":{"line":2672,"column":2},"end":{"line":2672,"column":49}},"1060":{"start":{"line":2674,"column":2},"end":{"line":2694,"column":3}},"1061":{"start":{"line":2675,"column":4},"end":{"line":2675,"column":44}},"1062":{"start":{"line":2679,"column":4},"end":{"line":2693,"column":7}},"1063":{"start":{"line":2680,"column":6},"end":{"line":2692,"column":7}},"1064":{"start":{"line":2681,"column":8},"end":{"line":2681,"column":84}},"1065":{"start":{"line":2682,"column":8},"end":{"line":2682,"column":57}},"1066":{"start":{"line":2682,"column":38},"end":{"line":2682,"column":57}},"1067":{"start":{"line":2684,"column":8},"end":{"line":2689,"column":9}},"1068":{"start":{"line":2685,"column":10},"end":{"line":2685,"column":45}},"1069":{"start":{"line":2687,"column":10},"end":{"line":2687,"column":113}},"1070":{"start":{"line":2688,"column":10},"end":{"line":2688,"column":66}},"1071":{"start":{"line":2691,"column":8},"end":{"line":2691,"column":43}},"1072":{"start":{"line":2697,"column":0},"end":{"line":2699,"column":2}},"1073":{"start":{"line":2698,"column":2},"end":{"line":2698,"column":19}},"1074":{"start":{"line":2701,"column":0},"end":{"line":2701,"column":51}},"1075":{"start":{"line":2702,"column":0},"end":{"line":2702,"column":21}},"1076":{"start":{"line":2704,"column":0},"end":{"line":2704,"column":23}},"1077":{"start":{"line":2705,"column":0},"end":{"line":2705,"column":29}},"1078":{"start":{"line":2706,"column":0},"end":{"line":2706,"column":31}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":5},"end":{"line":45,"column":12}},{"start":{"line":45,"column":16},"end":{"line":45,"column":18}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":21},"end":{"line":56,"column":37}},{"start":{"line":56,"column":41},"end":{"line":56,"column":60}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"5":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":52},"end":{"line":59,"column":56}},{"start":{"line":59,"column":59},"end":{"line":59,"column":130}}]},"6":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":3},"end":{"line":79,"column":3}},{"start":{"line":79,"column":3},"end":{"line":79,"column":3}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"10":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"12":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":19}},{"start":{"line":122,"column":23},"end":{"line":122,"column":25}}]},"13":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"14":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"15":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"16":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"17":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":31}},{"start":{"line":141,"column":35},"end":{"line":141,"column":58}},{"start":{"line":141,"column":62},"end":{"line":141,"column":88}}]},"18":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":82},"end":{"line":149,"column":113}},{"start":{"line":149,"column":116},"end":{"line":149,"column":120}}]},"19":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":18},"end":{"line":151,"column":42}},{"start":{"line":151,"column":46},"end":{"line":151,"column":58}}]},"20":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"21":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":15},"end":{"line":164,"column":40}},{"start":{"line":164,"column":44},"end":{"line":164,"column":46}}]},"22":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"23":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"24":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"25":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"26":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"27":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"28":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"29":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]},"30":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"31":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"32":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"33":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":9},"end":{"line":259,"column":9}},{"start":{"line":259,"column":9},"end":{"line":259,"column":9}}]},"34":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"35":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"36":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"37":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":12}},{"start":{"line":280,"column":16},"end":{"line":280,"column":49}}]},"38":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":9},"end":{"line":287,"column":9}},{"start":{"line":287,"column":9},"end":{"line":287,"column":9}}]},"39":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":9},"end":{"line":289,"column":9}},{"start":{"line":289,"column":9},"end":{"line":289,"column":9}}]},"40":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"41":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":6},"end":{"line":291,"column":6}},{"start":{"line":291,"column":6},"end":{"line":291,"column":6}}]},"42":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":10},"end":{"line":291,"column":14}},{"start":{"line":291,"column":18},"end":{"line":291,"column":63}}]},"43":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"44":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"45":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"46":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"47":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":6},"end":{"line":338,"column":6}},{"start":{"line":338,"column":6},"end":{"line":338,"column":6}}]},"48":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":6}},{"start":{"line":344,"column":6},"end":{"line":344,"column":6}}]},"49":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":6}},{"start":{"line":348,"column":6},"end":{"line":348,"column":6}}]},"50":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":10},"end":{"line":353,"column":10}},{"start":{"line":353,"column":10},"end":{"line":353,"column":10}}]},"51":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"52":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"53":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":11},"end":{"line":369,"column":11}},{"start":{"line":369,"column":11},"end":{"line":369,"column":11}}]},"54":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":6},"end":{"line":377,"column":6}},{"start":{"line":377,"column":6},"end":{"line":377,"column":6}}]},"55":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":10},"end":{"line":377,"column":22}},{"start":{"line":377,"column":26},"end":{"line":377,"column":73}}]},"56":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"57":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":6},"end":{"line":391,"column":6}},{"start":{"line":391,"column":6},"end":{"line":391,"column":6}}]},"58":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":6},"end":{"line":396,"column":6}},{"start":{"line":396,"column":6},"end":{"line":396,"column":6}}]},"59":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":10},"end":{"line":396,"column":16}},{"start":{"line":396,"column":20},"end":{"line":396,"column":46}}]},"60":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":6},"end":{"line":404,"column":6}},{"start":{"line":404,"column":6},"end":{"line":404,"column":6}}]},"61":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":6},"end":{"line":410,"column":6}},{"start":{"line":410,"column":6},"end":{"line":410,"column":6}}]},"62":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":8},"end":{"line":412,"column":8}},{"start":{"line":412,"column":8},"end":{"line":412,"column":8}}]},"63":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":421,"column":2}},{"start":{"line":421,"column":2},"end":{"line":421,"column":2}}]},"64":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":15},"end":{"line":423,"column":25}},{"start":{"line":423,"column":29},"end":{"line":423,"column":31}}]},"65":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":2},"end":{"line":431,"column":2}},{"start":{"line":431,"column":2},"end":{"line":431,"column":2}}]},"66":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":4},"end":{"line":442,"column":4}},{"start":{"line":442,"column":4},"end":{"line":442,"column":4}}]},"67":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":29},"end":{"line":446,"column":51}},{"start":{"line":446,"column":55},"end":{"line":446,"column":74}}]},"68":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":26},"end":{"line":447,"column":45}},{"start":{"line":447,"column":49},"end":{"line":447,"column":65}}]},"69":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":29},"end":{"line":449,"column":51}},{"start":{"line":449,"column":55},"end":{"line":449,"column":77}}]},"70":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":26},"end":{"line":450,"column":45}},{"start":{"line":450,"column":49},"end":{"line":450,"column":65}}]},"71":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":23},"end":{"line":452,"column":39}},{"start":{"line":452,"column":43},"end":{"line":452,"column":59}},{"start":{"line":452,"column":63},"end":{"line":452,"column":78}}]},"72":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":29},"end":{"line":457,"column":51}},{"start":{"line":457,"column":55},"end":{"line":457,"column":70}}]},"73":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":32},"end":{"line":458,"column":57}},{"start":{"line":458,"column":61},"end":{"line":458,"column":79}}]},"74":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":460,"column":4}},{"start":{"line":460,"column":4},"end":{"line":460,"column":4}}]},"75":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":8},"end":{"line":460,"column":34}},{"start":{"line":460,"column":38},"end":{"line":460,"column":60}},{"start":{"line":460,"column":64},"end":{"line":460,"column":80}}]},"76":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"77":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":25},"end":{"line":469,"column":41}},{"start":{"line":469,"column":45},"end":{"line":469,"column":50}}]},"78":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":6},"end":{"line":470,"column":6}},{"start":{"line":470,"column":6},"end":{"line":470,"column":6}}]},"79":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":27},"end":{"line":475,"column":43}},{"start":{"line":475,"column":48},"end":{"line":475,"column":73}},{"start":{"line":475,"column":77},"end":{"line":475,"column":96}}]},"80":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":4},"end":{"line":483,"column":4}},{"start":{"line":483,"column":4},"end":{"line":483,"column":4}}]},"81":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":8},"end":{"line":483,"column":42}},{"start":{"line":483,"column":46},"end":{"line":483,"column":76}},{"start":{"line":483,"column":80},"end":{"line":483,"column":96}}]},"82":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":6},"end":{"line":484,"column":6}},{"start":{"line":484,"column":6},"end":{"line":484,"column":6}}]},"83":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":13},"end":{"line":486,"column":13}},{"start":{"line":486,"column":13},"end":{"line":486,"column":13}}]},"84":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":30},"end":{"line":492,"column":53}},{"start":{"line":492,"column":57},"end":{"line":492,"column":80}},{"start":{"line":492,"column":84},"end":{"line":492,"column":99}}]},"85":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":33},"end":{"line":493,"column":59}},{"start":{"line":493,"column":63},"end":{"line":493,"column":89}},{"start":{"line":493,"column":93},"end":{"line":493,"column":111}}]},"86":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":4},"end":{"line":495,"column":4}},{"start":{"line":495,"column":4},"end":{"line":495,"column":4}}]},"87":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":8},"end":{"line":495,"column":46}},{"start":{"line":495,"column":50},"end":{"line":495,"column":77}}]},"88":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":4},"end":{"line":498,"column":4}},{"start":{"line":498,"column":4},"end":{"line":498,"column":4}}]},"89":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":8},"end":{"line":498,"column":47}},{"start":{"line":498,"column":51},"end":{"line":498,"column":79}}]},"90":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":2},"end":{"line":505,"column":2}},{"start":{"line":505,"column":2},"end":{"line":505,"column":2}}]},"91":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":6},"end":{"line":505,"column":40}},{"start":{"line":505,"column":44},"end":{"line":505,"column":74}}]},"92":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]},"93":{"line":515,"type":"binary-expr","locations":[{"start":{"line":515,"column":6},"end":{"line":515,"column":24}},{"start":{"line":515,"column":28},"end":{"line":515,"column":40}}]},"94":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":4},"end":{"line":523,"column":4}},{"start":{"line":523,"column":4},"end":{"line":523,"column":4}}]},"95":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":526,"column":8}},{"start":{"line":526,"column":8},"end":{"line":526,"column":8}}]},"96":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":12},"end":{"line":527,"column":12}},{"start":{"line":527,"column":12},"end":{"line":527,"column":12}}]},"97":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":21},"end":{"line":528,"column":47}},{"start":{"line":528,"column":51},"end":{"line":528,"column":80}},{"start":{"line":528,"column":84},"end":{"line":528,"column":106}}]},"98":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":541,"column":2}},{"start":{"line":541,"column":2},"end":{"line":541,"column":2}}]},"99":{"line":547,"type":"binary-expr","locations":[{"start":{"line":547,"column":20},"end":{"line":547,"column":39}},{"start":{"line":547,"column":43},"end":{"line":547,"column":89}}]},"100":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":2},"end":{"line":549,"column":2}},{"start":{"line":549,"column":2},"end":{"line":549,"column":2}}]},"101":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":552,"column":4}},{"start":{"line":552,"column":4},"end":{"line":552,"column":4}}]},"102":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":2},"end":{"line":565,"column":2}},{"start":{"line":565,"column":2},"end":{"line":565,"column":2}}]},"103":{"line":565,"type":"binary-expr","locations":[{"start":{"line":565,"column":6},"end":{"line":565,"column":33}},{"start":{"line":565,"column":37},"end":{"line":565,"column":116}}]},"104":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":4},"end":{"line":566,"column":4}},{"start":{"line":566,"column":4},"end":{"line":566,"column":4}}]},"105":{"line":569,"type":"binary-expr","locations":[{"start":{"line":569,"column":39},"end":{"line":569,"column":54}},{"start":{"line":569,"column":58},"end":{"line":569,"column":60}}]},"106":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":4},"end":{"line":580,"column":4}},{"start":{"line":580,"column":4},"end":{"line":580,"column":4}}]},"107":{"line":581,"type":"cond-expr","locations":[{"start":{"line":581,"column":54},"end":{"line":581,"column":101}},{"start":{"line":581,"column":105},"end":{"line":581,"column":118}}]},"108":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":2},"end":{"line":590,"column":2}},{"start":{"line":590,"column":2},"end":{"line":590,"column":2}}]},"109":{"line":595,"type":"cond-expr","locations":[{"start":{"line":595,"column":69},"end":{"line":595,"column":95}},{"start":{"line":595,"column":98},"end":{"line":595,"column":124}}]},"110":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"111":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"112":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":2},"end":{"line":611,"column":2}},{"start":{"line":611,"column":2},"end":{"line":611,"column":2}}]},"113":{"line":612,"type":"cond-expr","locations":[{"start":{"line":612,"column":36},"end":{"line":612,"column":88}},{"start":{"line":612,"column":91},"end":{"line":612,"column":116}}]},"114":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"115":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":6},"end":{"line":615,"column":19}},{"start":{"line":615,"column":23},"end":{"line":615,"column":53}}]},"116":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":2},"end":{"line":619,"column":2}},{"start":{"line":619,"column":2},"end":{"line":619,"column":2}}]},"117":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":6},"end":{"line":619,"column":31}},{"start":{"line":619,"column":35},"end":{"line":619,"column":76}}]},"118":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":2},"end":{"line":623,"column":2}},{"start":{"line":623,"column":2},"end":{"line":623,"column":2}}]},"119":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":2},"end":{"line":627,"column":2}},{"start":{"line":627,"column":2},"end":{"line":627,"column":2}}]},"120":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":6},"end":{"line":627,"column":31}},{"start":{"line":627,"column":35},"end":{"line":627,"column":53}},{"start":{"line":627,"column":57},"end":{"line":627,"column":82}},{"start":{"line":627,"column":86},"end":{"line":627,"column":157}}]},"121":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":2},"end":{"line":632,"column":2}},{"start":{"line":632,"column":2},"end":{"line":632,"column":2}}]},"122":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":2},"end":{"line":641,"column":2}},{"start":{"line":641,"column":2},"end":{"line":641,"column":2}}]},"123":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":4},"end":{"line":648,"column":4}},{"start":{"line":648,"column":4},"end":{"line":648,"column":4}}]},"124":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":2},"end":{"line":669,"column":2}},{"start":{"line":669,"column":2},"end":{"line":669,"column":2}}]},"125":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":4},"end":{"line":670,"column":4}},{"start":{"line":670,"column":4},"end":{"line":670,"column":4}}]},"126":{"line":671,"type":"binary-expr","locations":[{"start":{"line":671,"column":44},"end":{"line":671,"column":66}},{"start":{"line":671,"column":70},"end":{"line":671,"column":128}}]},"127":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":673,"column":4}},{"start":{"line":673,"column":4},"end":{"line":673,"column":4}}]},"128":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":44},"end":{"line":674,"column":66}},{"start":{"line":674,"column":70},"end":{"line":674,"column":128}}]},"129":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":4},"end":{"line":676,"column":4}},{"start":{"line":676,"column":4},"end":{"line":676,"column":4}}]},"130":{"line":676,"type":"binary-expr","locations":[{"start":{"line":676,"column":8},"end":{"line":676,"column":29}},{"start":{"line":676,"column":33},"end":{"line":676,"column":65}}]},"131":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":44},"end":{"line":677,"column":66}},{"start":{"line":677,"column":70},"end":{"line":677,"column":128}}]},"132":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":32},"end":{"line":692,"column":56}},{"start":{"line":692,"column":60},"end":{"line":692,"column":91}}]},"133":{"line":694,"type":"binary-expr","locations":[{"start":{"line":694,"column":11},"end":{"line":694,"column":38}},{"start":{"line":694,"column":42},"end":{"line":694,"column":86}}]},"134":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":2},"end":{"line":697,"column":2}},{"start":{"line":697,"column":2},"end":{"line":697,"column":2}}]},"135":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":2},"end":{"line":710,"column":2}},{"start":{"line":710,"column":2},"end":{"line":710,"column":2}}]},"136":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":4},"end":{"line":715,"column":4}},{"start":{"line":715,"column":4},"end":{"line":715,"column":4}}]},"137":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":2},"end":{"line":734,"column":2}},{"start":{"line":734,"column":2},"end":{"line":734,"column":2}}]},"138":{"line":734,"type":"binary-expr","locations":[{"start":{"line":734,"column":6},"end":{"line":734,"column":16}},{"start":{"line":734,"column":20},"end":{"line":734,"column":57}}]},"139":{"line":750,"type":"cond-expr","locations":[{"start":{"line":750,"column":68},"end":{"line":750,"column":85}},{"start":{"line":750,"column":88},"end":{"line":750,"column":90}}]},"140":{"line":751,"type":"cond-expr","locations":[{"start":{"line":751,"column":35},"end":{"line":751,"column":73}},{"start":{"line":751,"column":76},"end":{"line":751,"column":114}}]},"141":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":6},"end":{"line":756,"column":6}},{"start":{"line":756,"column":6},"end":{"line":756,"column":6}}]},"142":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":6},"end":{"line":761,"column":6}},{"start":{"line":761,"column":6},"end":{"line":761,"column":6}}]},"143":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":6},"end":{"line":769,"column":6}},{"start":{"line":769,"column":6},"end":{"line":769,"column":6}}]},"144":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":6},"end":{"line":773,"column":6}},{"start":{"line":773,"column":6},"end":{"line":773,"column":6}}]},"145":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":6},"end":{"line":778,"column":6}},{"start":{"line":778,"column":6},"end":{"line":778,"column":6}}]},"146":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":6},"end":{"line":786,"column":6}},{"start":{"line":786,"column":6},"end":{"line":786,"column":6}}]},"147":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":817,"column":4}},{"start":{"line":817,"column":4},"end":{"line":817,"column":4}}]},"148":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":4},"end":{"line":821,"column":4}},{"start":{"line":821,"column":4},"end":{"line":821,"column":4}}]},"149":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":827,"column":4}},{"start":{"line":827,"column":4},"end":{"line":827,"column":4}}]},"150":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":11},"end":{"line":829,"column":11}},{"start":{"line":829,"column":11},"end":{"line":829,"column":11}}]},"151":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":11},"end":{"line":831,"column":11}},{"start":{"line":831,"column":11},"end":{"line":831,"column":11}}]},"152":{"line":831,"type":"binary-expr","locations":[{"start":{"line":831,"column":15},"end":{"line":831,"column":58}},{"start":{"line":831,"column":62},"end":{"line":831,"column":115}}]},"153":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":11},"end":{"line":833,"column":11}},{"start":{"line":833,"column":11},"end":{"line":833,"column":11}}]},"154":{"line":833,"type":"binary-expr","locations":[{"start":{"line":833,"column":15},"end":{"line":833,"column":57}},{"start":{"line":833,"column":61},"end":{"line":833,"column":113}}]},"155":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":11},"end":{"line":835,"column":11}},{"start":{"line":835,"column":11},"end":{"line":835,"column":11}}]},"156":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":11},"end":{"line":837,"column":11}},{"start":{"line":837,"column":11},"end":{"line":837,"column":11}}]},"157":{"line":839,"type":"if","locations":[{"start":{"line":839,"column":11},"end":{"line":839,"column":11}},{"start":{"line":839,"column":11},"end":{"line":839,"column":11}}]},"158":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":4},"end":{"line":843,"column":4}},{"start":{"line":843,"column":4},"end":{"line":843,"column":4}}]},"159":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":4},"end":{"line":847,"column":4}},{"start":{"line":847,"column":4},"end":{"line":847,"column":4}}]},"160":{"line":847,"type":"binary-expr","locations":[{"start":{"line":847,"column":8},"end":{"line":847,"column":43}},{"start":{"line":847,"column":47},"end":{"line":847,"column":74}}]},"161":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":6},"end":{"line":849,"column":6}},{"start":{"line":849,"column":6},"end":{"line":849,"column":6}}]},"162":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":10},"end":{"line":849,"column":47}},{"start":{"line":849,"column":51},"end":{"line":849,"column":91}}]},"163":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":13},"end":{"line":851,"column":13}},{"start":{"line":851,"column":13},"end":{"line":851,"column":13}}]},"164":{"line":857,"type":"binary-expr","locations":[{"start":{"line":857,"column":16},"end":{"line":857,"column":48}},{"start":{"line":857,"column":52},"end":{"line":857,"column":66}}]},"165":{"line":858,"type":"binary-expr","locations":[{"start":{"line":858,"column":12},"end":{"line":858,"column":15}},{"start":{"line":858,"column":19},"end":{"line":858,"column":42}}]},"166":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":16},"end":{"line":860,"column":23}},{"start":{"line":860,"column":27},"end":{"line":860,"column":48}},{"start":{"line":860,"column":52},"end":{"line":860,"column":56}}]},"167":{"line":861,"type":"binary-expr","locations":[{"start":{"line":861,"column":17},"end":{"line":861,"column":24}},{"start":{"line":861,"column":28},"end":{"line":861,"column":33}}]},"168":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":4},"end":{"line":867,"column":4}},{"start":{"line":867,"column":4},"end":{"line":867,"column":4}}]},"169":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":4},"end":{"line":871,"column":4}},{"start":{"line":871,"column":4},"end":{"line":871,"column":4}}]},"170":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":8},"end":{"line":871,"column":33}},{"start":{"line":871,"column":37},"end":{"line":871,"column":79}}]},"171":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":17},"end":{"line":873,"column":33}},{"start":{"line":873,"column":37},"end":{"line":873,"column":41}}]},"172":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":4},"end":{"line":882,"column":4}},{"start":{"line":882,"column":4},"end":{"line":882,"column":4}}]},"173":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":4},"end":{"line":934,"column":4}},{"start":{"line":934,"column":4},"end":{"line":934,"column":4}}]},"174":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":2},"end":{"line":951,"column":2}},{"start":{"line":951,"column":2},"end":{"line":951,"column":2}}]},"175":{"line":952,"type":"binary-expr","locations":[{"start":{"line":952,"column":27},"end":{"line":952,"column":77}},{"start":{"line":952,"column":81},"end":{"line":952,"column":105}}]},"176":{"line":980,"type":"cond-expr","locations":[{"start":{"line":980,"column":48},"end":{"line":980,"column":52}},{"start":{"line":980,"column":55},"end":{"line":980,"column":70}}]},"177":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":4},"end":{"line":986,"column":4}},{"start":{"line":986,"column":4},"end":{"line":986,"column":4}}]},"178":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":4},"end":{"line":990,"column":4}},{"start":{"line":990,"column":4},"end":{"line":990,"column":4}}]},"179":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}},{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}}]},"180":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":2},"end":{"line":1055,"column":2}},{"start":{"line":1055,"column":2},"end":{"line":1055,"column":2}}]},"181":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"182":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}},{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}}]},"183":{"line":1109,"type":"if","locations":[{"start":{"line":1109,"column":2},"end":{"line":1109,"column":2}},{"start":{"line":1109,"column":2},"end":{"line":1109,"column":2}}]},"184":{"line":1109,"type":"binary-expr","locations":[{"start":{"line":1109,"column":7},"end":{"line":1109,"column":30}},{"start":{"line":1109,"column":34},"end":{"line":1109,"column":61}},{"start":{"line":1109,"column":66},"end":{"line":1109,"column":92}}]},"185":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}},{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}}]},"186":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":2},"end":{"line":1177,"column":2}},{"start":{"line":1177,"column":2},"end":{"line":1177,"column":2}}]},"187":{"line":1186,"type":"if","locations":[{"start":{"line":1186,"column":4},"end":{"line":1186,"column":4}},{"start":{"line":1186,"column":4},"end":{"line":1186,"column":4}}]},"188":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":6},"end":{"line":1187,"column":6}},{"start":{"line":1187,"column":6},"end":{"line":1187,"column":6}}]},"189":{"line":1188,"type":"if","locations":[{"start":{"line":1188,"column":8},"end":{"line":1188,"column":8}},{"start":{"line":1188,"column":8},"end":{"line":1188,"column":8}}]},"190":{"line":1188,"type":"binary-expr","locations":[{"start":{"line":1188,"column":12},"end":{"line":1188,"column":40}},{"start":{"line":1188,"column":44},"end":{"line":1188,"column":83}}]},"191":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":13},"end":{"line":1192,"column":13}},{"start":{"line":1192,"column":13},"end":{"line":1192,"column":13}}]},"192":{"line":1200,"type":"if","locations":[{"start":{"line":1200,"column":6},"end":{"line":1200,"column":6}},{"start":{"line":1200,"column":6},"end":{"line":1200,"column":6}}]},"193":{"line":1200,"type":"binary-expr","locations":[{"start":{"line":1200,"column":10},"end":{"line":1200,"column":35}},{"start":{"line":1200,"column":39},"end":{"line":1200,"column":81}}]},"194":{"line":1206,"type":"if","locations":[{"start":{"line":1206,"column":8},"end":{"line":1206,"column":8}},{"start":{"line":1206,"column":8},"end":{"line":1206,"column":8}}]},"195":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}},{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}}]},"196":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":8},"end":{"line":1215,"column":8}},{"start":{"line":1215,"column":8},"end":{"line":1215,"column":8}}]},"197":{"line":1216,"type":"cond-expr","locations":[{"start":{"line":1216,"column":46},"end":{"line":1216,"column":57}},{"start":{"line":1216,"column":60},"end":{"line":1216,"column":100}}]},"198":{"line":1216,"type":"binary-expr","locations":[{"start":{"line":1216,"column":69},"end":{"line":1216,"column":80}},{"start":{"line":1216,"column":84},"end":{"line":1216,"column":86}}]},"199":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":15},"end":{"line":1217,"column":15}},{"start":{"line":1217,"column":15},"end":{"line":1217,"column":15}}]},"200":{"line":1217,"type":"binary-expr","locations":[{"start":{"line":1217,"column":21},"end":{"line":1217,"column":63}},{"start":{"line":1217,"column":68},"end":{"line":1217,"column":94}},{"start":{"line":1217,"column":98},"end":{"line":1217,"column":124}}]},"201":{"line":1221,"type":"cond-expr","locations":[{"start":{"line":1221,"column":29},"end":{"line":1221,"column":40}},{"start":{"line":1221,"column":43},"end":{"line":1221,"column":54}}]},"202":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":2},"end":{"line":1337,"column":2}},{"start":{"line":1337,"column":2},"end":{"line":1337,"column":2}}]},"203":{"line":1337,"type":"binary-expr","locations":[{"start":{"line":1337,"column":6},"end":{"line":1337,"column":27}},{"start":{"line":1337,"column":31},"end":{"line":1337,"column":56}}]},"204":{"line":1341,"type":"if","locations":[{"start":{"line":1341,"column":2},"end":{"line":1341,"column":2}},{"start":{"line":1341,"column":2},"end":{"line":1341,"column":2}}]},"205":{"line":1353,"type":"binary-expr","locations":[{"start":{"line":1353,"column":28},"end":{"line":1353,"column":49}},{"start":{"line":1353,"column":53},"end":{"line":1353,"column":79}}]},"206":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":4},"end":{"line":1359,"column":4}},{"start":{"line":1359,"column":4},"end":{"line":1359,"column":4}}]},"207":{"line":1365,"type":"if","locations":[{"start":{"line":1365,"column":4},"end":{"line":1365,"column":4}},{"start":{"line":1365,"column":4},"end":{"line":1365,"column":4}}]},"208":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}},{"start":{"line":1369,"column":4},"end":{"line":1369,"column":4}}]},"209":{"line":1375,"type":"if","locations":[{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}},{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}}]},"210":{"line":1375,"type":"binary-expr","locations":[{"start":{"line":1375,"column":10},"end":{"line":1375,"column":28}},{"start":{"line":1375,"column":32},"end":{"line":1375,"column":44}},{"start":{"line":1375,"column":48},"end":{"line":1375,"column":72}},{"start":{"line":1375,"column":77},"end":{"line":1375,"column":136}}]},"211":{"line":1381,"type":"if","locations":[{"start":{"line":1381,"column":4},"end":{"line":1381,"column":4}},{"start":{"line":1381,"column":4},"end":{"line":1381,"column":4}}]},"212":{"line":1386,"type":"binary-expr","locations":[{"start":{"line":1386,"column":35},"end":{"line":1386,"column":48}},{"start":{"line":1386,"column":52},"end":{"line":1386,"column":56}}]},"213":{"line":1392,"type":"if","locations":[{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}},{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}}]},"214":{"line":1400,"type":"if","locations":[{"start":{"line":1400,"column":4},"end":{"line":1400,"column":4}},{"start":{"line":1400,"column":4},"end":{"line":1400,"column":4}}]},"215":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}},{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}}]},"216":{"line":1406,"type":"binary-expr","locations":[{"start":{"line":1406,"column":8},"end":{"line":1406,"column":26}},{"start":{"line":1406,"column":30},"end":{"line":1406,"column":51}}]},"217":{"line":1407,"type":"if","locations":[{"start":{"line":1407,"column":6},"end":{"line":1407,"column":6}},{"start":{"line":1407,"column":6},"end":{"line":1407,"column":6}}]},"218":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":13},"end":{"line":1409,"column":13}},{"start":{"line":1409,"column":13},"end":{"line":1409,"column":13}}]},"219":{"line":1421,"type":"if","locations":[{"start":{"line":1421,"column":2},"end":{"line":1421,"column":2}},{"start":{"line":1421,"column":2},"end":{"line":1421,"column":2}}]},"220":{"line":1421,"type":"binary-expr","locations":[{"start":{"line":1421,"column":6},"end":{"line":1421,"column":22}},{"start":{"line":1421,"column":26},"end":{"line":1421,"column":37}},{"start":{"line":1421,"column":41},"end":{"line":1421,"column":49}}]},"221":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":2},"end":{"line":1424,"column":2}},{"start":{"line":1424,"column":2},"end":{"line":1424,"column":2}}]},"222":{"line":1426,"type":"if","locations":[{"start":{"line":1426,"column":2},"end":{"line":1426,"column":2}},{"start":{"line":1426,"column":2},"end":{"line":1426,"column":2}}]},"223":{"line":1429,"type":"if","locations":[{"start":{"line":1429,"column":4},"end":{"line":1429,"column":4}},{"start":{"line":1429,"column":4},"end":{"line":1429,"column":4}}]},"224":{"line":1435,"type":"if","locations":[{"start":{"line":1435,"column":10},"end":{"line":1435,"column":10}},{"start":{"line":1435,"column":10},"end":{"line":1435,"column":10}}]},"225":{"line":1438,"type":"if","locations":[{"start":{"line":1438,"column":10},"end":{"line":1438,"column":10}},{"start":{"line":1438,"column":10},"end":{"line":1438,"column":10}}]},"226":{"line":1445,"type":"binary-expr","locations":[{"start":{"line":1445,"column":20},"end":{"line":1445,"column":35}},{"start":{"line":1445,"column":39},"end":{"line":1445,"column":41}}]},"227":{"line":1482,"type":"if","locations":[{"start":{"line":1482,"column":2},"end":{"line":1482,"column":2}},{"start":{"line":1482,"column":2},"end":{"line":1482,"column":2}}]},"228":{"line":1486,"type":"binary-expr","locations":[{"start":{"line":1486,"column":12},"end":{"line":1486,"column":36}},{"start":{"line":1486,"column":40},"end":{"line":1486,"column":42}}]},"229":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":2},"end":{"line":1488,"column":2}},{"start":{"line":1488,"column":2},"end":{"line":1488,"column":2}}]},"230":{"line":1488,"type":"binary-expr","locations":[{"start":{"line":1488,"column":6},"end":{"line":1488,"column":31}},{"start":{"line":1488,"column":35},"end":{"line":1488,"column":60}},{"start":{"line":1488,"column":64},"end":{"line":1488,"column":86}}]},"231":{"line":1512,"type":"if","locations":[{"start":{"line":1512,"column":2},"end":{"line":1512,"column":2}},{"start":{"line":1512,"column":2},"end":{"line":1512,"column":2}}]},"232":{"line":1512,"type":"binary-expr","locations":[{"start":{"line":1512,"column":6},"end":{"line":1512,"column":27}},{"start":{"line":1512,"column":31},"end":{"line":1512,"column":56}}]},"233":{"line":1517,"type":"if","locations":[{"start":{"line":1517,"column":2},"end":{"line":1517,"column":2}},{"start":{"line":1517,"column":2},"end":{"line":1517,"column":2}}]},"234":{"line":1518,"type":"binary-expr","locations":[{"start":{"line":1518,"column":16},"end":{"line":1518,"column":29}},{"start":{"line":1518,"column":33},"end":{"line":1518,"column":72}}]},"235":{"line":1521,"type":"if","locations":[{"start":{"line":1521,"column":4},"end":{"line":1521,"column":4}},{"start":{"line":1521,"column":4},"end":{"line":1521,"column":4}}]},"236":{"line":1521,"type":"binary-expr","locations":[{"start":{"line":1521,"column":8},"end":{"line":1521,"column":22}},{"start":{"line":1521,"column":26},"end":{"line":1521,"column":79}}]},"237":{"line":1521,"type":"binary-expr","locations":[{"start":{"line":1521,"column":28},"end":{"line":1521,"column":52}},{"start":{"line":1521,"column":56},"end":{"line":1521,"column":78}}]},"238":{"line":1556,"type":"if","locations":[{"start":{"line":1556,"column":2},"end":{"line":1556,"column":2}},{"start":{"line":1556,"column":2},"end":{"line":1556,"column":2}}]},"239":{"line":1562,"type":"binary-expr","locations":[{"start":{"line":1562,"column":14},"end":{"line":1562,"column":25}},{"start":{"line":1562,"column":29},"end":{"line":1562,"column":46}},{"start":{"line":1562,"column":50},"end":{"line":1562,"column":59}}]},"240":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}},{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}}]},"241":{"line":1570,"type":"if","locations":[{"start":{"line":1570,"column":2},"end":{"line":1570,"column":2}},{"start":{"line":1570,"column":2},"end":{"line":1570,"column":2}}]},"242":{"line":1571,"type":"if","locations":[{"start":{"line":1571,"column":4},"end":{"line":1571,"column":4}},{"start":{"line":1571,"column":4},"end":{"line":1571,"column":4}}]},"243":{"line":1608,"type":"if","locations":[{"start":{"line":1608,"column":4},"end":{"line":1608,"column":4}},{"start":{"line":1608,"column":4},"end":{"line":1608,"column":4}}]},"244":{"line":1612,"type":"cond-expr","locations":[{"start":{"line":1612,"column":32},"end":{"line":1612,"column":70}},{"start":{"line":1612,"column":73},"end":{"line":1612,"column":76}}]},"245":{"line":1663,"type":"if","locations":[{"start":{"line":1663,"column":2},"end":{"line":1663,"column":2}},{"start":{"line":1663,"column":2},"end":{"line":1663,"column":2}}]},"246":{"line":1663,"type":"binary-expr","locations":[{"start":{"line":1663,"column":6},"end":{"line":1663,"column":27}},{"start":{"line":1663,"column":31},"end":{"line":1663,"column":56}}]},"247":{"line":1669,"type":"if","locations":[{"start":{"line":1669,"column":2},"end":{"line":1669,"column":2}},{"start":{"line":1669,"column":2},"end":{"line":1669,"column":2}}]},"248":{"line":1673,"type":"if","locations":[{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}},{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}}]},"249":{"line":1675,"type":"binary-expr","locations":[{"start":{"line":1675,"column":15},"end":{"line":1675,"column":20}},{"start":{"line":1675,"column":24},"end":{"line":1675,"column":25}}]},"250":{"line":1681,"type":"binary-expr","locations":[{"start":{"line":1681,"column":15},"end":{"line":1681,"column":20}},{"start":{"line":1681,"column":24},"end":{"line":1681,"column":25}}]},"251":{"line":1741,"type":"if","locations":[{"start":{"line":1741,"column":2},"end":{"line":1741,"column":2}},{"start":{"line":1741,"column":2},"end":{"line":1741,"column":2}}]},"252":{"line":1748,"type":"binary-expr","locations":[{"start":{"line":1748,"column":5},"end":{"line":1748,"column":12}},{"start":{"line":1748,"column":16},"end":{"line":1748,"column":18}}]},"253":{"line":1750,"type":"if","locations":[{"start":{"line":1750,"column":2},"end":{"line":1750,"column":2}},{"start":{"line":1750,"column":2},"end":{"line":1750,"column":2}}]},"254":{"line":1752,"type":"cond-expr","locations":[{"start":{"line":1752,"column":40},"end":{"line":1752,"column":52}},{"start":{"line":1752,"column":55},"end":{"line":1752,"column":64}}]},"255":{"line":1756,"type":"if","locations":[{"start":{"line":1756,"column":2},"end":{"line":1756,"column":2}},{"start":{"line":1756,"column":2},"end":{"line":1756,"column":2}}]},"256":{"line":1758,"type":"if","locations":[{"start":{"line":1758,"column":4},"end":{"line":1758,"column":4}},{"start":{"line":1758,"column":4},"end":{"line":1758,"column":4}}]},"257":{"line":1771,"type":"binary-expr","locations":[{"start":{"line":1771,"column":5},"end":{"line":1771,"column":12}},{"start":{"line":1771,"column":16},"end":{"line":1771,"column":18}}]},"258":{"line":1773,"type":"if","locations":[{"start":{"line":1773,"column":2},"end":{"line":1773,"column":2}},{"start":{"line":1773,"column":2},"end":{"line":1773,"column":2}}]},"259":{"line":1775,"type":"if","locations":[{"start":{"line":1775,"column":4},"end":{"line":1775,"column":4}},{"start":{"line":1775,"column":4},"end":{"line":1775,"column":4}}]},"260":{"line":1781,"type":"if","locations":[{"start":{"line":1781,"column":2},"end":{"line":1781,"column":2}},{"start":{"line":1781,"column":2},"end":{"line":1781,"column":2}}]},"261":{"line":1783,"type":"cond-expr","locations":[{"start":{"line":1783,"column":40},"end":{"line":1783,"column":52}},{"start":{"line":1783,"column":55},"end":{"line":1783,"column":64}}]},"262":{"line":1813,"type":"binary-expr","locations":[{"start":{"line":1813,"column":28},"end":{"line":1813,"column":35}},{"start":{"line":1813,"column":39},"end":{"line":1813,"column":41}}]},"263":{"line":1839,"type":"if","locations":[{"start":{"line":1839,"column":2},"end":{"line":1839,"column":2}},{"start":{"line":1839,"column":2},"end":{"line":1839,"column":2}}]},"264":{"line":1839,"type":"binary-expr","locations":[{"start":{"line":1839,"column":6},"end":{"line":1839,"column":14}},{"start":{"line":1839,"column":18},"end":{"line":1839,"column":32}},{"start":{"line":1839,"column":36},"end":{"line":1839,"column":56}}]},"265":{"line":1850,"type":"if","locations":[{"start":{"line":1850,"column":4},"end":{"line":1850,"column":4}},{"start":{"line":1850,"column":4},"end":{"line":1850,"column":4}}]},"266":{"line":1851,"type":"binary-expr","locations":[{"start":{"line":1851,"column":15},"end":{"line":1851,"column":46}},{"start":{"line":1851,"column":50},"end":{"line":1851,"column":52}}]},"267":{"line":1852,"type":"if","locations":[{"start":{"line":1852,"column":6},"end":{"line":1852,"column":6}},{"start":{"line":1852,"column":6},"end":{"line":1852,"column":6}}]},"268":{"line":1881,"type":"if","locations":[{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}},{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}}]},"269":{"line":1881,"type":"binary-expr","locations":[{"start":{"line":1881,"column":6},"end":{"line":1881,"column":14}},{"start":{"line":1881,"column":18},"end":{"line":1881,"column":32}},{"start":{"line":1881,"column":36},"end":{"line":1881,"column":56}}]},"270":{"line":1890,"type":"if","locations":[{"start":{"line":1890,"column":2},"end":{"line":1890,"column":2}},{"start":{"line":1890,"column":2},"end":{"line":1890,"column":2}}]},"271":{"line":1890,"type":"binary-expr","locations":[{"start":{"line":1890,"column":6},"end":{"line":1890,"column":39}},{"start":{"line":1890,"column":43},"end":{"line":1890,"column":73}}]},"272":{"line":1892,"type":"if","locations":[{"start":{"line":1892,"column":4},"end":{"line":1892,"column":4}},{"start":{"line":1892,"column":4},"end":{"line":1892,"column":4}}]},"273":{"line":1904,"type":"if","locations":[{"start":{"line":1904,"column":2},"end":{"line":1904,"column":2}},{"start":{"line":1904,"column":2},"end":{"line":1904,"column":2}}]},"274":{"line":1915,"type":"if","locations":[{"start":{"line":1915,"column":4},"end":{"line":1915,"column":4}},{"start":{"line":1915,"column":4},"end":{"line":1915,"column":4}}]},"275":{"line":1919,"type":"binary-expr","locations":[{"start":{"line":1919,"column":13},"end":{"line":1919,"column":44}},{"start":{"line":1919,"column":48},"end":{"line":1919,"column":50}}]},"276":{"line":1920,"type":"if","locations":[{"start":{"line":1920,"column":4},"end":{"line":1920,"column":4}},{"start":{"line":1920,"column":4},"end":{"line":1920,"column":4}}]},"277":{"line":1927,"type":"if","locations":[{"start":{"line":1927,"column":6},"end":{"line":1927,"column":6}},{"start":{"line":1927,"column":6},"end":{"line":1927,"column":6}}]},"278":{"line":1934,"type":"if","locations":[{"start":{"line":1934,"column":6},"end":{"line":1934,"column":6}},{"start":{"line":1934,"column":6},"end":{"line":1934,"column":6}}]},"279":{"line":1935,"type":"if","locations":[{"start":{"line":1935,"column":8},"end":{"line":1935,"column":8}},{"start":{"line":1935,"column":8},"end":{"line":1935,"column":8}}]},"280":{"line":1935,"type":"binary-expr","locations":[{"start":{"line":1935,"column":12},"end":{"line":1935,"column":59}},{"start":{"line":1935,"column":63},"end":{"line":1935,"column":111}}]},"281":{"line":1942,"type":"cond-expr","locations":[{"start":{"line":1942,"column":43},"end":{"line":1942,"column":47}},{"start":{"line":1942,"column":50},"end":{"line":1942,"column":61}}]},"282":{"line":1946,"type":"if","locations":[{"start":{"line":1946,"column":8},"end":{"line":1946,"column":8}},{"start":{"line":1946,"column":8},"end":{"line":1946,"column":8}}]},"283":{"line":1951,"type":"if","locations":[{"start":{"line":1951,"column":4},"end":{"line":1951,"column":4}},{"start":{"line":1951,"column":4},"end":{"line":1951,"column":4}}]},"284":{"line":1951,"type":"binary-expr","locations":[{"start":{"line":1951,"column":8},"end":{"line":1951,"column":27}},{"start":{"line":1951,"column":31},"end":{"line":1951,"column":42}}]},"285":{"line":1969,"type":"if","locations":[{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}},{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}}]},"286":{"line":1969,"type":"binary-expr","locations":[{"start":{"line":1969,"column":6},"end":{"line":1969,"column":14}},{"start":{"line":1969,"column":18},"end":{"line":1969,"column":32}}]},"287":{"line":1975,"type":"binary-expr","locations":[{"start":{"line":1975,"column":15},"end":{"line":1975,"column":46}},{"start":{"line":1975,"column":50},"end":{"line":1975,"column":52}}]},"288":{"line":1976,"type":"if","locations":[{"start":{"line":1976,"column":2},"end":{"line":1976,"column":2}},{"start":{"line":1976,"column":2},"end":{"line":1976,"column":2}}]},"289":{"line":1982,"type":"if","locations":[{"start":{"line":1982,"column":4},"end":{"line":1982,"column":4}},{"start":{"line":1982,"column":4},"end":{"line":1982,"column":4}}]},"290":{"line":2018,"type":"binary-expr","locations":[{"start":{"line":2018,"column":12},"end":{"line":2018,"column":36}},{"start":{"line":2018,"column":40},"end":{"line":2018,"column":42}}]},"291":{"line":2020,"type":"if","locations":[{"start":{"line":2020,"column":2},"end":{"line":2020,"column":2}},{"start":{"line":2020,"column":2},"end":{"line":2020,"column":2}}]},"292":{"line":2026,"type":"binary-expr","locations":[{"start":{"line":2026,"column":19},"end":{"line":2026,"column":49}},{"start":{"line":2026,"column":53},"end":{"line":2026,"column":87}}]},"293":{"line":2037,"type":"if","locations":[{"start":{"line":2037,"column":4},"end":{"line":2037,"column":4}},{"start":{"line":2037,"column":4},"end":{"line":2037,"column":4}}]},"294":{"line":2037,"type":"binary-expr","locations":[{"start":{"line":2037,"column":8},"end":{"line":2037,"column":21}},{"start":{"line":2037,"column":25},"end":{"line":2037,"column":53}}]},"295":{"line":2038,"type":"binary-expr","locations":[{"start":{"line":2038,"column":36},"end":{"line":2038,"column":76}},{"start":{"line":2038,"column":80},"end":{"line":2038,"column":83}}]},"296":{"line":2040,"type":"if","locations":[{"start":{"line":2040,"column":4},"end":{"line":2040,"column":4}},{"start":{"line":2040,"column":4},"end":{"line":2040,"column":4}}]},"297":{"line":2040,"type":"binary-expr","locations":[{"start":{"line":2040,"column":8},"end":{"line":2040,"column":21}},{"start":{"line":2040,"column":25},"end":{"line":2040,"column":53}}]},"298":{"line":2041,"type":"binary-expr","locations":[{"start":{"line":2041,"column":66},"end":{"line":2041,"column":106}},{"start":{"line":2041,"column":110},"end":{"line":2041,"column":113}}]},"299":{"line":2046,"type":"if","locations":[{"start":{"line":2046,"column":4},"end":{"line":2046,"column":4}},{"start":{"line":2046,"column":4},"end":{"line":2046,"column":4}}]},"300":{"line":2046,"type":"binary-expr","locations":[{"start":{"line":2046,"column":8},"end":{"line":2046,"column":19}},{"start":{"line":2046,"column":23},"end":{"line":2046,"column":47}},{"start":{"line":2046,"column":51},"end":{"line":2046,"column":109}}]},"301":{"line":2081,"type":"if","locations":[{"start":{"line":2081,"column":2},"end":{"line":2081,"column":2}},{"start":{"line":2081,"column":2},"end":{"line":2081,"column":2}}]},"302":{"line":2090,"type":"binary-expr","locations":[{"start":{"line":2090,"column":5},"end":{"line":2090,"column":12}},{"start":{"line":2090,"column":16},"end":{"line":2090,"column":18}}]},"303":{"line":2092,"type":"binary-expr","locations":[{"start":{"line":2092,"column":19},"end":{"line":2092,"column":33}},{"start":{"line":2092,"column":37},"end":{"line":2092,"column":70}}]},"304":{"line":2098,"type":"if","locations":[{"start":{"line":2098,"column":2},"end":{"line":2098,"column":2}},{"start":{"line":2098,"column":2},"end":{"line":2098,"column":2}}]},"305":{"line":2098,"type":"binary-expr","locations":[{"start":{"line":2098,"column":6},"end":{"line":2098,"column":30}},{"start":{"line":2098,"column":34},"end":{"line":2098,"column":79}}]},"306":{"line":2101,"type":"if","locations":[{"start":{"line":2101,"column":2},"end":{"line":2101,"column":2}},{"start":{"line":2101,"column":2},"end":{"line":2101,"column":2}}]},"307":{"line":2101,"type":"binary-expr","locations":[{"start":{"line":2101,"column":6},"end":{"line":2101,"column":31}},{"start":{"line":2101,"column":35},"end":{"line":2101,"column":79}}]},"308":{"line":2105,"type":"if","locations":[{"start":{"line":2105,"column":2},"end":{"line":2105,"column":2}},{"start":{"line":2105,"column":2},"end":{"line":2105,"column":2}}]},"309":{"line":2108,"type":"if","locations":[{"start":{"line":2108,"column":4},"end":{"line":2108,"column":4}},{"start":{"line":2108,"column":4},"end":{"line":2108,"column":4}}]},"310":{"line":2108,"type":"binary-expr","locations":[{"start":{"line":2108,"column":8},"end":{"line":2108,"column":50}},{"start":{"line":2108,"column":54},"end":{"line":2108,"column":97}}]},"311":{"line":2125,"type":"if","locations":[{"start":{"line":2125,"column":4},"end":{"line":2125,"column":4}},{"start":{"line":2125,"column":4},"end":{"line":2125,"column":4}}]},"312":{"line":2130,"type":"if","locations":[{"start":{"line":2130,"column":4},"end":{"line":2130,"column":4}},{"start":{"line":2130,"column":4},"end":{"line":2130,"column":4}}]},"313":{"line":2134,"type":"if","locations":[{"start":{"line":2134,"column":8},"end":{"line":2134,"column":8}},{"start":{"line":2134,"column":8},"end":{"line":2134,"column":8}}]},"314":{"line":2136,"type":"if","locations":[{"start":{"line":2136,"column":12},"end":{"line":2136,"column":12}},{"start":{"line":2136,"column":12},"end":{"line":2136,"column":12}}]},"315":{"line":2142,"type":"if","locations":[{"start":{"line":2142,"column":12},"end":{"line":2142,"column":12}},{"start":{"line":2142,"column":12},"end":{"line":2142,"column":12}}]},"316":{"line":2149,"type":"if","locations":[{"start":{"line":2149,"column":8},"end":{"line":2149,"column":8}},{"start":{"line":2149,"column":8},"end":{"line":2149,"column":8}}]},"317":{"line":2159,"type":"if","locations":[{"start":{"line":2159,"column":6},"end":{"line":2159,"column":6}},{"start":{"line":2159,"column":6},"end":{"line":2159,"column":6}}]},"318":{"line":2159,"type":"binary-expr","locations":[{"start":{"line":2159,"column":10},"end":{"line":2159,"column":23}},{"start":{"line":2159,"column":27},"end":{"line":2159,"column":49}}]},"319":{"line":2162,"type":"if","locations":[{"start":{"line":2162,"column":6},"end":{"line":2162,"column":6}},{"start":{"line":2162,"column":6},"end":{"line":2162,"column":6}}]},"320":{"line":2162,"type":"binary-expr","locations":[{"start":{"line":2162,"column":10},"end":{"line":2162,"column":23}},{"start":{"line":2162,"column":27},"end":{"line":2162,"column":49}}]},"321":{"line":2169,"type":"if","locations":[{"start":{"line":2169,"column":4},"end":{"line":2169,"column":4}},{"start":{"line":2169,"column":4},"end":{"line":2169,"column":4}}]},"322":{"line":2194,"type":"if","locations":[{"start":{"line":2194,"column":8},"end":{"line":2194,"column":8}},{"start":{"line":2194,"column":8},"end":{"line":2194,"column":8}}]},"323":{"line":2200,"type":"if","locations":[{"start":{"line":2200,"column":8},"end":{"line":2200,"column":8}},{"start":{"line":2200,"column":8},"end":{"line":2200,"column":8}}]},"324":{"line":2211,"type":"if","locations":[{"start":{"line":2211,"column":4},"end":{"line":2211,"column":4}},{"start":{"line":2211,"column":4},"end":{"line":2211,"column":4}}]},"325":{"line":2235,"type":"binary-expr","locations":[{"start":{"line":2235,"column":12},"end":{"line":2235,"column":36}},{"start":{"line":2235,"column":40},"end":{"line":2235,"column":42}}]},"326":{"line":2261,"type":"if","locations":[{"start":{"line":2261,"column":2},"end":{"line":2261,"column":2}},{"start":{"line":2261,"column":2},"end":{"line":2261,"column":2}}]},"327":{"line":2261,"type":"binary-expr","locations":[{"start":{"line":2261,"column":6},"end":{"line":2261,"column":14}},{"start":{"line":2261,"column":18},"end":{"line":2261,"column":54}}]},"328":{"line":2261,"type":"binary-expr","locations":[{"start":{"line":2261,"column":20},"end":{"line":2261,"column":33}},{"start":{"line":2261,"column":37},"end":{"line":2261,"column":53}}]},"329":{"line":2265,"type":"if","locations":[{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}},{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}}]},"330":{"line":2265,"type":"binary-expr","locations":[{"start":{"line":2265,"column":6},"end":{"line":2265,"column":23}},{"start":{"line":2265,"column":27},"end":{"line":2265,"column":58}},{"start":{"line":2265,"column":62},"end":{"line":2265,"column":87}},{"start":{"line":2265,"column":91},"end":{"line":2265,"column":132}}]},"331":{"line":2286,"type":"if","locations":[{"start":{"line":2286,"column":4},"end":{"line":2286,"column":4}},{"start":{"line":2286,"column":4},"end":{"line":2286,"column":4}}]},"332":{"line":2291,"type":"if","locations":[{"start":{"line":2291,"column":4},"end":{"line":2291,"column":4}},{"start":{"line":2291,"column":4},"end":{"line":2291,"column":4}}]},"333":{"line":2303,"type":"if","locations":[{"start":{"line":2303,"column":4},"end":{"line":2303,"column":4}},{"start":{"line":2303,"column":4},"end":{"line":2303,"column":4}}]},"334":{"line":2303,"type":"binary-expr","locations":[{"start":{"line":2303,"column":8},"end":{"line":2303,"column":43}},{"start":{"line":2303,"column":47},"end":{"line":2303,"column":61}}]},"335":{"line":2312,"type":"cond-expr","locations":[{"start":{"line":2312,"column":73},"end":{"line":2312,"column":104}},{"start":{"line":2312,"column":107},"end":{"line":2312,"column":111}}]},"336":{"line":2321,"type":"if","locations":[{"start":{"line":2321,"column":4},"end":{"line":2321,"column":4}},{"start":{"line":2321,"column":4},"end":{"line":2321,"column":4}}]},"337":{"line":2328,"type":"if","locations":[{"start":{"line":2328,"column":4},"end":{"line":2328,"column":4}},{"start":{"line":2328,"column":4},"end":{"line":2328,"column":4}}]},"338":{"line":2351,"type":"if","locations":[{"start":{"line":2351,"column":2},"end":{"line":2351,"column":2}},{"start":{"line":2351,"column":2},"end":{"line":2351,"column":2}}]},"339":{"line":2356,"type":"binary-expr","locations":[{"start":{"line":2356,"column":5},"end":{"line":2356,"column":12}},{"start":{"line":2356,"column":16},"end":{"line":2356,"column":18}}]},"340":{"line":2370,"type":"if","locations":[{"start":{"line":2370,"column":4},"end":{"line":2370,"column":4}},{"start":{"line":2370,"column":4},"end":{"line":2370,"column":4}}]},"341":{"line":2375,"type":"if","locations":[{"start":{"line":2375,"column":4},"end":{"line":2375,"column":4}},{"start":{"line":2375,"column":4},"end":{"line":2375,"column":4}}]},"342":{"line":2389,"type":"cond-expr","locations":[{"start":{"line":2389,"column":84},"end":{"line":2389,"column":115}},{"start":{"line":2389,"column":118},"end":{"line":2389,"column":122}}]},"343":{"line":2391,"type":"binary-expr","locations":[{"start":{"line":2391,"column":18},"end":{"line":2391,"column":42}},{"start":{"line":2391,"column":46},"end":{"line":2391,"column":58}}]},"344":{"line":2396,"type":"if","locations":[{"start":{"line":2396,"column":4},"end":{"line":2396,"column":4}},{"start":{"line":2396,"column":4},"end":{"line":2396,"column":4}}]},"345":{"line":2403,"type":"if","locations":[{"start":{"line":2403,"column":4},"end":{"line":2403,"column":4}},{"start":{"line":2403,"column":4},"end":{"line":2403,"column":4}}]},"346":{"line":2435,"type":"if","locations":[{"start":{"line":2435,"column":2},"end":{"line":2435,"column":2}},{"start":{"line":2435,"column":2},"end":{"line":2435,"column":2}}]},"347":{"line":2435,"type":"binary-expr","locations":[{"start":{"line":2435,"column":6},"end":{"line":2435,"column":14}},{"start":{"line":2435,"column":18},"end":{"line":2435,"column":32}}]},"348":{"line":2439,"type":"if","locations":[{"start":{"line":2439,"column":2},"end":{"line":2439,"column":2}},{"start":{"line":2439,"column":2},"end":{"line":2439,"column":2}}]},"349":{"line":2439,"type":"binary-expr","locations":[{"start":{"line":2439,"column":6},"end":{"line":2439,"column":37}},{"start":{"line":2439,"column":41},"end":{"line":2439,"column":66}},{"start":{"line":2439,"column":70},"end":{"line":2439,"column":111}}]},"350":{"line":2464,"type":"if","locations":[{"start":{"line":2464,"column":2},"end":{"line":2464,"column":2}},{"start":{"line":2464,"column":2},"end":{"line":2464,"column":2}}]},"351":{"line":2464,"type":"binary-expr","locations":[{"start":{"line":2464,"column":6},"end":{"line":2464,"column":20}},{"start":{"line":2464,"column":24},"end":{"line":2464,"column":55}}]},"352":{"line":2466,"type":"if","locations":[{"start":{"line":2466,"column":6},"end":{"line":2466,"column":6}},{"start":{"line":2466,"column":6},"end":{"line":2466,"column":6}}]},"353":{"line":2473,"type":"if","locations":[{"start":{"line":2473,"column":4},"end":{"line":2473,"column":4}},{"start":{"line":2473,"column":4},"end":{"line":2473,"column":4}}]},"354":{"line":2473,"type":"binary-expr","locations":[{"start":{"line":2473,"column":8},"end":{"line":2473,"column":21}},{"start":{"line":2473,"column":25},"end":{"line":2473,"column":69}}]},"355":{"line":2478,"type":"if","locations":[{"start":{"line":2478,"column":2},"end":{"line":2478,"column":2}},{"start":{"line":2478,"column":2},"end":{"line":2478,"column":2}}]},"356":{"line":2478,"type":"binary-expr","locations":[{"start":{"line":2478,"column":6},"end":{"line":2478,"column":41}},{"start":{"line":2478,"column":45},"end":{"line":2478,"column":60}}]},"357":{"line":2479,"type":"binary-expr","locations":[{"start":{"line":2479,"column":50},"end":{"line":2479,"column":112}},{"start":{"line":2479,"column":116},"end":{"line":2479,"column":157}}]},"358":{"line":2487,"type":"if","locations":[{"start":{"line":2487,"column":4},"end":{"line":2487,"column":4}},{"start":{"line":2487,"column":4},"end":{"line":2487,"column":4}}]},"359":{"line":2491,"type":"if","locations":[{"start":{"line":2491,"column":6},"end":{"line":2491,"column":6}},{"start":{"line":2491,"column":6},"end":{"line":2491,"column":6}}]},"360":{"line":2500,"type":"if","locations":[{"start":{"line":2500,"column":8},"end":{"line":2500,"column":8}},{"start":{"line":2500,"column":8},"end":{"line":2500,"column":8}}]},"361":{"line":2500,"type":"binary-expr","locations":[{"start":{"line":2500,"column":12},"end":{"line":2500,"column":22}},{"start":{"line":2500,"column":26},"end":{"line":2500,"column":47}}]},"362":{"line":2508,"type":"if","locations":[{"start":{"line":2508,"column":4},"end":{"line":2508,"column":4}},{"start":{"line":2508,"column":4},"end":{"line":2508,"column":4}}]},"363":{"line":2520,"type":"if","locations":[{"start":{"line":2520,"column":4},"end":{"line":2520,"column":4}},{"start":{"line":2520,"column":4},"end":{"line":2520,"column":4}}]},"364":{"line":2523,"type":"if","locations":[{"start":{"line":2523,"column":8},"end":{"line":2523,"column":8}},{"start":{"line":2523,"column":8},"end":{"line":2523,"column":8}}]},"365":{"line":2537,"type":"if","locations":[{"start":{"line":2537,"column":12},"end":{"line":2537,"column":12}},{"start":{"line":2537,"column":12},"end":{"line":2537,"column":12}}]},"366":{"line":2544,"type":"if","locations":[{"start":{"line":2544,"column":12},"end":{"line":2544,"column":12}},{"start":{"line":2544,"column":12},"end":{"line":2544,"column":12}}]},"367":{"line":2547,"type":"if","locations":[{"start":{"line":2547,"column":16},"end":{"line":2547,"column":16}},{"start":{"line":2547,"column":16},"end":{"line":2547,"column":16}}]},"368":{"line":2552,"type":"if","locations":[{"start":{"line":2552,"column":14},"end":{"line":2552,"column":14}},{"start":{"line":2552,"column":14},"end":{"line":2552,"column":14}}]},"369":{"line":2564,"type":"if","locations":[{"start":{"line":2564,"column":10},"end":{"line":2564,"column":10}},{"start":{"line":2564,"column":10},"end":{"line":2564,"column":10}}]},"370":{"line":2567,"type":"if","locations":[{"start":{"line":2567,"column":12},"end":{"line":2567,"column":12}},{"start":{"line":2567,"column":12},"end":{"line":2567,"column":12}}]},"371":{"line":2591,"type":"if","locations":[{"start":{"line":2591,"column":4},"end":{"line":2591,"column":4}},{"start":{"line":2591,"column":4},"end":{"line":2591,"column":4}}]},"372":{"line":2598,"type":"cond-expr","locations":[{"start":{"line":2598,"column":41},"end":{"line":2598,"column":64}},{"start":{"line":2598,"column":67},"end":{"line":2598,"column":72}}]},"373":{"line":2602,"type":"if","locations":[{"start":{"line":2602,"column":6},"end":{"line":2602,"column":6}},{"start":{"line":2602,"column":6},"end":{"line":2602,"column":6}}]},"374":{"line":2610,"type":"if","locations":[{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}},{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}}]},"375":{"line":2619,"type":"if","locations":[{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}},{"start":{"line":2619,"column":4},"end":{"line":2619,"column":4}}]},"376":{"line":2637,"type":"binary-expr","locations":[{"start":{"line":2637,"column":77},"end":{"line":2637,"column":83}},{"start":{"line":2637,"column":87},"end":{"line":2637,"column":99}},{"start":{"line":2637,"column":103},"end":{"line":2637,"column":112}}]},"377":{"line":2641,"type":"if","locations":[{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}},{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}}]},"378":{"line":2641,"type":"binary-expr","locations":[{"start":{"line":2641,"column":6},"end":{"line":2641,"column":32}},{"start":{"line":2641,"column":36},"end":{"line":2641,"column":75}}]},"379":{"line":2648,"type":"if","locations":[{"start":{"line":2648,"column":2},"end":{"line":2648,"column":2}},{"start":{"line":2648,"column":2},"end":{"line":2648,"column":2}}]},"380":{"line":2651,"type":"if","locations":[{"start":{"line":2651,"column":4},"end":{"line":2651,"column":4}},{"start":{"line":2651,"column":4},"end":{"line":2651,"column":4}}]},"381":{"line":2656,"type":"if","locations":[{"start":{"line":2656,"column":4},"end":{"line":2656,"column":4}},{"start":{"line":2656,"column":4},"end":{"line":2656,"column":4}}]},"382":{"line":2674,"type":"if","locations":[{"start":{"line":2674,"column":2},"end":{"line":2674,"column":2}},{"start":{"line":2674,"column":2},"end":{"line":2674,"column":2}}]},"383":{"line":2675,"type":"binary-expr","locations":[{"start":{"line":2675,"column":22},"end":{"line":2675,"column":37}},{"start":{"line":2675,"column":41},"end":{"line":2675,"column":43}}]},"384":{"line":2680,"type":"if","locations":[{"start":{"line":2680,"column":6},"end":{"line":2680,"column":6}},{"start":{"line":2680,"column":6},"end":{"line":2680,"column":6}}]},"385":{"line":2680,"type":"binary-expr","locations":[{"start":{"line":2680,"column":10},"end":{"line":2680,"column":26}},{"start":{"line":2680,"column":30},"end":{"line":2690,"column":8}}]},"386":{"line":2681,"type":"binary-expr","locations":[{"start":{"line":2681,"column":26},"end":{"line":2681,"column":36}},{"start":{"line":2681,"column":40},"end":{"line":2681,"column":83}}]},"387":{"line":2682,"type":"if","locations":[{"start":{"line":2682,"column":8},"end":{"line":2682,"column":8}},{"start":{"line":2682,"column":8},"end":{"line":2682,"column":8}}]},"388":{"line":2682,"type":"binary-expr","locations":[{"start":{"line":2682,"column":12},"end":{"line":2682,"column":24}},{"start":{"line":2682,"column":28},"end":{"line":2682,"column":36}}]},"389":{"line":2684,"type":"if","locations":[{"start":{"line":2684,"column":8},"end":{"line":2684,"column":8}},{"start":{"line":2684,"column":8},"end":{"line":2684,"column":8}}]},"390":{"line":2687,"type":"binary-expr","locations":[{"start":{"line":2687,"column":28},"end":{"line":2687,"column":52}},{"start":{"line":2687,"column":56},"end":{"line":2687,"column":112}}]},"391":{"line":2688,"type":"cond-expr","locations":[{"start":{"line":2688,"column":31},"end":{"line":2688,"column":57}},{"start":{"line":2688,"column":60},"end":{"line":2688,"column":65}}]}},"code":["'use strict';","","/* jshint -W110 */","","var Utils = require('./utils')","  , Instance = require('./instance')","  , Association = require('./associations/base')","  , HasMany = require('./associations/has-many')","  , DataTypes = require('./data-types')","  , Util = require('util')","  , Promise = require('./promise')","  , QueryTypes = require('./query-types')","  , Hooks = require('./hooks')","  , sequelizeErrors = require('./errors')","  , _ = require('lodash')","  , associationsMixin = require('./associations/mixin');","","/**"," * A Model represents a table in the database. Sometimes you might also see it referred to as model, or simply as factory."," * This class should _not_ be instantiated directly, it is created using `sequelize.define`, and already created models can be loaded using `sequelize.import`"," *"," * @class Model"," * @mixes Hooks"," * @mixes Associations"," */","var Model = function(name, attributes, options) {","","  this.options = Utils._.extend({","    timestamps: true,","    instanceMethods: {},","    classMethods: {},","    validate: {},","    freezeTableName: false,","    underscored: false,","    underscoredAll: false,","    paranoid: false,","    rejectOnEmpty: false,","    whereCollection: null,","    schema: null,","    schemaDelimiter: '',","    defaultScope: {},","    scopes: [],","    hooks: {},","    indexes: []","  }, options || {});","","  this.associations = {};","  this.modelManager = null;","  this.name = name;","  this.options.hooks = _.mapValues(this.replaceHookAliases(this.options.hooks), function (hooks) {","    if (!Array.isArray(hooks)) hooks = [hooks];","    return hooks;","  });","","  this.sequelize = options.sequelize;","  this.underscored = this.underscored || this.underscoredAll;","","  if (!this.options.tableName) {","    this.tableName = this.options.freezeTableName ? name : Utils.underscoredIf(Utils.pluralize(name), this.options.underscoredAll);","  } else {","    this.tableName = this.options.tableName;","  }","","  this.$schema = this.options.schema;","  this.$schemaDelimiter = this.options.schemaDelimiter;","","  // error check options","  _.each(options.validate, function(validator, validatorType) {","    if (_.includes(Utils._.keys(attributes), validatorType)) {","      throw new Error('A model validator function must not have the same name as a field. Model: ' + name + ', field/validation name: ' + validatorType);","    }","","    if (!_.isFunction(validator)) {","      throw new Error('Members of the validate option must be functions. Model: ' + name + ', error with validate member ' + validatorType);","    }","  });",""," this.attributes = this.rawAttributes = _.mapValues(attributes, function(attribute, name) {","   if (!Utils._.isPlainObject(attribute)) {","     attribute = { type: attribute };","   }","","","    attribute = this.sequelize.normalizeAttribute(attribute);","","    if (attribute.references) {","      attribute = Utils.formatReferences(attribute);","","      if (attribute.references.model instanceof Model) {","        attribute.references.model = attribute.references.model.tableName;","      }","    }","","    if (attribute.type === undefined) {","      throw new Error('Unrecognized data type for field ' + name);","    }","","    return attribute;","  }.bind(this));","};","","Object.defineProperty(Model.prototype, 'QueryInterface', {","  get: function() {","    return this.modelManager.sequelize.getQueryInterface();","  }","});","","Object.defineProperty(Model.prototype, 'QueryGenerator', {","  get: function() {","    return this.QueryInterface.QueryGenerator;","  }","});","","Model.prototype.toString = function () {","  return '[object SequelizeModel:'+this.name+']';","};","","// private","","// validateIncludedElements should have been called before this method","var paranoidClause = function(model, options) {","  options = options || {};","","  // Apply on each include","  // This should be handled before handling where conditions because of logic with returns","  // otherwise this code will never run on includes of a already conditionable where","  if (options.include) {","    options.include.forEach(function(include) {","      paranoidClause(include.model, include);","    });","  }","","  // apply paranoid when groupedLimit is used","  if (_.get(options, 'groupedLimit.on.options.paranoid')) {","    var throughModel = _.get(options, 'groupedLimit.on.through.model');","    if (throughModel) {","      options.groupedLimit.through = paranoidClause(throughModel, options.groupedLimit.through);","    }","  }","","  if (!model.options.timestamps || !model.options.paranoid || options.paranoid === false) {","    // This model is not paranoid, nothing to do here;","    return options;","  }","","  var deletedAtCol = model._timestampAttributes.deletedAt","    , deletedAtAttribute = model.rawAttributes[deletedAtCol]","    , deletedAtObject = {}","    , deletedAtDefaultValue = deletedAtAttribute.hasOwnProperty('defaultValue') ? deletedAtAttribute.defaultValue : null;","","  deletedAtObject[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;","","  if (Utils._.isEmpty(options.where)) {","    options.where = deletedAtObject;","  } else {","    options.where = { $and: [deletedAtObject, options.where] };","  }","","  return options;","};","","var addOptionalClassMethods = function() {","  var self = this;","  Utils._.each(this.options.classMethods || {}, function(fct, name) { self[name] = fct; });","};","","var addDefaultAttributes = function() {","  var self = this","    , tail = {}","    , head = {};","","  // Add id if no primary key was manually added to definition","  // Can't use this.primaryKeys here, since this function is called before PKs are identified","  if (!_.some(this.rawAttributes, 'primaryKey')) {","    if ('id' in this.rawAttributes) {","      // Something is fishy here!","      throw new Error(\"A column called 'id' was added to the attributes of '\" + this.tableName + \"' but not marked with 'primaryKey: true'\");","    }","","    head = {","      id: {","        type: new DataTypes.INTEGER(),","        allowNull: false,","        primaryKey: true,","        autoIncrement: true,","        _autoGenerated: true","      }","    };","  }","","  if (this._timestampAttributes.createdAt) {","    tail[this._timestampAttributes.createdAt] = {","      type: DataTypes.DATE,","      allowNull: false,","      _autoGenerated: true","    };","  }","  if (this._timestampAttributes.updatedAt) {","    tail[this._timestampAttributes.updatedAt] = {","      type: DataTypes.DATE,","      allowNull: false,","      _autoGenerated: true","    };","  }","  if (this._timestampAttributes.deletedAt) {","    tail[this._timestampAttributes.deletedAt] = {","      type: DataTypes.DATE,","      _autoGenerated: true","    };","  }","","  var existingAttributes = Utils._.clone(self.rawAttributes);","  self.rawAttributes = {};","","  Utils._.each(head, function(value, attr) {","    self.rawAttributes[attr] = value;","  });","","  Utils._.each(existingAttributes, function(value, attr) {","    self.rawAttributes[attr] = value;","  });","","  Utils._.each(tail, function(value, attr) {","    if (Utils._.isUndefined(self.rawAttributes[attr])) {","      self.rawAttributes[attr] = value;","    }","  });","","  if (!Object.keys(this.primaryKeys).length) {","    self.primaryKeys.id = self.rawAttributes.id;","  }","};","","var findAutoIncrementField = function() {","  var fields = this.QueryGenerator.findAutoIncrementField(this);","","  this.autoIncrementField = null;","","  fields.forEach(function(field) {","    if (this.autoIncrementField) {","      throw new Error('Invalid Instance definition. Only one autoincrement field allowed.');","    } else {","      this.autoIncrementField = field;","    }","  }.bind(this));","};","","function conformOptions(options, self) {","  if (self) {","    self.$expandAttributes(options);","  }","","  if (!options.include) {","    return;","  }","  // if include is not an array, wrap in an array","  if (!Array.isArray(options.include)) {","    options.include = [options.include];","  } else if (!options.include.length) {","    delete options.include;","    return;","  }","","  // convert all included elements to { model: Model } form","  options.include = options.include.map(function(include) {","    include = conformInclude(include, self);","","    return include;","  });","}","","Model.$conformOptions = conformOptions;","","function conformInclude(include, self) {","  var model;","","  if (include._pseudo) return include;","","  if (include instanceof Association) {","    if (self && include.target.name === self.name) {","      model = include.source;","    } else {","      model = include.target;","    }","","    include = { model: model, association: include, as: include.as };","  } else if (include instanceof Model) {","    include = { model: include };","  } else if (_.isPlainObject(include)) {","    if (include.association) {","      if (self && include.association.target.name === self.name) {","        model = include.association.source;","      } else {","        model = include.association.target;","      }","","      if (!include.model) {","        include.model = model;","      }","      if (!include.as) {","        include.as = include.association.as;","      }","    } else {","      model = include.model;","    }","","    conformOptions(include, model);","  } else {","    throw new Error('Include unexpected. Element has to be either a Model, an Association or an object.');","  }","","  return include;","}","","Model.$conformInclude = conformInclude;","","var expandIncludeAllElement = function(includes, include) {","  // check 'all' attribute provided is valid","  var all = include.all;","  delete include.all;","","  if (all !== true) {","    if (!Array.isArray(all)) {","      all = [all];","    }","","    var validTypes = {","      BelongsTo: true,","      HasOne: true,","      HasMany: true,","      One: ['BelongsTo', 'HasOne'],","      Has: ['HasOne', 'HasMany'],","      Many: ['HasMany']","    };","","    for (var i = 0; i < all.length; i++) {","      var type = all[i];","      if (type === 'All') {","        all = true;","        break;","      }","","      var types = validTypes[type];","      if (!types) {","        throw new Error('include all \\'' + type + '\\' is not valid - must be BelongsTo, HasOne, HasMany, One, Has, Many or All');","      }","","      if (types !== true) {","        // replace type placeholder e.g. 'One' with it's constituent types e.g. 'HasOne', 'BelongsTo'","        all.splice(i, 1);","        i--;","        for (var j = 0; j < types.length; j++) {","          if (all.indexOf(types[j]) === -1) {","            all.unshift(types[j]);","            i++;","          }","        }","      }","    }","  }","","  // add all associations of types specified to includes","  var nested = include.nested;","  if (nested) {","    delete include.nested;","","    if (!include.include) {","      include.include = [];","    } else if (!Array.isArray(include.include)) {","      include.include = [include.include];","    }","  }","","  var used = [];","  (function addAllIncludes(parent, includes) {","    Utils._.forEach(parent.associations, function(association) {","      if (all !== true && all.indexOf(association.associationType) === -1) {","        return;","      }","","      // check if model already included, and skip if so","      var model = association.target;","      var as = association.options.as;","","      var predicate = {model: model};","      if (as) {","        // We only add 'as' to the predicate if it actually exists","        predicate.as = as;","      }","","      if (Utils._.find(includes, predicate)) {","        return;","      }","","      // skip if recursing over a model already nested","      if (nested && used.indexOf(model) !== -1) {","        return;","      }","      used.push(parent);","","      // include this model","      var thisInclude = Utils.cloneDeep(include);","      thisInclude.model = model;","      if (as) {","        thisInclude.as = as;","      }","      includes.push(thisInclude);","","      // run recursively if nested","      if (nested) {","        addAllIncludes(model, thisInclude.include);","        if (thisInclude.include.length === 0) delete thisInclude.include;","      }","    });","    used.pop();","  })(this, includes);","};","","var validateIncludedElement;","var validateIncludedElements = function(options, tableNames) {","  if (!options.model) options.model = this;","","  tableNames = tableNames || {};","  options.includeNames = [];","  options.includeMap = {};","","  /* Legacy */","  options.hasSingleAssociation = false;","  options.hasMultiAssociation = false;","","  if (!options.parent) {","    options.topModel = options.model;","    options.topLimit = options.limit;","  }","","  options.include = options.include.map(function (include) {","    include = conformInclude(include);","    include.parent = options;","","    validateIncludedElement.call(options.model, include, tableNames, options);","","    if (include.duplicating === undefined) {","      include.duplicating = include.association.isMultiAssociation;","    }","","    include.hasDuplicating = include.hasDuplicating || include.duplicating;","    include.hasRequired = include.hasRequired || include.required;","","    options.hasDuplicating = options.hasDuplicating || include.hasDuplicating;","    options.hasRequired = options.hasRequired || include.required;","","    options.hasWhere = options.hasWhere || include.hasWhere || !!include.where;","    return include;","  });","","  options.include.forEach(function (include) {","    include.hasParentWhere = options.hasParentWhere || !!options.where;","    include.hasParentRequired = options.hasParentRequired || !!options.required;","","    if (include.subQuery !== false && options.hasDuplicating && options.topLimit) {","      if (include.duplicating) {","        include.subQuery = false;","        include.subQueryFilter = include.hasRequired;","      } else {","        include.subQuery = include.hasRequired;","        include.subQueryFilter = false;","      }","    } else {","      include.subQuery = include.subQuery || false;","      if (include.duplicating) {","        include.subQueryFilter = include.subQuery;","        include.subQuery = false;","      } else {","        include.subQueryFilter = false;","        include.subQuery = include.subQuery || (include.hasParentRequired && include.hasRequired);","      }","    }","","    options.includeMap[include.as] = include;","    options.includeNames.push(include.as);","","    // Set top level options","    if (options.topModel === options.model && options.subQuery === undefined && options.topLimit) {","      if (include.subQuery) {","        options.subQuery = include.subQuery;","      } else if (include.hasDuplicating) {","        options.subQuery = true;","      }","    }","","    /* Legacy */","    options.hasIncludeWhere = options.hasIncludeWhere || include.hasIncludeWhere || !!include.where;","    options.hasIncludeRequired = options.hasIncludeRequired || include.hasIncludeRequired || !!include.required;","","    if (include.association.isMultiAssociation || include.hasMultiAssociation) {","      options.hasMultiAssociation = true;","    }","    if (include.association.isSingleAssociation || include.hasSingleAssociation) {","      options.hasSingleAssociation = true;","    }","","    return include;","  });","","  if (options.topModel === options.model && options.subQuery === undefined) {","    options.subQuery = false;","  }","  return options;","};","Model.$validateIncludedElements = validateIncludedElements;","","validateIncludedElement = function(include, tableNames, options) {","  tableNames[include.model.getTableName()] = true;","","  if (include.attributes && !options.raw) {","    include.model.$expandAttributes(include);","","    // Need to make sure virtuals are mapped before setting originalAttributes","    include = Utils.mapFinderOptions(include, include.model);","","    include.originalAttributes = include.attributes.slice(0);","","    if (include.attributes.length) {","      _.each(include.model.primaryKeys, function (attr, key) {","        // Include the primary key if its not already take - take into account that the pk might be aliassed (due to a .field prop)","        if (!_.some(include.attributes, function (includeAttr) {","            if (attr.field !== key) {","              return Array.isArray(includeAttr) && includeAttr[0] === attr.field && includeAttr[1] === key;","            }","            return includeAttr === key;","          })) {","          include.attributes.unshift(key);","        }","      });","    }","  } else {","    include = Utils.mapFinderOptions(include, include.model);","  }","","  // pseudo include just needed the attribute logic, return","  if (include._pseudo) {","    include.attributes = Object.keys(include.model.tableAttributes);","    return Utils.mapFinderOptions(include, include.model);","  }","","  // check if the current Model is actually associated with the passed Model - or it's a pseudo include","  var association = include.association || this.getAssociation(include.model, include.as);","","  if (!association) {","    var msg = include.model.name;","","    if (include.as) {","      msg += ' (' + include.as + ')';","    }","","    msg += ' is not associated to ' + this.name + '!';","","    throw new Error(msg);","  }","","  include.association = association;","  include.as = association.as;","","  // If through, we create a pseudo child include, to ease our parsing later on","  if (include.association.through && Object(include.association.through.model) === include.association.through.model) {","    if (!include.include) include.include = [];","    var through = include.association.through;","","    include.through = Utils._.defaults(include.through || {}, {","      model: through.model,","      as: through.model.name,","      association: {","        isSingleAssociation: true","      },","      _pseudo: true,","      parent: include","    });","","","    if (through.scope) {","      include.through.where = include.through.where ? { $and: [include.through.where, through.scope]} :  through.scope;","    }","","    include.include.push(include.through);","    tableNames[through.tableName] = true;","  }","","  // include.model may be the main model, while the association target may be scoped - thus we need to look at association.target/source","  var model;","  if (include.model.scoped === true) {","    // If the passed model is already scoped, keep that","    model = include.model;","  } else {","    // Otherwise use the model that was originally passed to the association","    model = include.association.target.name === include.model.name ? include.association.target : include.association.source;","  }","","  model.$injectScope(include);","","  // This check should happen after injecting the scope, since the scope may contain a .attributes","  if (!include.attributes) {","    include.attributes = Object.keys(include.model.tableAttributes);","  }","","  include = Utils.mapFinderOptions(include, include.model);","","  if (include.required === undefined) {","    include.required = !!include.where;","  }","","  if (include.association.scope) {","    include.where = include.where ? { $and: [include.where, include.association.scope] }:  include.association.scope;","  }","","  if (include.limit && include.separate === undefined) {","    include.separate = true;","  }","","  if (include.separate === true && !(include.association instanceof HasMany)) {","    throw new Error('Only HasMany associations support include.separate');","  }","","  if (include.separate === true) {","    include.duplicating = false;","  }","","  if (include.separate === true && options.attributes && options.attributes.length && !_.includes(options.attributes, association.source.primaryKeyAttribute)) {","    options.attributes.push(association.source.primaryKeyAttribute);","  }","","  // Validate child includes","  if (include.hasOwnProperty('include')) {","    validateIncludedElements.call(include.model, include, tableNames, options);","  }","","  return include;","};","","var expandIncludeAll = Model.$expandIncludeAll = function(options) {","  var includes = options.include;","  if (!includes) {","    return;","  }",""," for (var index = 0; index < includes.length; index++) {","    var include = includes[index];","","    if (include.all) {","      includes.splice(index, 1);","      index--;","","      expandIncludeAllElement.call(this, includes, include);","    }","  }","","  Utils._.forEach(includes, function(include) {","    expandIncludeAll.call(include.model, include);","  });","};","","Model.prototype.init = function(modelManager) {","  var self = this;","","  this.modelManager = modelManager;","  this.primaryKeys = {};","","  // Setup names of timestamp attributes","  this._timestampAttributes = {};","  if (this.options.timestamps) {","    if (this.options.createdAt !== false) {","      this._timestampAttributes.createdAt = this.options.createdAt || Utils.underscoredIf('createdAt', this.options.underscored);","    }","    if (this.options.updatedAt !== false) {","      this._timestampAttributes.updatedAt = this.options.updatedAt || Utils.underscoredIf('updatedAt', this.options.underscored);","    }","    if (this.options.paranoid && this.options.deletedAt !== false) {","      this._timestampAttributes.deletedAt = this.options.deletedAt || Utils.underscoredIf('deletedAt', this.options.underscored);","    }","  }","","  // Add head and tail default attributes (id, timestamps)","  addOptionalClassMethods.call(this);","","  // Instance prototype","  this.Instance = function() {","    Instance.apply(this, arguments);","  };","","  Util.inherits(this.Instance, Instance);","","  this._readOnlyAttributes = Utils._.values(this._timestampAttributes);","  this._hasReadOnlyAttributes = this._readOnlyAttributes && this._readOnlyAttributes.length;","  this._isReadOnlyAttribute = Utils._.memoize(function(key) {","    return self._hasReadOnlyAttributes && self._readOnlyAttributes.indexOf(key) !== -1;","  });","","  if (this.options.instanceMethods) {","    Utils._.each(this.options.instanceMethods, function(fct, name) {","      self.Instance.prototype[name] = fct;","    });","  }","","  addDefaultAttributes.call(this);","  this.refreshAttributes();","","  findAutoIncrementField.call(this);","","  this.$scope = this.options.defaultScope;","","  if (_.isPlainObject(this.$scope)) {","    conformOptions(this.$scope, this);","  }","","  _.each(this.options.scopes, function (scope) {","    if (_.isPlainObject(scope)) {","      conformOptions(scope, this);","    }","  }.bind(this));","","  this.options.indexes = this.options.indexes.map(this.$conformIndex);","","  this.Instance.prototype.$Model =","  this.Instance.prototype.Model = this;","","  return this;","};","","Model.prototype.$conformIndex = function (index) {","  index = _.defaults(index, {","    type: '',","    parser: null","  });","","  if (index.type && index.type.toLowerCase() === 'unique') {","    index.unique = true;","    delete index.type;","  }","  return index;","};","","Model.prototype.refreshAttributes = function() {","  var self = this","    , attributeManipulation = {};","","  this.Instance.prototype._customGetters = {};","  this.Instance.prototype._customSetters = {};","","  Utils._.each(['get', 'set'], function(type) {","    var opt = type + 'terMethods'","      , funcs = Utils._.clone(Utils._.isObject(self.options[opt]) ? self.options[opt] : {})","      , _custom = type === 'get' ? self.Instance.prototype._customGetters : self.Instance.prototype._customSetters;","","    Utils._.each(funcs, function(method, attribute) {","      _custom[attribute] = method;","","      if (type === 'get') {","        funcs[attribute] = function() {","          return this.get(attribute);","        };","      }","      if (type === 'set') {","        funcs[attribute] = function(value) {","          return this.set(attribute, value);","        };","      }","    });","","    Utils._.each(self.rawAttributes, function(options, attribute) {","      if (options.hasOwnProperty(type)) {","        _custom[attribute] = options[type];","      }","","      if (type === 'get') {","        funcs[attribute] = function() {","          return this.get(attribute);","        };","      }","      if (type === 'set') {","        funcs[attribute] = function(value) {","          return this.set(attribute, value);","        };","      }","    });","","    Utils._.each(funcs, function(fct, name) {","      if (!attributeManipulation[name]) {","        attributeManipulation[name] = {","          configurable: true","        };","      }","      attributeManipulation[name][type] = fct;","    });","  });","","  this._booleanAttributes = [];","  this._dateAttributes = [];","  this._hstoreAttributes = [];","  this._rangeAttributes = [];","  this._jsonAttributes = [];","  this._geometryAttributes = [];","  this._virtualAttributes = [];","  this._defaultValues = {};","  this.Instance.prototype.validators = {};","","  this.fieldRawAttributesMap = {};","","  this.primaryKeys = {};","  self.options.uniqueKeys = {};","","  _.each(this.rawAttributes, function(definition, name) {","    definition.type = self.sequelize.normalizeDataType(definition.type);","","    definition.Model = self;","    definition.fieldName = name;","    definition._modelAttribute = true;","","    if (definition.field === undefined) {","      definition.field = name;","    }","","    if (definition.primaryKey === true) {","      self.primaryKeys[name] = definition;","    }","","    self.fieldRawAttributesMap[definition.field] = definition;","","    if (definition.type instanceof DataTypes.BOOLEAN) {","      self._booleanAttributes.push(name);","    } else if (definition.type instanceof DataTypes.DATE) {","      self._dateAttributes.push(name);","    } else if (definition.type instanceof DataTypes.HSTORE || DataTypes.ARRAY.is(definition.type, DataTypes.HSTORE)) {","      self._hstoreAttributes.push(name);","    } else if (definition.type instanceof DataTypes.RANGE || DataTypes.ARRAY.is(definition.type, DataTypes.RANGE)) {","      self._rangeAttributes.push(name);","    } else if (definition.type instanceof DataTypes.JSON) {","      self._jsonAttributes.push(name);","    } else if (definition.type instanceof DataTypes.VIRTUAL) {","      self._virtualAttributes.push(name);","    } else if (definition.type instanceof DataTypes.GEOMETRY) {","      self._geometryAttributes.push(name);","    }","","    if (definition.hasOwnProperty('defaultValue')) {","      self._defaultValues[name] = Utils._.partial(Utils.toDefaultValue, definition.defaultValue);","    }","","    if (definition.hasOwnProperty('unique') && definition.unique !== false) {","      var idxName;","      if (typeof definition.unique === 'object' && definition.unique.hasOwnProperty('name')) {","        idxName = definition.unique.name;","      } else if (typeof definition.unique === 'string') {","        idxName = definition.unique;","      } else {","        idxName = self.tableName + '_' + name + '_unique';","      }","","      var idx = self.options.uniqueKeys[idxName] || { fields: [] };","      idx = idx || {fields: [], msg: null};","      idx.fields.push(definition.field);","      idx.msg = idx.msg || definition.unique.msg || null;","      idx.name = idxName || false;","      idx.column = name;","","      self.options.uniqueKeys[idxName] = idx;","    }","","    if (definition.hasOwnProperty('validate')) {","      self.Instance.prototype.validators[name] = definition.validate;","    }","","    if (definition.index === true && definition.type instanceof DataTypes.JSONB) {","      self.options.indexes.push({","        fields: [definition.field || name],","        using: 'gin'","      });","","      delete definition.index;","    }","  });","  // Create a map of field to attribute names","  this.fieldAttributeMap = Utils._.reduce(this.fieldRawAttributesMap, function(map, value, key) {","    if (key !== value.fieldName) {","      map[key] = value.fieldName;","    }","    return map;","  }, {});","","  this.uniqueKeys = this.options.uniqueKeys;","","  this._hasBooleanAttributes = !!this._booleanAttributes.length;","  this._isBooleanAttribute = Utils._.memoize(function(key) {","    return self._booleanAttributes.indexOf(key) !== -1;","  });","","  this._hasDateAttributes = !!this._dateAttributes.length;","  this._isDateAttribute = Utils._.memoize(function(key) {","    return self._dateAttributes.indexOf(key) !== -1;","  });","","  this._hasHstoreAttributes = !!this._hstoreAttributes.length;","  this._isHstoreAttribute = Utils._.memoize(function(key) {","    return self._hstoreAttributes.indexOf(key) !== -1;","  });","","  this._hasRangeAttributes = !!this._rangeAttributes.length;","  this._isRangeAttribute = Utils._.memoize(function(key) {","    return self._rangeAttributes.indexOf(key) !== -1;","  });","","  this._hasJsonAttributes = !!this._jsonAttributes.length;","  this._isJsonAttribute = Utils._.memoize(function(key) {","    return self._jsonAttributes.indexOf(key) !== -1;","  });","","  this._hasVirtualAttributes = !!this._virtualAttributes.length;","  this._isVirtualAttribute = Utils._.memoize(function(key) {","    return self._virtualAttributes.indexOf(key) !== -1;","  });","","  this._hasGeometryAttributes = !!this._geometryAttributes.length;","  this._isGeometryAttribute = Utils._.memoize(function(key) {","    return self._geometryAttributes.indexOf(key) !== -1;","  });","","  this._hasDefaultValues = !Utils._.isEmpty(this._defaultValues);","","  this.attributes = this.rawAttributes;","  this.tableAttributes = Utils._.omit(this.rawAttributes, this._virtualAttributes);","","  this.Instance.prototype._hasCustomGetters = Object.keys(this.Instance.prototype._customGetters).length;","  this.Instance.prototype._hasCustomSetters = Object.keys(this.Instance.prototype._customSetters).length;","","  Object.keys(attributeManipulation).forEach((function(key){","    if (Instance.prototype.hasOwnProperty(key)) {","      this.sequelize.log(\"Not overriding built-in method from model attribute: \" + key);","      return;","    }","    Object.defineProperty(this.Instance.prototype, key, attributeManipulation[key]);","  }).bind(this));","","","  this.Instance.prototype.rawAttributes = this.rawAttributes;","  this.Instance.prototype.attributes = Object.keys(this.Instance.prototype.rawAttributes);","  this.Instance.prototype._isAttribute = Utils._.memoize(function(key) {","    return self.Instance.prototype.attributes.indexOf(key) !== -1;","  });","","  // Primary key convenience variables","  this.primaryKeyAttributes = Object.keys(this.primaryKeys);","  this.primaryKeyAttribute = this.primaryKeyAttributes[0];","  if (this.primaryKeyAttribute) {","    this.primaryKeyField = this.rawAttributes[this.primaryKeyAttribute].field || this.primaryKeyAttribute;","  }","","  this.primaryKeyCount = this.primaryKeyAttributes.length;","  this._hasPrimaryKeys = this.options.hasPrimaryKeys = this.hasPrimaryKeys = this.primaryKeyCount > 0;","","  this._isPrimaryKey = Utils._.memoize(function(key) {","    return self.primaryKeyAttributes.indexOf(key) !== -1;","  });","","};","","/**"," * Remove attribute from model definition"," * @param {String} [attribute]"," */","Model.prototype.removeAttribute = function(attribute) {","  delete this.rawAttributes[attribute];","  this.refreshAttributes();","};","","/**"," * Sync this Model to the DB, that is create the table. Upon success, the callback will be called with the model instance (this)"," * @see {Sequelize#sync} for options"," * @return {Promise<this>}"," */","Model.prototype.sync = function(options) {","  options = _.extend({}, this.options, options);","  options.hooks = options.hooks === undefined ? true : !!options.hooks;","","  var self = this","    , attributes = this.tableAttributes;","","  return Promise.try(function () {","    if (options.hooks) {","      return self.runHooks('beforeSync', options);","    }","  }).then(function () {","    if (options.force) {","      return self.drop(options);","    }","  }).then(function () {","    return self.QueryInterface.createTable(self.getTableName(options), attributes, options, self);","  }).then(function () {","    return self.QueryInterface.showIndex(self.getTableName(options), options);","  }).then(function (indexes) {","    // Assign an auto-generated name to indexes which are not named by the user","    self.options.indexes = self.QueryInterface.nameIndexes(self.options.indexes, self.tableName);","","    indexes = _.filter(self.options.indexes, function (item1) {","      return !_.some(indexes, function (item2) {","        return item1.name === item2.name;","      });","    });","","    return Promise.map(indexes, function (index) {","      return self.QueryInterface.addIndex(","                self.getTableName(options),","                _.assign({logging: options.logging,","                          benchmark: options.benchmark,","                          transaction: options.transaction}, index),","                self.tableName);","    });","  }).then(function () {","    if (options.hooks) {","      return self.runHooks('afterSync', options);","    }","  }).return(this);","};","","/**"," * Drop the table represented by this Model"," * @param {Object}   [options]"," * @param {Boolean}  [options.cascade=false]   Also drop all objects depending on this table, such as views. Only works in postgres"," * @param {Function} [options.logging=false]   A function that gets executed while running the query to log the sql."," * @param {Boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @return {Promise}"," */","Model.prototype.drop = function(options) {","  return this.QueryInterface.dropTable(this.getTableName(options), options);","};","","Model.prototype.dropSchema = function(schema) {","  return this.QueryInterface.dropSchema(schema);","};","","/**"," * Apply a schema to this model. For postgres, this will actually place the schema in front of the table name - `\"schema\".\"tableName\"`,"," * while the schema will be prepended to the table name for mysql and sqlite - `'schema.tablename'`."," *"," * @param {String} schema The name of the schema"," * @param {Object} [options]"," * @param {String} [options.schemaDelimiter='.'] The character(s) that separates the schema name from the table name"," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @return {this}"," */","Model.prototype.schema = function(schema, options) { // testhint options:none","  var self = this;","  var clone = Object.create(self);","","  clone.$schema = schema;","","  if (!!options) {","    if (typeof options === 'string') {","      clone.$schemaDelimiter = options;","    } else {","      if (!!options.schemaDelimiter) {","        clone.$schemaDelimiter = options.schemaDelimiter;","      }","    }","  }","","  clone.Instance = function() {","    self.Instance.apply(this, arguments);","  };","  clone.Instance.prototype = Object.create(self.Instance.prototype);","  clone.Instance.prototype.$Model = clone;","","  return clone;","};","","/**"," * Get the tablename of the model, taking schema into account. The method will return The name as a string if the model has no schema,"," * or an object with `tableName`, `schema` and `delimiter` properties."," *"," * @param {Object}   [options] The hash of options from any query. You can use one model to access tables with matching schemas by overriding `getTableName` and using custom key/values to alter the name of the table. (eg. subscribers_1, subscribers_2)"," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @return {String|Object}"," */","Model.prototype.getTableName = function(options) { // testhint options:none","  return this.QueryGenerator.addSchema(this);","};","","/**"," * @return {Model}"," */","Model.prototype.unscoped = function () {","  return this.scope();","};","","/**"," * Add a new scope to the model. This is especially useful for adding scopes with includes, when the model you want to include is not available at the time this model is defined."," *"," * By default this will throw an error if a scope with that name already exists. Pass `override: true` in the options object to silence this error."," *"," * @param {String}          name The name of the scope. Use `defaultScope` to override the default scope"," * @param {Object|Function} scope"," * @param {Object}          [options]"," * @param {Boolean}         [options.override=false]"," */","Model.prototype.addScope = function (name, scope, options) {","  options = _.assign({","    override: false","  }, options);","","  if ((name === 'defaultScope' || name in this.options.scopes) && options.override === false) {","    throw new Error('The scope ' + name + ' already exists. Pass { override: true } as options to silence this error');","  }","","  conformOptions(scope, this);","","  if (name === 'defaultScope') {","    this.options.defaultScope = this.$scope = scope;","  } else {","    this.options.scopes[name] = scope;","  }","};","","/**"," * Apply a scope created in `define` to the model. First let's look at how to create scopes:"," * ```js"," * var Model = sequelize.define('model', attributes, {"," *   defaultScope: {"," *     where: {"," *       username: 'dan'"," *     },"," *     limit: 12"," *   },"," *   scopes: {"," *     isALie: {"," *       where: {"," *         stuff: 'cake'"," *       }"," *     },"," *     complexFunction: function(email, accessLevel) {"," *       return {"," *         where: {"," *           email: {"," *             $like: email"," *           },"," *           accesss_level {"," *             $gte: accessLevel"," *           }"," *         }"," *       }"," *     }"," *   }"," * })"," * ```"," * Now, since you defined a default scope, every time you do Model.find, the default scope is appended to your query. Here's a couple of examples:"," * ```js"," * Model.findAll() // WHERE username = 'dan'"," * Model.findAll({ where: { age: { gt: 12 } } }) // WHERE age > 12 AND username = 'dan'"," * ```"," *"," * To invoke scope functions you can do:"," * ```js"," * Model.scope({ method: ['complexFunction' 'dan@sequelize.com', 42]}).findAll()"," * // WHERE email like 'dan@sequelize.com%' AND access_level >= 42"," * ```"," *"," * @param {Array|Object|String|null}    options* The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a `method` property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default."," * @return {Model}                      A reference to the model, with the scope(s) applied. Calling scope again on the returned model will clear the previous scope."," */","Model.prototype.scope = function(option) {","  var self = Object.create(this)","    , options","    , scope","    , scopeName;","","  self.$scope = {};","  self.scoped = true;","","  if (!option) {","    return self;","  }","","  options = _.flatten(arguments);","  options.forEach(function(option) {","    scope = null;","    scopeName = null;","","    if (_.isPlainObject(option)) {","      if (!!option.method) {","        if (Array.isArray(option.method) && !!self.options.scopes[option.method[0]]) {","          scopeName = option.method[0];","          scope = self.options.scopes[scopeName].apply(self, option.method.splice(1));","        }","        else if (!!self.options.scopes[option.method]) {","          scopeName = option.method;","          scope = self.options.scopes[scopeName].apply(self);","        }","      } else {","        scope = option;","      }","    } else {","      if (option === 'defaultScope' && _.isPlainObject(self.options.defaultScope)) {","        scope = self.options.defaultScope;","      } else {","        scopeName = option;","        scope = self.options.scopes[scopeName];","","        if (_.isFunction(scope)) {","          scope = scope();","          conformOptions(scope, self);","        }","      }","    }","","    if (!!scope) {","      _.assignWith(self.$scope, scope, function scopeCustomizer(objectValue, sourceValue, key) {","        if (key === 'where') {","          return Array.isArray(sourceValue) ? sourceValue : _.assign(objectValue || {}, sourceValue);","        } else if ( (['attributes','include'].indexOf(key) >= 0) && Array.isArray(objectValue) && Array.isArray(sourceValue)) {","          return objectValue.concat(sourceValue);","        }","","        return objectValue ? objectValue : sourceValue;","      });","    } else {","      throw new Error('Invalid scope ' + scopeName + ' called.');","    }","  });","","  return self;","};","","Model.prototype.all = function(options) {","  return this.findAll(options);","};","","/**"," * Search for multiple instances."," *"," * __Simple search using AND and =__"," * ```js"," * Model.findAll({"," *   where: {"," *     attr1: 42,"," *     attr2: 'cake'"," *   }"," * })"," * ```"," * ```sql"," * WHERE attr1 = 42 AND attr2 = 'cake'"," *```"," *"," * __Using greater than, less than etc.__"," * ```js"," *"," * Model.findAll({"," *   where: {"," *     attr1: {"," *       gt: 50"," *     },"," *     attr2: {"," *       lte: 45"," *     },"," *     attr3: {"," *       in: [1,2,3]"," *     },"," *     attr4: {"," *       ne: 5"," *     }"," *   }"," * })"," * ```"," * ```sql"," * WHERE attr1 > 50 AND attr2 <= 45 AND attr3 IN (1,2,3) AND attr4 != 5"," * ```"," * Possible options are: `$ne, $in, $not, $notIn, $gte, $gt, $lte, $lt, $like, $ilike/$iLike, $notLike, $notILike, '..'/$between, '!..'/$notBetween, '&&'/$overlap, '@>'/$contains, '<@'/$contained`"," *"," * __Queries using OR__"," * ```js"," * Model.findAll({"," *   where: {"," *     name: 'a project',"," *     $or: ["," *       {id: [1, 2, 3]},"," *       {"," *         $and: ["," *           {id: {gt: 10}},"," *           {id: {lt: 100}}"," *         ]"," *       }"," *     ]"," *   }"," * });"," * ```"," * ```sql"," * WHERE `Model`.`name` = 'a project' AND (`Model`.`id` IN (1, 2, 3) OR (`Model`.`id` > 10 AND `Model`.`id` < 100));"," * ```"," *"," * The success listener is called with an array of instances if the query succeeds."," *"," * @param  {Object}                    [options] A hash of options to describe the scope of the search"," * @param  {Object}                    [options.where] A hash of attributes to describe your search. See above for examples."," * @param  {Array<String>|Object}      [options.attributes] A list of the attributes that you want to select, or an object with `include` and `exclude` keys. To rename an attribute, you can pass an array, with two elements - the first is the name of the attribute in the DB (or some kind of expression such as `Sequelize.literal`, `Sequelize.fn` and so on), and the second is the name you want the attribute to have in the returned instance"," * @param  {Array<String>}             [options.attributes.include] Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. `{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }`"," * @param  {Array<String>}             [options.attributes.exclude] Select all the attributes of the model, except some few. Useful for security purposes e.g. `{ attributes: { exclude: ['password'] } }`"," * @param  {Boolean}                   [options.paranoid=true] If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if `options.paranoid` is true for the model."," * @param  {Array<Object|Model>}       [options.include] A list of associations to eagerly load using a left join. Supported is either `{ include: [ Model1, Model2, ...]}` or `{ include: [{ model: Model1, as: 'Alias' }]}`. If your association are set up with an `as` (eg. `X.hasMany(Y, { as: 'Z }`, you need to specify Z in the as attribute when eager loading Y)."," * @param  {Model}                     [options.include[].model] The model you want to eagerly load"," * @param  {String}                    [options.include[].as] The alias of the relation, in case the model you want to eagerly load is aliased. For `hasOne` / `belongsTo`, this should be the singular name, and for `hasMany`, it should be the plural"," * @param  {Association}               [options.include[].association] The association you want to eagerly load. (This can be used instead of providing a model/as pair)"," * @param  {Object}                    [options.include[].where] Where clauses to apply to the child models. Note that this converts the eager load to an inner join, unless you explicitly set `required: false`"," * @param  {Boolean}                   [options.include[].or=false] Whether to bind the ON and WHERE clause together by OR instead of AND."," * @param  {Object}                    [options.include[].on] Supply your own ON condition for the join."," * @param  {Array<String>}             [options.include[].attributes] A list of attributes to select from the child model"," * @param  {Boolean}                   [options.include[].required] If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if `include.where` is set, false otherwise."," * @param  {Boolean}                   [options.include[].separate] If true, runs a separate query to fetch the associated instances, only supported for hasMany associations"," * @param  {Number}                    [options.include[].limit] Limit the joined rows, only supported with include.separate=true"," * @param  {Object}                    [options.include[].through.where] Filter on the join model for belongsToMany relations"," * @param  {Array}                     [options.include[].through.attributes] A list of attributes to select from the join model for belongsToMany relations"," * @param  {Array<Object|Model>}       [options.include[].include] Load further nested related models"," * @param  {String|Array|Sequelize.fn} [options.order] Specifies an ordering. If a string is provided, it will be escaped. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: `order: [['name', 'DESC']]`. In this way the column will be escaped, but the direction will not."," * @param  {Number}                    [options.limit]"," * @param  {Number}                    [options.offset]"," * @param  {Transaction}               [options.transaction] Transaction to run query under"," * @param  {String|Object}             [options.lock] Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins. See [transaction.LOCK for an example](transaction#lock)"," * @param  {Boolean}                   [options.raw] Return raw result. See sequelize.query for more information."," * @param  {Function}                  [options.logging=false] A function that gets executed while running the query to log the sql."," * @param  {Boolean}                   [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param  {Object}                    [options.having]"," * @param  {String}                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," * @param  {Boolean|Error Instance}    [options.rejectOnEmpty=false] Throws an error when no records found"," *"," * @see    {Sequelize#query}"," * @return {Promise<Array<Instance>>}"," * @alias all"," */","","Model.prototype.findAll = function(options) {","  if (options !== undefined && !_.isPlainObject(options)) {","    throw new Error('The argument passed to findAll must be an options object, use findById if you wish to pass a single primary key value');","  }","  // TODO: Remove this in the next major version (4.0)","  if (arguments.length > 1) {","    throw new Error('Please note that find* was refactored and uses only one options object from now on.');","  }","  var tableNames = {}","    , originalOptions;","","  tableNames[this.getTableName(options)] = true;","  options = Utils.cloneDeep(options);","","  _.defaults(options, { hooks: true, rejectOnEmpty: this.options.rejectOnEmpty });","","    //set rejectOnEmpty option from model config","    options.rejectOnEmpty = options.rejectOnEmpty || this.options.rejectOnEmpty;","","  return Promise.bind(this).then(function() {","    conformOptions(options, this);","    this.$injectScope(options);","","    if (options.hooks) {","      return this.runHooks('beforeFind', options);","    }","  }).then(function() {","    expandIncludeAll.call(this, options);","","    if (options.hooks) {","      return this.runHooks('beforeFindAfterExpandIncludeAll', options);","    }","  }).then(function() {","    if (options.include) {","      options.hasJoin = true;","","      validateIncludedElements.call(this, options, tableNames);","","      // If we're not raw, we have to make sure we include the primary key for deduplication","      if (options.attributes && !options.raw && this.primaryKeyAttribute &&  options.attributes.indexOf(this.primaryKeyAttribute) === -1) {","        options.originalAttributes = options.attributes;","        options.attributes = [this.primaryKeyAttribute].concat(options.attributes);","      }","    }","","    if (!options.attributes) {","      options.attributes = Object.keys(this.tableAttributes);","    }","","    // whereCollection is used for non-primary key updates","    this.options.whereCollection = options.where || null;","","    Utils.mapFinderOptions(options, this);","","    options = paranoidClause(this, options);","","    if (options.hooks) {","      return this.runHooks('beforeFindAfterOptions', options);","    }","  }).then(function() {","    originalOptions = Utils.cloneDeep(options);","    options.tableNames = Object.keys(tableNames);","    return this.QueryInterface.select(this, this.getTableName(options), options);","  }).tap(function(results) {","    if (options.hooks) {","      return this.runHooks('afterFind', results, options);","    }","  }).then(function (results) {","","    //rejectOnEmpty mode","    if (_.isEmpty(results) && options.rejectOnEmpty) {","      if (typeof options.rejectOnEmpty === 'function') {","        throw new options.rejectOnEmpty();","      } else if (typeof options.rejectOnEmpty === 'object') {","        throw options.rejectOnEmpty;","      } else {","        throw new sequelizeErrors.EmptyResultError();","      }","    }","","    return Model.$findSeparate(results, originalOptions);","  });","};","","Model.$findSeparate = function(results, options) {","  if (!options.include || options.raw || !results) return Promise.resolve(results);","","  var original = results;","  if (options.plain) results = [results];","","  if (!results.length) return original;","","  return Promise.map(options.include, function (include) {","    if (!include.separate) {","      return Model.$findSeparate(","        results.reduce(function (memo, result) {","          var associations = result.get(include.association.as);","","          // Might be an empty belongsTo relation","          if (!associations) return memo;","","          // Force array so we can concat no matter if it's 1:1 or :M","          if (!Array.isArray(associations)) associations = [associations];","","          return memo.concat(associations);","        }, []),","        _.assign(","          {},","          _.omit(options, 'include', 'attributes', 'order', 'where', 'limit', 'plain', 'scope'),","          {include: include.include || []}","        )","      );","    }","","    return include.association.get(results, _.assign(","      {},","      _.omit(options, 'include', 'attributes', 'order', 'where', 'limit', 'plain'),","      _.omit(include, 'parent', 'association', 'as')","    )).then(function (map) {","      results.forEach(function (result) {","        result.set(","          include.association.as,","          map[result.get(include.association.source.primaryKeyAttribute)],","          {","            raw: true","          }","        );","      });","    });","  }).return(original);","};","","/**","* Search for a single instance by its primary key.","*","* @param  {Number|String|Buffer}      id The value of the desired instance's primary key.","* @param  {Object}                    [options]","* @param  {Transaction}               [options.transaction] Transaction to run query under","* @param  {String}                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)","*","* @see {Model#findAll}           for a full explanation of options","* @return {Promise<Instance>}","* @alias findByPrimary","*/","Model.prototype.findById = function(param, options) {","  // return Promise resolved with null if no arguments are passed","  if ([null, undefined].indexOf(param) !== -1) {","    return Promise.resolve(null);","  }","","  options = Utils.cloneDeep(options) || {};","","  if (typeof param === 'number' || typeof param === 'string' || Buffer.isBuffer(param)) {","    options.where = {};","    options.where[this.primaryKeyAttribute] = param;","  } else {","    throw new Error('Argument passed to findById is invalid: '+param);","  }","","  // Bypass a possible overloaded findOne","  return Model.prototype.findOne.call(this, options);","};","Model.prototype.findByPrimary = Model.prototype.findById;","","/**","* Search for a single instance. This applies LIMIT 1, so the listener will always be called with a single instance.","*","* @param  {Object}                    [options] A hash of options to describe the scope of the search","* @param  {Transaction}               [options.transaction] Transaction to run query under","* @param  {String}                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)","*","* @see {Model#findAll}           for an explanation of options","* @return {Promise<Instance>}","* @alias find","*/","Model.prototype.findOne = function(options) {","  if (options !== undefined && !_.isPlainObject(options)) {","    throw new Error('The argument passed to findOne must be an options object, use findById if you wish to pass a single primary key value');","  }","  options = Utils.cloneDeep(options);","","  if (options.limit === undefined) {","    var pkVal = options.where && options.where[this.primaryKeyAttribute];","","    // Don't add limit if querying directly on the pk","    if (!options.where || !(Utils.isPrimitive(pkVal) || Buffer.isBuffer(pkVal))) {","      options.limit = 1;","    }","  }","","  // Bypass a possible overloaded findAll.","  return Model.prototype.findAll.call(this, _.defaults(options, {","    plain: true,","    rejectOnEmpty: false","  }));","};","Model.prototype.find = Model.prototype.findOne;","","/**"," * Run an aggregation method on the specified field"," *"," * @param {String}          field The field to aggregate over. Can be a field name or *"," * @param {String}          aggregateFunction The function to use for aggregation, e.g. sum, max etc."," * @param {Object}          [options] Query options. See sequelize.query for full options"," * @param {Object}          [options.where] A hash of search attributes."," * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}         [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param {DataType|String} [options.dataType] The type of the result. If `field` is a field in this Model, the default will be the type of that field, otherwise defaults to float."," * @param {boolean}         [options.distinct] Applies DISTINCT to the field being aggregated over"," * @param {Transaction}     [options.transaction] Transaction to run query under"," * @param {Boolean}         [options.plain] When `true`, the first returned value of `aggregateFunction` is cast to `dataType` and returned. If additional attributes are specified, along with `group` clauses, set `plain` to `false` to return all values of all returned rows.  Defaults to `true`"," *"," * @return {Promise<options.dataType|object>}                Returns the aggregate result cast to `options.dataType`, unless `options.plain` is false, in which case the complete data result is returned."," */","Model.prototype.aggregate = function(attribute, aggregateFunction, options) {","  options = Utils.cloneDeep(options);","  options = _.defaults(options, { attributes: [] });","  conformOptions(options, this);","  this.$injectScope(options);","","  if (options.include) {","    expandIncludeAll.call(this, options);","    validateIncludedElements.call(this, options);","  }","","  var attrOptions = this.rawAttributes[attribute]","    , field = attrOptions && attrOptions.field || attribute","    , aggregateColumn = this.sequelize.col(field);","","  if (options.distinct) {","    aggregateColumn = this.sequelize.fn('DISTINCT', aggregateColumn);","  }","  options.attributes.push([this.sequelize.fn(aggregateFunction, aggregateColumn), aggregateFunction]);","","  if (!options.dataType) {","    if (attrOptions) {","      options.dataType = attrOptions.type;","    } else {","      // Use FLOAT as fallback","      options.dataType = new DataTypes.FLOAT();","    }","  } else {","    options.dataType = this.sequelize.normalizeDataType(options.dataType);","  }","","  Utils.mapOptionFieldNames(options, this);","  options = paranoidClause(this, options);","","  return this.QueryInterface.rawSelect(this.getTableName(options), options, aggregateFunction, this);","};","","/**"," * Count the number of records matching the provided where clause."," *"," * If you provide an `include` option, the number of matching associations will be counted instead."," *"," * @param {Object}        [options]"," * @param {Object}        [options.where] A hash of search attributes."," * @param {Object}        [options.include] Include options. See `find` for details"," * @param {boolean}       [options.distinct] Apply COUNT(DISTINCT(col)) on primary key, `Model.aggregate` should be used for other columns"," * @param {Object}        [options.attributes] Used in conjunction with `group`"," * @param {Object}        [options.group] For creating complex counts. Will return multiple rows as needed."," * @param {Transaction}   [options.transaction] Transaction to run query under"," * @param {Function}      [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}       [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param {String}        [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<Integer>}"," */","Model.prototype.count = function(options) {","  return Promise.bind(this).then(function() {","    options = _.defaults(Utils.cloneDeep(options), { hooks: true });","    if (options.hooks) {","      return this.runHooks('beforeCount', options);","    }","  }).then(function() {","    var col = options.include ? this.name + '.' + this.primaryKeyField : '*';","","    options.plain = !options.group;","    options.dataType = new DataTypes.INTEGER();","    options.includeIgnoreAttributes = false;","","    // No limit, offset, order or attributes for the options max be given to count()","    // Set them to null to prevent scopes setting those values","    options.limit = null;","    options.offset = null;","    options.order = null;","","    return this.aggregate(col, 'count', options);","  });","};","","/**"," * Find all the rows matching your query, within a specified offset / limit, and get the total number of rows matching your query. This is very useful for paging"," *"," * ```js"," * Model.findAndCountAll({"," *   where: ...,"," *   limit: 12,"," *   offset: 12"," * }).then(function (result) {"," *   ..."," * })"," * ```"," * In the above example, `result.rows` will contain rows 13 through 24, while `result.count` will return the total number of rows that matched your query."," *"," * When you add includes, only those which are required (either because they have a where clause, or because `required` is explicitly set to true on the include) will be added to the count part."," *"," * Suppose you want to find all users who have a profile attached:"," * ```js"," * User.findAndCountAll({"," *   include: ["," *      { model: Profile, required: true}"," *   ],"," *   distinct: true,"," *   limit 3"," * });"," * ```"," * Because the include for `Profile` has `required` set it will result in an inner join, and only the users who have a profile will be counted. If we remove `required` from the include, both users with and without profiles will be counted"," *"," * @param {Object} [findOptions] See findAll"," *"," * @see {Model#findAll} for a specification of find and query options"," * @return {Promise<Object>}"," * @alias findAndCountAll"," */","Model.prototype.findAndCount = function(options) {","  if (options !== undefined && !_.isPlainObject(options)) {","    throw new Error('The argument passed to findAndCount must be an options object, use findById if you wish to pass a single primary key value');","  }","","  var self = this;","  var countOptions = Utils.cloneDeep(options);","  if (countOptions.attributes) {","    countOptions.attributes = undefined;","  }","  return self.count(countOptions).then(function(count) {","    if (count === 0) {","      return {","        count: count || 0,","        rows: []","      };","    }","    return self.findAll(options).then(function(results) {","      return {","        count: count || 0,","        rows: results","      };","    });","  });","};","Model.prototype.findAndCountAll = Model.prototype.findAndCount;","","","/**"," * Find the maximum value of field"," *"," * @param {String} field"," * @param {Object} [options] See aggregate"," * @see {Model#aggregate} for options"," *"," * @return {Promise<Any>}"," */","Model.prototype.max = function(field, options) {","  return this.aggregate(field, 'max', options);","};","","/**"," * Find the minimum value of field"," *"," * @param {String} field"," * @param {Object} [options] See aggregate"," * @see {Model#aggregate} for options"," *"," * @return {Promise<Any>}"," */","Model.prototype.min = function(field, options) {","  return this.aggregate(field, 'min', options);","};","","/**"," * Find the sum of field"," *"," * @param {String} field"," * @param {Object} [options] See aggregate"," * @see {Model#aggregate} for options"," *"," * @return {Promise<Number>}"," */","Model.prototype.sum = function(field, options) {","  return this.aggregate(field, 'sum', options);","};","","/**"," * Builds a new model instance. Values is an object of key value pairs, must be defined but can be empty.",""," * @param {Object}  values"," * @param {Object}  [options]"," * @param {Boolean} [options.raw=false] If set to true, values will ignore field and virtual setters."," * @param {Boolean} [options.isNewRecord=true]"," * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`"," *"," * @return {Instance}"," */","Model.prototype.build = function(values, options) { // testhint options:none","  if (Array.isArray(values)) {","    return this.bulkBuild(values, options);","  }","  options = _.extend({","    isNewRecord: true,","    $schema: this.$schema,","    $schemaDelimiter: this.$schemaDelimiter","  }, options || {});","","  if (options.attributes) {","    options.attributes = options.attributes.map(function(attribute) {","      return Array.isArray(attribute) ? attribute[1] : attribute;","    });","  }","","  if (!options.includeValidated) {","    conformOptions(options, this);","    if (options.include) {","      expandIncludeAll.call(this, options);","      validateIncludedElements.call(this, options);","    }","  }","","  return new this.Instance(values, options);","};","","","Model.prototype.bulkBuild = function(valueSets, options) { // testhint options:none","  options = _.extend({","    isNewRecord: true","  }, options || {});","","  if (!options.includeValidated) {","    conformOptions(options, this);","    if (options.include) {","      expandIncludeAll.call(this, options);","      validateIncludedElements.call(this, options);","    }","  }","","  if (options.attributes) {","    options.attributes = options.attributes.map(function(attribute) {","      return Array.isArray(attribute) ? attribute[1] : attribute;","    });","  }","","  return valueSets.map(function(values) {","    return this.build(values, options);","  }.bind(this));","};","","/**"," * Builds a new model instance and calls save on it.",""," * @see {Instance#build}"," * @see {Instance#save}"," *"," * @param {Object}        values"," * @param {Object}        [options]"," * @param {Boolean}       [options.raw=false] If set to true, values will ignore field and virtual setters."," * @param {Boolean}       [options.isNewRecord=true]"," * @param {Array}         [options.fields] If set, only columns matching those in fields will be saved"," * @param {Array}         [options.include] an array of include options - Used to build prefetched/included model instances"," * @param {String}        [options.onDuplicate]"," * @param {Transaction}   [options.transaction] Transaction to run query under"," * @param {Function}      [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}       [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param {String}        [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<Instance>}"," */","Model.prototype.create = function(values, options) {","  options = Utils.cloneDeep(options || {});","","  return this.build(values, {","    isNewRecord: true,","    attributes: options.fields,","    include: options.include,","    raw: options.raw,","    silent: options.silent","  }).save(options);","};","","/**"," * Find a row that matches the query, or build (but don't save) the row if none is found."," * The successful result of the promise will be (instance, initialized) - Make sure to use .spread()"," *"," * @param {Object}   options"," * @param {Object}   options.where A hash of search attributes."," * @param {Object}   [options.defaults] Default values to use if building a new instance"," * @param {Object}   [options.transaction] Transaction to run query under"," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," *"," * @return {Promise<Instance,initialized>}"," * @alias findOrBuild"," */","Model.prototype.findOrInitialize = Model.prototype.findOrBuild = function(options) {","  if (!options || !options.where || arguments.length > 1) {","    throw new Error(","      'Missing where attribute in the options parameter passed to findOrInitialize. ' +","      'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'","    );","  }","","  var self = this","    , values;","","  return self.find(options).then(function(instance) {","    if (instance === null) {","      values = Utils._.clone(options.defaults) || {};","      if (Utils._.isPlainObject(options.where)) {","        values = Utils._.defaults(values, options.where);","      }","","      instance = self.build(values);","","      return Promise.resolve([instance, true]);","    }","","    return Promise.resolve([instance, false]);","  });","};","","/**"," * Find a row that matches the query, or build and save the row if none is found"," * The successful result of the promise will be (instance, created) - Make sure to use .spread()"," *"," * If no transaction is passed in the `options` object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call."," * However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize.TimeoutError will be thrown instead."," * If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally."," *"," * @param {Object}      options"," * @param {Object}      options.where where A hash of search attributes."," * @param {Object}      [options.defaults] Default values to use if creating a new instance"," * @param {Transaction} [options.transaction] Transaction to run query under"," * @see {Model#findAll} for a full specification of find and options"," * @return {Promise<Instance,created>}"," */","Model.prototype.findOrCreate = function(options) {","  if (!options || !options.where || arguments.length > 1) {","    throw new Error(","      'Missing where attribute in the options parameter passed to findOrCreate. '+","      'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'","    );","  }","","  options = _.assign({}, options);","","  if (options.transaction === undefined && this.sequelize.constructor.cls) {","    var t = this.sequelize.constructor.cls.get('transaction');","    if (t) {","      options.transaction = t;","    }","  }","","  var self = this","    , internalTransaction = !options.transaction","    , values","    , whereFields = Object.keys(options.where)","    , defaultFields","    , transaction;","","  if (options.defaults) defaultFields = Object.keys(options.defaults);","","  // Create a transaction or a savepoint, depending on whether a transaction was passed in","  return self.sequelize.transaction(options).bind({}).then(function (t) {","    transaction = t;","    options.transaction = t;","","    return self.findOne(_.defaults({","      transaction: transaction","    }, options));","  }).then(function(instance) {","    if (instance !== null) {","      return [instance, false];","    }","","    values = Utils._.clone(options.defaults) || {};","    if (Utils._.isPlainObject(options.where)) {","      values = _.defaults(values, options.where);","    }","","    options.exception = true;","","    return self.create(values, options).bind(this).then(function(instance) {","      if (instance.get(self.primaryKeyAttribute, { raw: true }) === null) {","        // If the query returned an empty result for the primary key, we know that this was actually a unique constraint violation","        throw new self.sequelize.UniqueConstraintError();","      }","","      return [instance, true];","    }).catch(self.sequelize.UniqueConstraintError, function (err) {","      if (defaultFields) {","        if (!_.intersection(err.fields, whereFields).length && _.intersection(err.fields, defaultFields).length) {","          throw err;","        }","      }","","      // Someone must have created a matching instance inside the same transaction since we last did a find. Let's find it!","      return self.findOne(_.defaults({","        transaction: internalTransaction ? null : transaction","      }, options)).then(function(instance) {","        // Sanity check, ideally we caught this at the defaultFeilds/err.fields check","        // But if we didn't and instance is null, we will throw","        if (instance === null) throw err;","        return [instance, false];","      });","    });","  }).finally(function () {","    if (internalTransaction && transaction) {","      // If we created a transaction internally (and not just a savepoint), we should clean it up","      return transaction.commit();","    }","  });","};","","/**"," * A more performant findOrCreate that will not work under a transaction (at least not in postgres)"," * Will execute a find call, if empty then attempt to create, if unique constraint then attempt to find again"," *"," * @param {Object}      options"," * @param {Object}      options.where where A hash of search attributes."," * @param {Object}      [options.defaults] Default values to use if creating a new instance"," * @see {Model#findAll} for a full specification of find and options"," * @return {Promise<Instance,created>}"," */","Model.prototype.findCreateFind = function(options) {","  if (!options || !options.where) {","    throw new Error(","      'Missing where attribute in the options parameter passed to findOrCreate.'","    );","  }","","  var values = Utils._.clone(options.defaults) || {};","  if (Utils._.isPlainObject(options.where)) {","    values = _.defaults(values, options.where);","  }","","","  return this.findOne(options).bind(this).then(function (result) {","    if (result) return [result, false];","","    return this.create(values, options).bind(this).then(function (result) {","      return [result, true];","    }).catch(this.sequelize.UniqueConstraintError, function (err) {","      return this.findOne(options).then(function (result) {","        return [result, false];","      });","    });","  });","};","","/**"," * Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated."," *"," * **Implementation details:**"," *"," * * MySQL - Implemented as a single query `INSERT values ON DUPLICATE KEY UPDATE values`"," * * PostgreSQL - Implemented as a temporary function with exception handling: INSERT EXCEPTION WHEN unique_constraint UPDATE"," * * SQLite - Implemented as two queries `INSERT; UPDATE`. This means that the update is executed regardless of whether the row already existed or not"," * * MSSQL - Implemented as a single query using `MERGE` and `WHEN (NOT) MATCHED THEN`"," * **Note** that SQLite returns undefined for created, no matter if the row was created or updated. This is because SQLite always runs INSERT OR IGNORE + UPDATE, in a single query, so there is no way to know whether the row was inserted or not."," *"," * @param  {Object}       values"," * @param  {Object}       [options]"," * @param  {Boolean}      [options.validate=true] Run validations before the row is inserted"," * @param  {Array}        [options.fields=Object.keys(this.attributes)] The fields to insert / update. Defaults to all fields"," * @param  {Transaction}  [options.transaction] Transaction to run query under"," * @param  {Function}     [options.logging=false] A function that gets executed while running the query to log the sql."," * @param  {Boolean}      [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @alias insertOrUpdate"," * @return {Promise<created>} Returns a boolean indicating whether the row was created or updated."," */","Model.prototype.upsert = function (values, options) {","  options = Utils.cloneDeep(options) || {};","","  if (!options.fields) {","    options.fields = Object.keys(this.attributes);","  }","","  var createdAtAttr = this._timestampAttributes.createdAt","    , updatedAtAttr = this._timestampAttributes.updatedAt","    , hadPrimary = this.primaryKeyField in values || this.primaryKeyAttribute in values","    , instance = this.build(values);","","  return instance.hookValidate(options).bind(this).then(function () {","    // Map field names","    var updatedDataValues = _.pick(instance.dataValues, Object.keys(instance._changed))","      , insertValues = Utils.mapValueFieldNames(instance.dataValues, options.fields, this)","      , updateValues = Utils.mapValueFieldNames(updatedDataValues, options.fields, this)","      , now = Utils.now(this.sequelize.options.dialect);","","    // Attach createdAt","    if (createdAtAttr && !updateValues[createdAtAttr]) {","      insertValues[createdAtAttr] = this.$getDefaultTimestamp(createdAtAttr) || now;","    }","    if (updatedAtAttr && !insertValues[updatedAtAttr]) {","      insertValues[updatedAtAttr] = updateValues[updatedAtAttr] = this.$getDefaultTimestamp(updatedAtAttr) || now;","    }","","    // Build adds a null value for the primary key, if none was given by the user.","    // We need to remove that because of some Postgres technicalities.","    if (!hadPrimary && this.primaryKeyAttribute && !this.rawAttributes[this.primaryKeyAttribute].defaultValue) {","      delete insertValues[this.primaryKeyField];","      delete updateValues[this.primaryKeyField];","    }","","    return this.QueryInterface.upsert(this.getTableName(options), insertValues, updateValues, instance.where(), this, options);","  });","};","","Model.prototype.insertOrUpdate = Model.prototype.upsert;","","/**"," * Create and insert multiple instances in bulk."," *"," * The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL"," * and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records."," * To obtain Instances for the newly created values, you will need to query for them again."," *"," * @param  {Array}        records                          List of objects (key/value pairs) to create instances from"," * @param  {Object}       [options]"," * @param  {Array}        [options.fields]                 Fields to insert (defaults to all fields)"," * @param  {Boolean}      [options.validate=false]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation"," * @param  {Boolean}      [options.hooks=true]             Run before / after bulk create hooks?"," * @param  {Boolean}      [options.individualHooks=false]  Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true."," * @param  {Boolean}      [options.ignoreDuplicates=false] Ignore duplicate values for primary keys? (not supported by postgres)"," * @param  {Array}        [options.updateOnDuplicate]      Fields to update if row key already exists (on duplicate key update)? (only supported by mysql & mariadb). By default, all fields are updated."," * @param  {Transaction}  [options.transaction] Transaction to run query under"," * @param  {Function}     [options.logging=false]          A function that gets executed while running the query to log the sql."," * @param  {Boolean}      [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param  {Boolean}      [options.returning=false] Append RETURNING * to get back auto generated values (Postgres only)"," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<Array<Instance>>}"," */","Model.prototype.bulkCreate = function(records, options) {","  if (!records.length) {","    return Promise.resolve([]);","  }","","  options = Utils._.extend({","    validate: false,","    hooks: true,","    individualHooks: false,","    ignoreDuplicates: false","  }, options || {});","","  options.fields = options.fields || Object.keys(this.tableAttributes);","","  // Expose model to global hooks","  options.model = this;","","  var dialect = this.sequelize.options.dialect;","  if (options.ignoreDuplicates && ['postgres', 'mssql'].indexOf(dialect) !== -1) {","    return Promise.reject(new Error(dialect + ' does not support the \\'ignoreDuplicates\\' option.'));","  }","  if (options.updateOnDuplicate && ['mysql', 'mariadb'].indexOf(dialect) === -1) {","    return Promise.reject(new Error(dialect + ' does not support the \\'updateOnDuplicate\\' option.'));","  }","","  if (options.updateOnDuplicate) {","    // By default, all attributes except 'createdAt' can be updated","    var updatableFields = Utils._.pull(Object.keys(this.tableAttributes), 'createdAt');","    if (Utils._.isArray(options.updateOnDuplicate) && !Utils._.isEmpty(options.updateOnDuplicate)) {","      updatableFields = Utils._.intersection(updatableFields, options.updateOnDuplicate);","    }","    options.updateOnDuplicate = updatableFields;","  }","","  var self = this","    , createdAtAttr = this._timestampAttributes.createdAt","    , updatedAtAttr = this._timestampAttributes.updatedAt","    , now = Utils.now(self.modelManager.sequelize.options.dialect);","","  var instances = records.map(function(values) {","    return self.build(values, {isNewRecord: true});","  });","","  return Promise.try(function() {","    // Run before hook","    if (options.hooks) {","      return self.runHooks('beforeBulkCreate', instances, options);","    }","  }).then(function() {","    // Validate","    if (options.validate) {","      var errors = [];","      return Promise.map(instances, function(instance) {","        // hookValidate rejects with errors, validate returns with errors","        if (options.individualHooks) {","          return instance.hookValidate(options).catch(function (err) {","            if (err) {","              errors.push({record: instance, errors: err});","            }","          });","        } else {","          return instance.validate(options).then(function (err) {","            if (err) {","              errors.push({record: instance, errors: err});","            }","          });","        }","      }).then(function() {","        delete options.skip;","        if (errors.length) {","          return Promise.reject(errors);","        }","      });","    }","  }).then(function() {","    instances.forEach(function(instance) {","      var values = Utils.mapValueFieldNames(instance.dataValues, options.fields, self);","","      // set createdAt/updatedAt attributes","      if (createdAtAttr && !values[createdAtAttr]) {","        values[createdAtAttr] = now;","      }","      if (updatedAtAttr && !values[updatedAtAttr]) {","        values[updatedAtAttr] = now;","      }","","      instance.dataValues = values;","    });","","    if (options.individualHooks) {","      // Create each instance individually","      return Promise.map(instances, function(instance) {","        var individualOptions = Utils._.clone(options);","        delete individualOptions.fields;","        delete individualOptions.individualHooks;","        delete individualOptions.ignoreDuplicates;","        individualOptions.validate = false;","        individualOptions.hooks = true;","","        return instance.save(individualOptions);","      }).then(function(_instances) {","        instances = _instances;","      });","    } else {","      // Create all in one query","      // Recreate records from instances to represent any changes made in hooks or validation","      records = instances.map(function(instance) {","        return Utils._.omit(instance.dataValues, self._virtualAttributes);","      });","","      // Map attributes for serial identification","      var attributes = {};","      for (var attr in self.tableAttributes) {","        attributes[attr] = self.rawAttributes[attr];","        if (self.rawAttributes[attr].field) {","          attributes[self.rawAttributes[attr].field] = self.rawAttributes[attr];","        }","      }","","      return self.QueryInterface.bulkInsert(self.getTableName(options), records, options, attributes).then(function (results) {","        if (Array.isArray(results)) {","          results.forEach(function (result, i) {","            instances[i].set(self.primaryKeyAttribute, result[self.rawAttributes[self.primaryKeyAttribute].field], {raw: true});","            instances[i].isNewRecord = false;","          });","        }","        return results;","      });","    }","  }).then(function() {","    // Run after hook","    if (options.hooks) {","      return self.runHooks('afterBulkCreate', instances, options);","    }","  }).then(function() {","    return instances;","  });","};","","/**"," * Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true })."," *"," * @param {object} [options] The options passed to Model.destroy in addition to truncate"," * @param {Boolean|function} [options.transaction] Transaction to run query under"," * @param {Boolean|function} [options.cascade = false] Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE."," * @param {Transaction}      [options.transaction] Transaction to run query under"," * @param {Boolean|function} [options.logging] A function that logs sql queries, or false for no logging"," * @param {Boolean}          [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param {String}           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise}"," *"," * @see {Model#destroy} for more information"," */","Model.prototype.truncate = function(options) {","  options = Utils.cloneDeep(options) || {};","  options.truncate = true;","  return this.destroy(options);","};","","/**"," * Delete multiple instances, or set their deletedAt timestamp to the current time if `paranoid` is enabled."," *"," * @param  {Object}       options"," * @param  {Object}       [options.where]                 Filter the destroy"," * @param  {Boolean}      [options.hooks=true]            Run before / after bulk destroy hooks?"," * @param  {Boolean}      [options.individualHooks=false] If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row"," * @param  {Number}       [options.limit]                 How many rows to delete"," * @param  {Boolean}      [options.force=false]           Delete instead of setting deletedAt to current timestamp (only applicable if `paranoid` is enabled)"," * @param  {Boolean}      [options.truncate=false]        If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored"," * @param  {Boolean}      [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE."," * @param  {Boolean}      [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table."," * @param  {Transaction}  [options.transaction] Transaction to run query under"," * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql."," * @param  {Boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @return {Promise<Integer>} The number of destroyed rows"," */","Model.prototype.destroy = function(options) {","  var self = this","    , instances;","","  if (!options || !(options.where || options.truncate)) {","    throw new Error('Missing where or truncate attribute in the options parameter of model.destroy.');","  }","","  if (!options.truncate && !_.isPlainObject(options.where) && !_.isArray(options.where) && options.where._isSequelizeMethod !== true) {","    throw new Error('Expected plain object, array or sequelize method in the options.where parameter of model.destroy.');","  }","","  options = Utils.cloneDeep(options);","  options = _.defaults(options, {","    hooks: true,","    individualHooks: false,","    force: false,","    cascade: false,","    restartIdentity: false","  });","","  options.type = QueryTypes.BULKDELETE;","  this.$injectScope(options);","","  Utils.mapOptionFieldNames(options, this);","  options.model = self;","","  return Promise.try(function() {","    // Run before hook","    if (options.hooks) {","      return self.runHooks('beforeBulkDestroy', options);","    }","  }).then(function() {","    // Get daos and run beforeDestroy hook on each record individually","    if (options.individualHooks) {","      return self.findAll({where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark}).map(function(instance) {","        return self.runHooks('beforeDestroy', instance, options).then(function() {","          return instance;","        });","      }).then(function(_instances) {","        instances = _instances;","      });","    }","  }).then(function() {","","    // Run delete query (or update if paranoid)","    if (self._timestampAttributes.deletedAt && !options.force) {","      // Set query type appropriately when running soft delete","      options.type = QueryTypes.BULKUPDATE;","","      var attrValueHash = {}","        , deletedAtAttribute = self.rawAttributes[self._timestampAttributes.deletedAt]","        , field = self.rawAttributes[self._timestampAttributes.deletedAt].field","        , where = {};","","      where[field] = deletedAtAttribute.hasOwnProperty('defaultValue') ? deletedAtAttribute.defaultValue : null;","","      attrValueHash[field] = Utils.now(self.modelManager.sequelize.options.dialect);","      return self.QueryInterface.bulkUpdate(self.getTableName(options), attrValueHash, _.defaults(where, options.where), options, self.rawAttributes);","    } else {","      return self.QueryInterface.bulkDelete(self.getTableName(options), options.where, options, self);","    }","  }).tap(function() {","    // Run afterDestroy hook on each record individually","    if (options.individualHooks) {","      return Promise.map(instances, function(instance) {","        return self.runHooks('afterDestroy', instance, options);","      });","    }","  }).tap(function() {","    // Run after hook","    if (options.hooks) {","      return self.runHooks('afterBulkDestroy', options);","    }","  }).then(function(affectedRows) {","    return affectedRows;","  });","};","","/**"," * Restore multiple instances if `paranoid` is enabled."," *"," * @param  {Object}       options"," * @param  {Object}       [options.where]                 Filter the restore"," * @param  {Boolean}      [options.hooks=true]            Run before / after bulk restore hooks?"," * @param  {Boolean}      [options.individualHooks=false] If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row"," * @param  {Number}       [options.limit]                 How many rows to undelete"," * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql."," * @param  {Boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param  {Transaction}  [options.transaction] Transaction to run query under"," *"," * @return {Promise<undefined>}"," */","Model.prototype.restore = function(options) {","  if (!this._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');","","  options = Utils._.extend({","    hooks: true,","    individualHooks: false","  }, options || {});","","  options.type = QueryTypes.RAW;","","  // Expose model to global hooks","  options.model = this;","","  var self = this","    , instances;","","  Utils.mapOptionFieldNames(options, this);","","  return Promise.try(function() {","    // Run before hook","    if (options.hooks) {","      return self.runHooks('beforeBulkRestore', options);","    }","  }).then(function() {","    // Get daos and run beforeRestore hook on each record individually","    if (options.individualHooks) {","      return self.findAll({where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark, paranoid: false}).map(function(instance) {","        return self.runHooks('beforeRestore', instance, options).then(function() {","          return instance;","        });","      }).then(function(_instances) {","        instances = _instances;","      });","    }","  }).then(function() {","    // Run undelete query","    var attrValueHash = {}","      , deletedAtCol = self._timestampAttributes.deletedAt","      , deletedAtAttribute = self.rawAttributes[deletedAtCol]","      , deletedAtDefaultValue = deletedAtAttribute.hasOwnProperty('defaultValue') ? deletedAtAttribute.defaultValue : null;","","    attrValueHash[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;","    options.omitNull = false;","    return self.QueryInterface.bulkUpdate(self.getTableName(options), attrValueHash, options.where, options, self._timestampAttributes.deletedAt);","  }).tap(function() {","    // Run afterDestroy hook on each record individually","    if (options.individualHooks) {","      return Promise.map(instances, function(instance) {","        return self.runHooks('afterRestore', instance, options);","      });","    }","  }).tap(function() {","    // Run after hook","    if (options.hooks) {","      return self.runHooks('afterBulkRestore', options);","    }","  }).then(function(affectedRows) {","    return affectedRows;","  });","};","","/**"," * Update multiple instances that match the where options. The promise returns an array with one or two elements. The first element is always the number"," * of affected rows, while the second element is the actual affected rows (only supported in postgres with `options.returning` true.)"," *"," * @param  {Object}       values"," * @param  {Object}       options"," * @param  {Object}       options.where                   Options to describe the scope of the search."," * @param  {Array}        [options.fields]                Fields to update (defaults to all fields)"," * @param  {Boolean}      [options.validate=true]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation"," * @param  {Boolean}      [options.hooks=true]            Run before / after bulk update hooks?"," * @param  {Boolean}      [options.sideEffects=true] Whether or not to update the side effects of any virtual setters."," * @param  {Boolean}      [options.individualHooks=false] Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks"," * @param  {Boolean}      [options.returning=false]       Return the affected rows (only for postgres)"," * @param  {Number}       [options.limit]                 How many rows to update (only for mysql and mariadb)"," * @param  {Function}     [options.logging=false] A function that gets executed while running the query to log the sql."," * @param  {Boolean}      [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging)."," * @param  {Transaction}  [options.transaction] Transaction to run query under"," * @param  {Boolean}      [options.silent=false] If true, the updatedAt timestamp will not be updated."," *"," * @return {Promise<Array<affectedCount,affectedRows>>}"," */","Model.prototype.update = function(values, options) {","  var self = this;","","  if (!options || !options.where) {","    throw new Error('Missing where attribute in the options parameter passed to update.');","  }","","  if (!_.isPlainObject(options.where) && !_.isArray(options.where) && options.where._isSequelizeMethod !== true) {","    throw new Error('Expected plain object, array or sequelize method in the options.where parameter of model.update.');","  }","","  options = Utils.cloneDeep(options);","  options = _.defaults(options, {","    validate: true,","    hooks: true,","    individualHooks: false,","    returning: false,","    force: false,","    sideEffects: true","  });","","  options.type = QueryTypes.BULKUPDATE;","","  // Expose model to global hooks","  options.model = this;","","  this.$injectScope(options);","","  // Clone values so it doesn't get modified for caller scope","  values = _.clone(values);","","  // Remove values that are not in the options.fields","  if (options.fields && options.fields instanceof Array) {","    Object.keys(values).forEach(function(key) {","      if (options.fields.indexOf(key) < 0) {","        delete values[key];","      }","    });","  } else {","    var updatedAtAttr = this._timestampAttributes.updatedAt;","    options.fields = _.intersection(Object.keys(values), Object.keys(this.tableAttributes));","    if (updatedAtAttr && options.fields.indexOf(updatedAtAttr) === -1) {","      options.fields.push(updatedAtAttr);","    }","  }","","  if (this._timestampAttributes.updatedAt && !options.silent) {","    values[this._timestampAttributes.updatedAt] = this.$getDefaultTimestamp(this._timestampAttributes.updatedAt) || Utils.now(this.sequelize.options.dialect);","  }","","  var instances","    , valuesUse;","","  return Promise.try(function() {","    // Validate","    if (options.validate) {","      var build = self.build(values);","      build.set(self._timestampAttributes.updatedAt, values[self._timestampAttributes.updatedAt], { raw: true });","","      if (options.sideEffects) {","        values = Utils._.assign(values, Utils._.pick(build.get(), build.changed()));","        options.fields = Utils._.union(options.fields, Object.keys(values));","      }","","      // We want to skip validations for all other fields","      options.skip = Utils._.difference(Object.keys(self.attributes), Object.keys(values));","      return build.hookValidate(options).then(function(attributes) {","        options.skip = undefined;","        if (attributes && attributes.dataValues) {","          values = Utils._.pick(attributes.dataValues, Object.keys(values));","        }","      });","    }","    return null;","  }).then(function() {","    // Run before hook","    if (options.hooks) {","      options.attributes = values;","      return self.runHooks('beforeBulkUpdate', options).then(function() {","        values = options.attributes;","        delete options.attributes;","      });","    }","    return null;","  }).then(function() {","    valuesUse = values;","","    // Get instances and run beforeUpdate hook on each record individually","    if (options.individualHooks) {","      return self.findAll({where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark}).then(function(_instances) {","        instances = _instances;","        if (!instances.length) {","          return [];","        }","","        // Run beforeUpdate hooks on each record and check whether beforeUpdate hook changes values uniformly","        // i.e. whether they change values for each record in the same way","        var changedValues","          , different = false;","","        return Promise.map(instances, function(instance) {","          // Record updates in instances dataValues","          Utils._.extend(instance.dataValues, values);","          // Set the changed fields on the instance","          Utils._.forIn(valuesUse, function(newValue, attr) {","            if (newValue !== instance._previousDataValues[attr]) {","              instance.setDataValue(attr, newValue);","            }","          });","","          // Run beforeUpdate hook","          return self.runHooks('beforeUpdate', instance, options).then(function() {","            if (!different) {","              var thisChangedValues = {};","              Utils._.forIn(instance.dataValues, function(newValue, attr) {","                if (newValue !== instance._previousDataValues[attr]) {","                  thisChangedValues[attr] = newValue;","                }","              });","","              if (!changedValues) {","                changedValues = thisChangedValues;","              } else {","                different = !Utils._.isEqual(changedValues, thisChangedValues);","              }","            }","","            return instance;","          });","        }).then(function(_instances) {","          instances = _instances;","","          if (!different) {","            var keys = Object.keys(changedValues);","            // Hooks do not change values or change them uniformly","            if (keys.length) {","              // Hooks change values - record changes in valuesUse so they are executed","              valuesUse = changedValues;","              options.fields = Utils._.union(options.fields, keys);","            }","            return;","          } else {","            // Hooks change values in a different way for each record","            // Do not run original query but save each record individually","            return Promise.map(instances, function(instance) {","              var individualOptions = Utils._.clone(options);","              delete individualOptions.individualHooks;","              individualOptions.hooks = false;","              individualOptions.validate = false;","","              return instance.save(individualOptions);","            }).tap(function(_instances) {","              instances = _instances;","            });","          }","        });","      });","    }","  }).then(function(results) {","    if (results) {","      // Update already done row-by-row - exit","      return [results.length, results];","    }","","    valuesUse = Utils.mapValueFieldNames(valuesUse, options.fields, self);","    options = Utils.mapOptionFieldNames(options, self);","    options.hasTrigger =  self.options ? self.options.hasTrigger : false;","","    // Run query to update all rows","    return self.QueryInterface.bulkUpdate(self.getTableName(options), valuesUse, options.where, options, self.tableAttributes).then(function(affectedRows) {","      if (options.returning) {","        instances = affectedRows;","        return [affectedRows.length, affectedRows];","      }","","      return [affectedRows];","    });","  }).tap(function(result) {","    if (options.individualHooks) {","      return Promise.map(instances, function(instance) {","        return self.runHooks('afterUpdate', instance, options);","      }).then(function() {","        result[1] = instances;","      });","    }","  }).tap(function() {","    // Run after hook","    if (options.hooks) {","      options.attributes = values;","      return self.runHooks('afterBulkUpdate', options).then(function() {","        delete options.attributes;","      });","    }","  }).then(function(result) {","    // Return result in form [affectedRows, instances] (instances missed off if options.individualHooks != true)","    return result;","  });","};","","/**"," * Run a describe query on the table. The result will be return to the listener as a hash of attributes and their types."," *"," * @return {Promise}"," */","Model.prototype.describe = function(schema, options) {","  return this.QueryInterface.describeTable(this.tableName, _.assign({schema: schema || this.$schema || undefined}, options));","};","","Model.prototype.$getDefaultTimestamp = function(attr) {","  if (!!this.rawAttributes[attr] && !!this.rawAttributes[attr].defaultValue) {","    return Utils.toDefaultValue(this.rawAttributes[attr].defaultValue);","  }","  return undefined;","};","","Model.prototype.$expandAttributes = function (options) {","  if (_.isPlainObject(options.attributes)) {","    var attributes = Object.keys(this.rawAttributes);","","    if (options.attributes.exclude) {","      attributes = attributes.filter(function (elem) {","        return options.attributes.exclude.indexOf(elem) === -1;","      });","    }","    if (options.attributes.include) {","      attributes = attributes.concat(options.attributes.include);","    }","","    options.attributes = attributes;","  }","};","","// Inject $scope into options. Includes should have been conformed (conformOptions) before calling this","Model.prototype.$injectScope = function (options) {","  var self = this;","  var scope = Utils.cloneDeep(this.$scope);","","  var filteredScope = _.omit(scope, 'include'); // Includes need special treatment","","  _.defaults(options, filteredScope);","  _.defaults(options.where, filteredScope.where);","","  if (scope.include) {","    options.include = options.include || [];","","    // Reverse so we consider the latest include first.","    // This is used if several scopes specify the same include - the last scope should take precedence","    scope.include.reverse().forEach(function (scopeInclude) {","      if (scopeInclude.all || !options.include.some(function matchesModelAndAlias(item) {","        var isSameModel = item.model && item.model.name === scopeInclude.model.name;","        if (!isSameModel || !item.as) return isSameModel;","","        if (scopeInclude.as) {","          return item.as === scopeInclude.as;","        } else {","          var association = scopeInclude.association || self.getAssociation(scopeInclude.model, scopeInclude.as);","          return association ? item.as === association.as : false;","        }","      })) {","        options.include.push(scopeInclude);","      }","    });","  }","};","","Model.prototype.inspect = function() {","  return this.name;","};","","Utils._.extend(Model.prototype, associationsMixin);","Hooks.applyTo(Model);","","module.exports = Model;","module.exports.Model = Model;","module.exports.default = Model;",""],"l":{"5":1,"26":1,"28":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"58":0,"59":0,"61":0,"64":0,"65":0,"68":0,"69":0,"70":0,"73":0,"74":0,"78":0,"79":0,"80":0,"84":0,"86":0,"87":0,"89":0,"90":0,"94":0,"95":0,"98":0,"102":1,"104":0,"108":1,"110":0,"114":1,"115":0,"121":1,"122":0,"127":0,"128":0,"129":0,"134":0,"135":0,"136":0,"137":0,"141":0,"143":0,"146":0,"151":0,"153":0,"154":0,"156":0,"159":0,"162":1,"163":0,"164":0,"167":1,"168":0,"174":0,"175":0,"177":0,"180":0,"191":0,"192":0,"198":0,"199":0,"205":0,"206":0,"212":0,"213":0,"215":0,"216":0,"219":0,"220":0,"223":0,"224":0,"225":0,"229":0,"230":0,"234":1,"235":0,"237":0,"239":0,"240":0,"241":0,"243":0,"248":1,"249":0,"250":0,"253":0,"254":0,"257":0,"258":0,"259":0,"260":0,"261":0,"265":0,"266":0,"268":0,"272":1,"274":1,"275":0,"277":0,"279":0,"280":0,"281":0,"283":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"294":0,"297":0,"298":0,"300":0,"301":0,"304":0,"307":0,"309":0,"312":0,"315":1,"317":1,"319":0,"320":0,"322":0,"323":0,"324":0,"327":0,"336":0,"337":0,"338":0,"339":0,"340":0,"343":0,"344":0,"345":0,"348":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"363":0,"364":0,"365":0,"367":0,"368":0,"369":0,"370":0,"374":0,"375":0,"376":0,"377":0,"378":0,"382":0,"383":0,"385":0,"386":0,"388":0,"391":0,"392":0,"396":0,"397":0,"399":0,"402":0,"403":0,"404":0,"405":0,"407":0,"410":0,"411":0,"412":0,"415":0,"419":1,"420":1,"421":0,"423":0,"424":0,"425":0,"428":0,"429":0,"431":0,"432":0,"433":0,"436":0,"437":0,"438":0,"440":0,"442":0,"443":0,"446":0,"447":0,"449":0,"450":0,"452":0,"453":0,"456":0,"457":0,"458":0,"460":0,"461":0,"462":0,"463":0,"465":0,"466":0,"469":0,"470":0,"471":0,"472":0,"474":0,"475":0,"479":0,"480":0,"483":0,"484":0,"485":0,"486":0,"487":0,"492":0,"493":0,"495":0,"496":0,"498":0,"499":0,"502":0,"505":0,"506":0,"508":0,"510":1,"512":1,"513":0,"515":0,"516":0,"519":0,"521":0,"523":0,"524":0,"526":0,"527":0,"528":0,"530":0,"532":0,"537":0,"541":0,"542":0,"543":0,"547":0,"549":0,"550":0,"552":0,"553":0,"556":0,"558":0,"561":0,"562":0,"565":0,"566":0,"567":0,"569":0,"580":0,"581":0,"584":0,"585":0,"589":0,"590":0,"592":0,"595":0,"598":0,"601":0,"602":0,"605":0,"607":0,"608":0,"611":0,"612":0,"615":0,"616":0,"619":0,"620":0,"623":0,"624":0,"627":0,"628":0,"632":0,"633":0,"636":0,"639":1,"640":0,"641":0,"642":0,"645":0,"646":0,"648":0,"649":0,"650":0,"652":0,"656":0,"657":0,"661":1,"662":0,"664":0,"665":0,"668":0,"669":0,"670":0,"671":0,"673":0,"674":0,"676":0,"677":0,"682":0,"685":0,"686":0,"689":0,"691":0,"692":0,"693":0,"694":0,"697":0,"698":0,"699":0,"703":0,"704":0,"706":0,"708":0,"710":0,"711":0,"714":0,"715":0,"716":0,"720":0,"722":0,"725":0,"728":1,"729":0,"734":0,"735":0,"736":0,"738":0,"741":1,"742":0,"745":0,"746":0,"748":0,"749":0,"753":0,"754":0,"756":0,"757":0,"758":0,"761":0,"762":0,"763":0,"768":0,"769":0,"770":0,"773":0,"774":0,"775":0,"778":0,"779":0,"780":0,"785":0,"786":0,"787":0,"791":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"805":0,"807":0,"808":0,"810":0,"811":0,"813":0,"814":0,"815":0,"817":0,"818":0,"821":0,"822":0,"825":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"843":0,"844":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"854":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"864":0,"867":0,"868":0,"871":0,"872":0,"877":0,"881":0,"882":0,"883":0,"885":0,"888":0,"890":0,"891":0,"892":0,"895":0,"896":0,"897":0,"900":0,"901":0,"902":0,"905":0,"906":0,"907":0,"910":0,"911":0,"912":0,"915":0,"916":0,"917":0,"920":0,"921":0,"922":0,"925":0,"927":0,"928":0,"930":0,"931":0,"933":0,"934":0,"935":0,"936":0,"938":0,"942":0,"943":0,"944":0,"945":0,"949":0,"950":0,"951":0,"952":0,"955":0,"956":0,"958":0,"959":0,"968":1,"969":0,"970":0,"978":1,"979":0,"980":0,"982":0,"985":0,"986":0,"987":0,"990":0,"991":0,"994":0,"996":0,"999":0,"1001":0,"1002":0,"1003":0,"1007":0,"1008":0,"1016":0,"1017":0,"1030":1,"1031":0,"1034":1,"1035":0,"1049":1,"1050":0,"1051":0,"1053":0,"1055":0,"1056":0,"1057":0,"1059":0,"1060":0,"1065":0,"1066":0,"1068":0,"1069":0,"1071":0,"1083":1,"1084":0,"1090":1,"1091":0,"1104":1,"1105":0,"1109":0,"1110":0,"1113":0,"1115":0,"1116":0,"1118":0,"1168":1,"1169":0,"1174":0,"1175":0,"1177":0,"1178":0,"1181":0,"1182":0,"1183":0,"1184":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1192":0,"1193":0,"1194":0,"1197":0,"1200":0,"1201":0,"1203":0,"1204":0,"1206":0,"1207":0,"1208":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1221":0,"1224":0,"1228":0,"1231":1,"1232":0,"1336":1,"1337":0,"1338":0,"1341":0,"1342":0,"1344":0,"1347":0,"1348":0,"1350":0,"1353":0,"1355":0,"1356":0,"1357":0,"1359":0,"1360":0,"1363":0,"1365":0,"1366":0,"1369":0,"1370":0,"1372":0,"1375":0,"1376":0,"1377":0,"1381":0,"1382":0,"1386":0,"1388":0,"1390":0,"1392":0,"1393":0,"1396":0,"1397":0,"1398":0,"1400":0,"1401":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1412":0,"1416":0,"1420":1,"1421":0,"1423":0,"1424":0,"1426":0,"1428":0,"1429":0,"1430":0,"1432":0,"1435":0,"1438":0,"1440":0,"1450":0,"1455":0,"1456":0,"1480":1,"1482":0,"1483":0,"1486":0,"1488":0,"1489":0,"1490":0,"1492":0,"1496":0,"1498":1,"1511":1,"1512":0,"1513":0,"1515":0,"1517":0,"1518":0,"1521":0,"1522":0,"1527":0,"1532":1,"1550":1,"1551":0,"1552":0,"1553":0,"1554":0,"1556":0,"1557":0,"1558":0,"1561":0,"1565":0,"1566":0,"1568":0,"1570":0,"1571":0,"1572":0,"1575":0,"1578":0,"1581":0,"1582":0,"1584":0,"1605":1,"1606":0,"1607":0,"1608":0,"1609":0,"1612":0,"1614":0,"1615":0,"1616":0,"1620":0,"1621":0,"1622":0,"1624":0,"1662":1,"1663":0,"1664":0,"1667":0,"1668":0,"1669":0,"1670":0,"1672":0,"1673":0,"1674":0,"1679":0,"1680":0,"1687":1,"1699":1,"1700":0,"1712":1,"1713":0,"1725":1,"1726":0,"1740":1,"1741":0,"1742":0,"1744":0,"1750":0,"1751":0,"1752":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1764":0,"1768":1,"1769":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1781":0,"1782":0,"1783":0,"1787":0,"1788":0,"1812":1,"1813":0,"1815":0,"1838":1,"1839":0,"1840":0,"1846":0,"1849":0,"1850":0,"1851":0,"1852":0,"1853":0,"1856":0,"1858":0,"1861":0,"1880":1,"1881":0,"1882":0,"1888":0,"1890":0,"1891":0,"1892":0,"1893":0,"1897":0,"1904":0,"1907":0,"1908":0,"1909":0,"1911":0,"1915":0,"1916":0,"1919":0,"1920":0,"1921":0,"1924":0,"1926":0,"1927":0,"1929":0,"1932":0,"1934":0,"1935":0,"1936":0,"1941":0,"1946":0,"1947":0,"1951":0,"1953":0,"1968":1,"1969":0,"1970":0,"1975":0,"1976":0,"1977":0,"1981":0,"1982":0,"1984":0,"1985":0,"1987":0,"1988":0,"2017":1,"2018":0,"2020":0,"2021":0,"2024":0,"2029":0,"2031":0,"2037":0,"2038":0,"2040":0,"2041":0,"2046":0,"2047":0,"2048":0,"2051":0,"2055":1,"2080":1,"2081":0,"2082":0,"2085":0,"2092":0,"2095":0,"2097":0,"2098":0,"2099":0,"2101":0,"2102":0,"2105":0,"2107":0,"2108":0,"2109":0,"2111":0,"2114":0,"2119":0,"2120":0,"2123":0,"2125":0,"2126":0,"2130":0,"2131":0,"2132":0,"2134":0,"2135":0,"2136":0,"2137":0,"2141":0,"2142":0,"2143":0,"2148":0,"2149":0,"2150":0,"2155":0,"2156":0,"2159":0,"2160":0,"2162":0,"2163":0,"2166":0,"2169":0,"2171":0,"2172":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2179":0,"2181":0,"2186":0,"2187":0,"2191":0,"2192":0,"2193":0,"2194":0,"2195":0,"2199":0,"2200":0,"2201":0,"2202":0,"2203":0,"2206":0,"2211":0,"2212":0,"2215":0,"2234":1,"2235":0,"2236":0,"2237":0,"2257":1,"2258":0,"2261":0,"2262":0,"2265":0,"2266":0,"2269":0,"2270":0,"2278":0,"2279":0,"2281":0,"2282":0,"2284":0,"2286":0,"2287":0,"2291":0,"2292":0,"2293":0,"2294":0,"2297":0,"2303":0,"2305":0,"2307":0,"2312":0,"2314":0,"2315":0,"2317":0,"2321":0,"2322":0,"2323":0,"2328":0,"2329":0,"2332":0,"2350":1,"2351":0,"2353":0,"2358":0,"2361":0,"2363":0,"2366":0,"2368":0,"2370":0,"2371":0,"2375":0,"2376":0,"2377":0,"2378":0,"2381":0,"2386":0,"2391":0,"2392":0,"2393":0,"2396":0,"2397":0,"2398":0,"2403":0,"2404":0,"2407":0,"2432":1,"2433":0,"2435":0,"2436":0,"2439":0,"2440":0,"2443":0,"2444":0,"2453":0,"2456":0,"2458":0,"2461":0,"2464":0,"2465":0,"2466":0,"2467":0,"2471":0,"2472":0,"2473":0,"2474":0,"2478":0,"2479":0,"2482":0,"2485":0,"2487":0,"2488":0,"2489":0,"2491":0,"2492":0,"2493":0,"2497":0,"2498":0,"2499":0,"2500":0,"2501":0,"2505":0,"2508":0,"2509":0,"2510":0,"2511":0,"2512":0,"2515":0,"2517":0,"2520":0,"2521":0,"2522":0,"2523":0,"2524":0,"2529":0,"2532":0,"2534":0,"2536":0,"2537":0,"2538":0,"2543":0,"2544":0,"2545":0,"2546":0,"2547":0,"2548":0,"2552":0,"2553":0,"2555":0,"2559":0,"2562":0,"2564":0,"2565":0,"2567":0,"2569":0,"2570":0,"2572":0,"2576":0,"2577":0,"2578":0,"2579":0,"2580":0,"2582":0,"2584":0,"2591":0,"2593":0,"2596":0,"2597":0,"2598":0,"2601":0,"2602":0,"2603":0,"2604":0,"2607":0,"2610":0,"2611":0,"2612":0,"2614":0,"2619":0,"2620":0,"2621":0,"2622":0,"2627":0,"2636":1,"2637":0,"2640":1,"2641":0,"2642":0,"2644":0,"2647":1,"2648":0,"2649":0,"2651":0,"2652":0,"2653":0,"2656":0,"2657":0,"2660":0,"2665":1,"2666":0,"2667":0,"2669":0,"2671":0,"2672":0,"2674":0,"2675":0,"2679":0,"2680":0,"2681":0,"2682":0,"2684":0,"2685":0,"2687":0,"2688":0,"2691":0,"2697":1,"2698":0,"2701":1,"2702":1,"2704":1,"2705":1,"2706":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/instance.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/instance.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":1,"329":0,"330":1,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":1,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":1,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":1,"408":0,"409":0,"410":0,"411":1,"412":0,"413":1,"414":0,"415":1,"416":1,"417":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0,0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0,0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0,0],"121":[0,0],"122":[0,0],"123":[0,0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0,0],"180":[0,0],"181":[0,0],"182":[0,0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":43}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":56},"end":{"line":25,"column":74}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":15},"end":{"line":85,"column":41}}},"4":{"name":"(anonymous_4)","line":117,"loc":{"start":{"line":117,"column":7},"end":{"line":117,"column":18}}},"5":{"name":"(anonymous_5)","line":126,"loc":{"start":{"line":126,"column":27},"end":{"line":126,"column":38}}},"6":{"name":"(anonymous_6)","line":129,"loc":{"start":{"line":129,"column":49},"end":{"line":129,"column":78}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":30},"end":{"line":140,"column":42}}},"8":{"name":"(anonymous_8)","line":150,"loc":{"start":{"line":150,"column":34},"end":{"line":150,"column":48}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":34},"end":{"line":160,"column":55}}},"10":{"name":"(anonymous_10)","line":179,"loc":{"start":{"line":179,"column":25},"end":{"line":179,"column":48}}},"11":{"name":"(anonymous_11)","line":191,"loc":{"start":{"line":191,"column":40},"end":{"line":191,"column":60}}},"12":{"name":"(anonymous_12)","line":249,"loc":{"start":{"line":249,"column":25},"end":{"line":249,"column":55}}},"13":{"name":"(anonymous_13)","line":393,"loc":{"start":{"line":393,"column":35},"end":{"line":393,"column":53}}},"14":{"name":"(anonymous_14)","line":407,"loc":{"start":{"line":407,"column":29},"end":{"line":407,"column":50}}},"15":{"name":"(anonymous_15)","line":416,"loc":{"start":{"line":416,"column":52},"end":{"line":416,"column":66}}},"16":{"name":"(anonymous_16)","line":431,"loc":{"start":{"line":431,"column":30},"end":{"line":431,"column":44}}},"17":{"name":"(anonymous_17)","line":436,"loc":{"start":{"line":436,"column":44},"end":{"line":436,"column":65}}},"18":{"name":"(anonymous_18)","line":441,"loc":{"start":{"line":441,"column":33},"end":{"line":441,"column":63}}},"19":{"name":"(anonymous_19)","line":444,"loc":{"start":{"line":444,"column":22},"end":{"line":444,"column":41}}},"20":{"name":"(anonymous_20)","line":499,"loc":{"start":{"line":499,"column":26},"end":{"line":499,"column":44}}},"21":{"name":"(anonymous_21)","line":543,"loc":{"start":{"line":543,"column":35},"end":{"line":543,"column":49}}},"22":{"name":"(anonymous_22)","line":573,"loc":{"start":{"line":573,"column":33},"end":{"line":573,"column":44}}},"23":{"name":"(anonymous_23)","line":576,"loc":{"start":{"line":576,"column":37},"end":{"line":576,"column":49}}},"24":{"name":"(anonymous_24)","line":580,"loc":{"start":{"line":580,"column":43},"end":{"line":580,"column":58}}},"25":{"name":"(anonymous_25)","line":585,"loc":{"start":{"line":585,"column":10},"end":{"line":585,"column":21}}},"26":{"name":"(anonymous_26)","line":586,"loc":{"start":{"line":586,"column":35},"end":{"line":586,"column":46}}},"27":{"name":"(anonymous_27)","line":598,"loc":{"start":{"line":598,"column":83},"end":{"line":598,"column":94}}},"28":{"name":"(anonymous_28)","line":603,"loc":{"start":{"line":603,"column":49},"end":{"line":603,"column":64}}},"29":{"name":"(anonymous_29)","line":617,"loc":{"start":{"line":617,"column":45},"end":{"line":617,"column":57}}},"30":{"name":"(anonymous_30)","line":621,"loc":{"start":{"line":621,"column":51},"end":{"line":621,"column":66}}},"31":{"name":"(anonymous_31)","line":624,"loc":{"start":{"line":624,"column":22},"end":{"line":624,"column":33}}},"32":{"name":"(anonymous_32)","line":631,"loc":{"start":{"line":631,"column":12},"end":{"line":631,"column":23}}},"33":{"name":"(anonymous_33)","line":637,"loc":{"start":{"line":637,"column":54},"end":{"line":637,"column":73}}},"34":{"name":"(anonymous_34)","line":639,"loc":{"start":{"line":639,"column":10},"end":{"line":639,"column":29}}},"35":{"name":"(anonymous_35)","line":651,"loc":{"start":{"line":651,"column":50},"end":{"line":651,"column":62}}},"36":{"name":"(anonymous_36)","line":656,"loc":{"start":{"line":656,"column":10},"end":{"line":656,"column":21}}},"37":{"name":"(anonymous_37)","line":658,"loc":{"start":{"line":658,"column":29},"end":{"line":658,"column":45}}},"38":{"name":"(anonymous_38)","line":683,"loc":{"start":{"line":683,"column":14},"end":{"line":683,"column":31}}},"39":{"name":"(anonymous_39)","line":685,"loc":{"start":{"line":685,"column":56},"end":{"line":685,"column":72}}},"40":{"name":"(anonymous_40)","line":699,"loc":{"start":{"line":699,"column":13},"end":{"line":699,"column":30}}},"41":{"name":"(anonymous_41)","line":705,"loc":{"start":{"line":705,"column":14},"end":{"line":705,"column":31}}},"42":{"name":"(anonymous_42)","line":706,"loc":{"start":{"line":706,"column":33},"end":{"line":706,"column":50}}},"43":{"name":"(anonymous_43)","line":713,"loc":{"start":{"line":713,"column":13},"end":{"line":713,"column":24}}},"44":{"name":"(anonymous_44)","line":718,"loc":{"start":{"line":718,"column":58},"end":{"line":718,"column":77}}},"45":{"name":"(anonymous_45)","line":720,"loc":{"start":{"line":720,"column":14},"end":{"line":720,"column":33}}},"46":{"name":"(anonymous_46)","line":736,"loc":{"start":{"line":736,"column":42},"end":{"line":736,"column":62}}},"47":{"name":"(anonymous_47)","line":738,"loc":{"start":{"line":738,"column":58},"end":{"line":738,"column":70}}},"48":{"name":"(anonymous_48)","line":767,"loc":{"start":{"line":767,"column":28},"end":{"line":767,"column":46}}},"49":{"name":"(anonymous_49)","line":774,"loc":{"start":{"line":774,"column":7},"end":{"line":774,"column":25}}},"50":{"name":"(anonymous_50)","line":781,"loc":{"start":{"line":781,"column":8},"end":{"line":781,"column":25}}},"51":{"name":"(anonymous_51)","line":803,"loc":{"start":{"line":803,"column":30},"end":{"line":803,"column":48}}},"52":{"name":"(anonymous_52)","line":807,"loc":{"start":{"line":807,"column":34},"end":{"line":807,"column":52}}},"53":{"name":"(anonymous_53)","line":823,"loc":{"start":{"line":823,"column":28},"end":{"line":823,"column":54}}},"54":{"name":"(anonymous_54)","line":862,"loc":{"start":{"line":862,"column":29},"end":{"line":862,"column":47}}},"55":{"name":"(anonymous_55)","line":868,"loc":{"start":{"line":868,"column":33},"end":{"line":868,"column":44}}},"56":{"name":"(anonymous_56)","line":873,"loc":{"start":{"line":873,"column":10},"end":{"line":873,"column":21}}},"57":{"name":"(anonymous_57)","line":890,"loc":{"start":{"line":890,"column":9},"end":{"line":890,"column":20}}},"58":{"name":"(anonymous_58)","line":895,"loc":{"start":{"line":895,"column":10},"end":{"line":895,"column":27}}},"59":{"name":"(anonymous_59)","line":909,"loc":{"start":{"line":909,"column":29},"end":{"line":909,"column":47}}},"60":{"name":"(anonymous_60)","line":917,"loc":{"start":{"line":917,"column":33},"end":{"line":917,"column":44}}},"61":{"name":"(anonymous_61)","line":922,"loc":{"start":{"line":922,"column":10},"end":{"line":922,"column":21}}},"62":{"name":"(anonymous_62)","line":929,"loc":{"start":{"line":929,"column":9},"end":{"line":929,"column":20}}},"63":{"name":"(anonymous_63)","line":962,"loc":{"start":{"line":962,"column":31},"end":{"line":962,"column":57}}},"64":{"name":"(anonymous_64)","line":979,"loc":{"start":{"line":979,"column":25},"end":{"line":979,"column":41}}},"65":{"name":"(anonymous_65)","line":990,"loc":{"start":{"line":990,"column":30},"end":{"line":990,"column":45}}},"66":{"name":"(anonymous_66)","line":1026,"loc":{"start":{"line":1026,"column":31},"end":{"line":1026,"column":57}}},"67":{"name":"(anonymous_67)","line":1032,"loc":{"start":{"line":1032,"column":25},"end":{"line":1032,"column":48}}},"68":{"name":"(anonymous_68)","line":1048,"loc":{"start":{"line":1048,"column":28},"end":{"line":1048,"column":44}}},"69":{"name":"(anonymous_69)","line":1055,"loc":{"start":{"line":1055,"column":32},"end":{"line":1055,"column":53}}},"70":{"name":"(anonymous_70)","line":1072,"loc":{"start":{"line":1072,"column":33},"end":{"line":1072,"column":50}}},"71":{"name":"(anonymous_71)","line":1075,"loc":{"start":{"line":1075,"column":24},"end":{"line":1075,"column":40}}},"72":{"name":"(anonymous_72)","line":1080,"loc":{"start":{"line":1080,"column":35},"end":{"line":1080,"column":67}}},"73":{"name":"(anonymous_73)","line":1090,"loc":{"start":{"line":1090,"column":28},"end":{"line":1090,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":36}},"2":{"start":{"line":15,"column":0},"end":{"line":64,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":17,"column":10}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":43}},"5":{"start":{"line":21,"column":2},"end":{"line":61,"column":3}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"7":{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":25,"column":6},"end":{"line":28,"column":9}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":80}},"11":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":54}},"13":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":141}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":65}},"16":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":141}},"18":{"start":{"line":45,"column":6},"end":{"line":45,"column":65}},"19":{"start":{"line":48,"column":4},"end":{"line":51,"column":5}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":141}},"21":{"start":{"line":50,"column":6},"end":{"line":50,"column":65}},"22":{"start":{"line":53,"column":4},"end":{"line":60,"column":5}},"23":{"start":{"line":54,"column":6},"end":{"line":59,"column":7}},"24":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"25":{"start":{"line":56,"column":10},"end":{"line":56,"column":78}},"26":{"start":{"line":57,"column":10},"end":{"line":57,"column":29}},"27":{"start":{"line":63,"column":2},"end":{"line":63,"column":28}},"28":{"start":{"line":85,"column":0},"end":{"line":108,"column":2}},"29":{"start":{"line":86,"column":2},"end":{"line":86,"column":23}},"30":{"start":{"line":87,"column":2},"end":{"line":87,"column":32}},"31":{"start":{"line":88,"column":2},"end":{"line":88,"column":21}},"32":{"start":{"line":89,"column":2},"end":{"line":89,"column":42}},"33":{"start":{"line":90,"column":2},"end":{"line":90,"column":32}},"34":{"start":{"line":91,"column":2},"end":{"line":91,"column":58}},"35":{"start":{"line":92,"column":2},"end":{"line":92,"column":40}},"36":{"start":{"line":98,"column":2},"end":{"line":98,"column":41}},"37":{"start":{"line":107,"column":2},"end":{"line":107,"column":41}},"38":{"start":{"line":116,"column":0},"end":{"line":118,"column":3}},"39":{"start":{"line":117,"column":20},"end":{"line":117,"column":61}},"40":{"start":{"line":126,"column":0},"end":{"line":138,"column":2}},"41":{"start":{"line":127,"column":2},"end":{"line":127,"column":12}},"42":{"start":{"line":129,"column":2},"end":{"line":132,"column":20}},"43":{"start":{"line":130,"column":4},"end":{"line":130,"column":57}},"44":{"start":{"line":131,"column":4},"end":{"line":131,"column":18}},"45":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"46":{"start":{"line":135,"column":4},"end":{"line":135,"column":46}},"47":{"start":{"line":137,"column":2},"end":{"line":137,"column":54}},"48":{"start":{"line":140,"column":0},"end":{"line":142,"column":2}},"49":{"start":{"line":141,"column":2},"end":{"line":141,"column":58}},"50":{"start":{"line":150,"column":0},"end":{"line":152,"column":2}},"51":{"start":{"line":151,"column":2},"end":{"line":151,"column":30}},"52":{"start":{"line":160,"column":0},"end":{"line":167,"column":2}},"53":{"start":{"line":161,"column":2},"end":{"line":161,"column":52}},"54":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"55":{"start":{"line":163,"column":4},"end":{"line":163,"column":28}},"56":{"start":{"line":166,"column":2},"end":{"line":166,"column":31}},"57":{"start":{"line":179,"column":0},"end":{"line":223,"column":2}},"58":{"start":{"line":180,"column":2},"end":{"line":183,"column":3}},"59":{"start":{"line":181,"column":4},"end":{"line":181,"column":18}},"60":{"start":{"line":182,"column":4},"end":{"line":182,"column":20}},"61":{"start":{"line":185,"column":2},"end":{"line":201,"column":3}},"62":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"63":{"start":{"line":187,"column":6},"end":{"line":187,"column":54}},"64":{"start":{"line":189,"column":4},"end":{"line":199,"column":5}},"65":{"start":{"line":190,"column":6},"end":{"line":198,"column":7}},"66":{"start":{"line":191,"column":8},"end":{"line":193,"column":11}},"67":{"start":{"line":192,"column":10},"end":{"line":192,"column":54}},"68":{"start":{"line":194,"column":13},"end":{"line":198,"column":7}},"69":{"start":{"line":195,"column":8},"end":{"line":195,"column":64}},"70":{"start":{"line":197,"column":8},"end":{"line":197,"column":36}},"71":{"start":{"line":200,"column":2},"end":{"line":200,"column":30}},"72":{"start":{"line":203,"column":2},"end":{"line":221,"column":3}},"73":{"start":{"line":204,"column":4},"end":{"line":205,"column":13}},"74":{"start":{"line":207,"column":4},"end":{"line":213,"column":5}},"75":{"start":{"line":208,"column":6},"end":{"line":212,"column":7}},"76":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"77":{"start":{"line":210,"column":10},"end":{"line":210,"column":49}},"78":{"start":{"line":215,"column":4},"end":{"line":219,"column":5}},"79":{"start":{"line":216,"column":6},"end":{"line":218,"column":7}},"80":{"start":{"line":217,"column":8},"end":{"line":217,"column":47}},"81":{"start":{"line":220,"column":4},"end":{"line":220,"column":18}},"82":{"start":{"line":222,"column":2},"end":{"line":222,"column":25}},"83":{"start":{"line":249,"column":0},"end":{"line":391,"column":2}},"84":{"start":{"line":250,"column":2},"end":{"line":254,"column":13}},"85":{"start":{"line":256,"column":2},"end":{"line":388,"column":3}},"86":{"start":{"line":257,"column":4},"end":{"line":257,"column":17}},"87":{"start":{"line":258,"column":4},"end":{"line":258,"column":26}},"88":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"89":{"start":{"line":261,"column":6},"end":{"line":261,"column":27}},"90":{"start":{"line":265,"column":4},"end":{"line":301,"column":5}},"91":{"start":{"line":266,"column":6},"end":{"line":270,"column":7}},"92":{"start":{"line":267,"column":8},"end":{"line":267,"column":60}},"93":{"start":{"line":269,"column":8},"end":{"line":269,"column":33}},"94":{"start":{"line":272,"column":6},"end":{"line":272,"column":58}},"95":{"start":{"line":276,"column":6},"end":{"line":295,"column":7}},"96":{"start":{"line":277,"column":8},"end":{"line":277,"column":34}},"97":{"start":{"line":278,"column":8},"end":{"line":280,"column":9}},"98":{"start":{"line":279,"column":10},"end":{"line":279,"column":60}},"99":{"start":{"line":282,"column":8},"end":{"line":284,"column":9}},"100":{"start":{"line":283,"column":10},"end":{"line":283,"column":57}},"101":{"start":{"line":286,"column":8},"end":{"line":290,"column":9}},"102":{"start":{"line":287,"column":10},"end":{"line":289,"column":11}},"103":{"start":{"line":288,"column":12},"end":{"line":288,"column":56}},"104":{"start":{"line":292,"column":8},"end":{"line":294,"column":9}},"105":{"start":{"line":293,"column":10},"end":{"line":293,"column":46}},"106":{"start":{"line":297,"column":6},"end":{"line":300,"column":7}},"107":{"start":{"line":299,"column":8},"end":{"line":299,"column":60}},"108":{"start":{"line":303,"column":4},"end":{"line":304,"column":19}},"109":{"start":{"line":304,"column":6},"end":{"line":304,"column":19}},"110":{"start":{"line":305,"column":4},"end":{"line":307,"column":5}},"111":{"start":{"line":306,"column":6},"end":{"line":306,"column":43}},"112":{"start":{"line":310,"column":4},"end":{"line":387,"column":5}},"113":{"start":{"line":311,"column":6},"end":{"line":311,"column":54}},"114":{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},"115":{"start":{"line":313,"column":8},"end":{"line":313,"column":54}},"116":{"start":{"line":314,"column":8},"end":{"line":314,"column":32}},"117":{"start":{"line":319,"column":6},"end":{"line":386,"column":7}},"118":{"start":{"line":321,"column":8},"end":{"line":321,"column":46}},"119":{"start":{"line":322,"column":8},"end":{"line":322,"column":20}},"120":{"start":{"line":325,"column":8},"end":{"line":362,"column":9}},"121":{"start":{"line":327,"column":10},"end":{"line":336,"column":11}},"122":{"start":{"line":328,"column":12},"end":{"line":334,"column":13}},"123":{"start":{"line":329,"column":14},"end":{"line":329,"column":73}},"124":{"start":{"line":330,"column":14},"end":{"line":333,"column":15}},"125":{"start":{"line":331,"column":16},"end":{"line":331,"column":56}},"126":{"start":{"line":332,"column":16},"end":{"line":332,"column":54}},"127":{"start":{"line":335,"column":12},"end":{"line":335,"column":24}},"128":{"start":{"line":339,"column":10},"end":{"line":341,"column":11}},"129":{"start":{"line":340,"column":12},"end":{"line":340,"column":24}},"130":{"start":{"line":344,"column":10},"end":{"line":346,"column":11}},"131":{"start":{"line":345,"column":12},"end":{"line":345,"column":24}},"132":{"start":{"line":349,"column":10},"end":{"line":361,"column":11}},"133":{"start":{"line":350,"column":12},"end":{"line":352,"column":13}},"134":{"start":{"line":351,"column":14},"end":{"line":351,"column":38}},"135":{"start":{"line":353,"column":12},"end":{"line":360,"column":13}},"136":{"start":{"line":354,"column":14},"end":{"line":356,"column":15}},"137":{"start":{"line":355,"column":16},"end":{"line":355,"column":56}},"138":{"start":{"line":357,"column":14},"end":{"line":359,"column":15}},"139":{"start":{"line":358,"column":16},"end":{"line":358,"column":28}},"140":{"start":{"line":365,"column":8},"end":{"line":379,"column":9}},"141":{"start":{"line":366,"column":10},"end":{"line":369,"column":11}},"142":{"start":{"line":368,"column":12},"end":{"line":368,"column":29}},"143":{"start":{"line":371,"column":10},"end":{"line":378,"column":11}},"144":{"start":{"line":373,"column":12},"end":{"line":373,"column":84}},"145":{"start":{"line":375,"column":17},"end":{"line":378,"column":11}},"146":{"start":{"line":377,"column":12},"end":{"line":377,"column":73}},"147":{"start":{"line":381,"column":8},"end":{"line":384,"column":9}},"148":{"start":{"line":382,"column":10},"end":{"line":382,"column":56}},"149":{"start":{"line":383,"column":10},"end":{"line":383,"column":34}},"150":{"start":{"line":385,"column":8},"end":{"line":385,"column":37}},"151":{"start":{"line":390,"column":2},"end":{"line":390,"column":14}},"152":{"start":{"line":393,"column":0},"end":{"line":395,"column":2}},"153":{"start":{"line":394,"column":2},"end":{"line":394,"column":27}},"154":{"start":{"line":407,"column":0},"end":{"line":421,"column":2}},"155":{"start":{"line":408,"column":2},"end":{"line":414,"column":3}},"156":{"start":{"line":409,"column":4},"end":{"line":412,"column":5}},"157":{"start":{"line":410,"column":6},"end":{"line":410,"column":33}},"158":{"start":{"line":411,"column":6},"end":{"line":411,"column":18}},"159":{"start":{"line":413,"column":4},"end":{"line":413,"column":39}},"160":{"start":{"line":416,"column":2},"end":{"line":418,"column":16}},"161":{"start":{"line":417,"column":4},"end":{"line":417,"column":29}},"162":{"start":{"line":420,"column":2},"end":{"line":420,"column":42}},"163":{"start":{"line":431,"column":0},"end":{"line":439,"column":2}},"164":{"start":{"line":432,"column":2},"end":{"line":434,"column":3}},"165":{"start":{"line":433,"column":4},"end":{"line":433,"column":41}},"166":{"start":{"line":436,"column":2},"end":{"line":438,"column":16}},"167":{"start":{"line":437,"column":4},"end":{"line":437,"column":29}},"168":{"start":{"line":441,"column":0},"end":{"line":481,"column":2}},"169":{"start":{"line":442,"column":2},"end":{"line":442,"column":45}},"170":{"start":{"line":442,"column":29},"end":{"line":442,"column":45}},"171":{"start":{"line":443,"column":2},"end":{"line":447,"column":3}},"172":{"start":{"line":444,"column":4},"end":{"line":446,"column":7}},"173":{"start":{"line":445,"column":6},"end":{"line":445,"column":33}},"174":{"start":{"line":449,"column":2},"end":{"line":455,"column":14}},"175":{"start":{"line":457,"column":2},"end":{"line":467,"column":3}},"176":{"start":{"line":458,"column":4},"end":{"line":466,"column":6}},"177":{"start":{"line":468,"column":2},"end":{"line":480,"column":3}},"178":{"start":{"line":469,"column":4},"end":{"line":479,"column":5}},"179":{"start":{"line":470,"column":6},"end":{"line":472,"column":7}},"180":{"start":{"line":471,"column":8},"end":{"line":471,"column":25}},"181":{"start":{"line":474,"column":6},"end":{"line":474,"column":83}},"182":{"start":{"line":475,"column":6},"end":{"line":475,"column":109}},"183":{"start":{"line":477,"column":6},"end":{"line":477,"column":67}},"184":{"start":{"line":478,"column":6},"end":{"line":478,"column":111}},"185":{"start":{"line":499,"column":0},"end":{"line":755,"column":2}},"186":{"start":{"line":500,"column":2},"end":{"line":502,"column":3}},"187":{"start":{"line":501,"column":4},"end":{"line":501,"column":87}},"188":{"start":{"line":504,"column":2},"end":{"line":504,"column":37}},"189":{"start":{"line":505,"column":2},"end":{"line":508,"column":5}},"190":{"start":{"line":510,"column":2},"end":{"line":518,"column":3}},"191":{"start":{"line":511,"column":4},"end":{"line":515,"column":5}},"192":{"start":{"line":512,"column":6},"end":{"line":512,"column":58}},"193":{"start":{"line":514,"column":6},"end":{"line":514,"column":90}},"194":{"start":{"line":517,"column":4},"end":{"line":517,"column":43}},"195":{"start":{"line":520,"column":2},"end":{"line":526,"column":3}},"196":{"start":{"line":521,"column":4},"end":{"line":525,"column":5}},"197":{"start":{"line":522,"column":6},"end":{"line":522,"column":32}},"198":{"start":{"line":523,"column":11},"end":{"line":525,"column":5}},"199":{"start":{"line":524,"column":6},"end":{"line":524,"column":31}},"200":{"start":{"line":528,"column":2},"end":{"line":535,"column":54}},"201":{"start":{"line":537,"column":2},"end":{"line":539,"column":3}},"202":{"start":{"line":538,"column":4},"end":{"line":538,"column":39}},"203":{"start":{"line":541,"column":2},"end":{"line":547,"column":3}},"204":{"start":{"line":543,"column":4},"end":{"line":545,"column":7}},"205":{"start":{"line":544,"column":6},"end":{"line":544,"column":35}},"206":{"start":{"line":546,"column":4},"end":{"line":546,"column":26}},"207":{"start":{"line":549,"column":2},"end":{"line":557,"column":3}},"208":{"start":{"line":550,"column":4},"end":{"line":552,"column":5}},"209":{"start":{"line":551,"column":6},"end":{"line":551,"column":41}},"210":{"start":{"line":554,"column":4},"end":{"line":556,"column":5}},"211":{"start":{"line":555,"column":6},"end":{"line":555,"column":45}},"212":{"start":{"line":559,"column":2},"end":{"line":563,"column":3}},"213":{"start":{"line":560,"column":4},"end":{"line":562,"column":5}},"214":{"start":{"line":561,"column":6},"end":{"line":561,"column":141}},"215":{"start":{"line":565,"column":2},"end":{"line":567,"column":3}},"216":{"start":{"line":566,"column":4},"end":{"line":566,"column":91}},"217":{"start":{"line":569,"column":2},"end":{"line":571,"column":3}},"218":{"start":{"line":570,"column":4},"end":{"line":570,"column":91}},"219":{"start":{"line":573,"column":2},"end":{"line":754,"column":5}},"220":{"start":{"line":575,"column":4},"end":{"line":584,"column":5}},"221":{"start":{"line":576,"column":6},"end":{"line":583,"column":9}},"222":{"start":{"line":578,"column":8},"end":{"line":578,"column":61}},"223":{"start":{"line":578,"column":27},"end":{"line":578,"column":61}},"224":{"start":{"line":580,"column":8},"end":{"line":582,"column":11}},"225":{"start":{"line":581,"column":10},"end":{"line":581,"column":29}},"226":{"start":{"line":581,"column":19},"end":{"line":581,"column":29}},"227":{"start":{"line":586,"column":4},"end":{"line":753,"column":7}},"228":{"start":{"line":588,"column":6},"end":{"line":630,"column":7}},"229":{"start":{"line":589,"column":8},"end":{"line":592,"column":73}},"230":{"start":{"line":594,"column":8},"end":{"line":596,"column":9}},"231":{"start":{"line":595,"column":10},"end":{"line":595,"column":66}},"232":{"start":{"line":598,"column":8},"end":{"line":629,"column":11}},"233":{"start":{"line":599,"column":10},"end":{"line":610,"column":11}},"234":{"start":{"line":600,"column":12},"end":{"line":600,"column":99}},"235":{"start":{"line":602,"column":12},"end":{"line":602,"column":29}},"236":{"start":{"line":603,"column":12},"end":{"line":607,"column":15}},"237":{"start":{"line":604,"column":14},"end":{"line":606,"column":15}},"238":{"start":{"line":605,"column":16},"end":{"line":605,"column":38}},"239":{"start":{"line":609,"column":12},"end":{"line":609,"column":72}},"240":{"start":{"line":612,"column":10},"end":{"line":628,"column":11}},"241":{"start":{"line":613,"column":12},"end":{"line":627,"column":13}},"242":{"start":{"line":616,"column":14},"end":{"line":616,"column":94}},"243":{"start":{"line":617,"column":14},"end":{"line":626,"column":17}},"244":{"start":{"line":619,"column":16},"end":{"line":619,"column":69}},"245":{"start":{"line":619,"column":35},"end":{"line":619,"column":69}},"246":{"start":{"line":621,"column":16},"end":{"line":623,"column":19}},"247":{"start":{"line":622,"column":18},"end":{"line":622,"column":37}},"248":{"start":{"line":622,"column":27},"end":{"line":622,"column":37}},"249":{"start":{"line":625,"column":16},"end":{"line":625,"column":36}},"250":{"start":{"line":632,"column":6},"end":{"line":632,"column":46}},"251":{"start":{"line":632,"column":34},"end":{"line":632,"column":46}},"252":{"start":{"line":633,"column":6},"end":{"line":633,"column":41}},"253":{"start":{"line":633,"column":29},"end":{"line":633,"column":41}},"254":{"start":{"line":634,"column":6},"end":{"line":634,"column":79}},"255":{"start":{"line":634,"column":67},"end":{"line":634,"column":79}},"256":{"start":{"line":637,"column":6},"end":{"line":654,"column":9}},"257":{"start":{"line":638,"column":8},"end":{"line":638,"column":56}},"258":{"start":{"line":640,"column":8},"end":{"line":640,"column":44}},"259":{"start":{"line":641,"column":8},"end":{"line":641,"column":48}},"260":{"start":{"line":641,"column":23},"end":{"line":641,"column":48}},"261":{"start":{"line":643,"column":8},"end":{"line":649,"column":21}},"262":{"start":{"line":651,"column":8},"end":{"line":653,"column":11}},"263":{"start":{"line":652,"column":10},"end":{"line":652,"column":108}},"264":{"start":{"line":657,"column":6},"end":{"line":657,"column":26}},"265":{"start":{"line":658,"column":6},"end":{"line":662,"column":9}},"266":{"start":{"line":659,"column":8},"end":{"line":661,"column":9}},"267":{"start":{"line":660,"column":10},"end":{"line":660,"column":33}},"268":{"start":{"line":663,"column":6},"end":{"line":663,"column":42}},"269":{"start":{"line":663,"column":30},"end":{"line":663,"column":42}},"270":{"start":{"line":664,"column":6},"end":{"line":664,"column":60}},"271":{"start":{"line":664,"column":48},"end":{"line":664,"column":60}},"272":{"start":{"line":666,"column":6},"end":{"line":668,"column":20}},"273":{"start":{"line":670,"column":6},"end":{"line":680,"column":7}},"274":{"start":{"line":671,"column":8},"end":{"line":671,"column":25}},"275":{"start":{"line":672,"column":8},"end":{"line":672,"column":74}},"276":{"start":{"line":674,"column":8},"end":{"line":674,"column":33}},"277":{"start":{"line":676,"column":8},"end":{"line":676,"column":80}},"278":{"start":{"line":678,"column":8},"end":{"line":678,"column":25}},"279":{"start":{"line":679,"column":8},"end":{"line":679,"column":81}},"280":{"start":{"line":682,"column":6},"end":{"line":752,"column":11}},"281":{"start":{"line":685,"column":10},"end":{"line":693,"column":13}},"282":{"start":{"line":686,"column":12},"end":{"line":692,"column":13}},"283":{"start":{"line":690,"column":14},"end":{"line":690,"column":74}},"284":{"start":{"line":691,"column":14},"end":{"line":691,"column":66}},"285":{"start":{"line":694,"column":10},"end":{"line":694,"column":55}},"286":{"start":{"line":696,"column":10},"end":{"line":696,"column":66}},"287":{"start":{"line":697,"column":10},"end":{"line":697,"column":24}},"288":{"start":{"line":701,"column":10},"end":{"line":703,"column":11}},"289":{"start":{"line":702,"column":12},"end":{"line":702,"column":72}},"290":{"start":{"line":706,"column":10},"end":{"line":709,"column":13}},"291":{"start":{"line":707,"column":12},"end":{"line":707,"column":73}},"292":{"start":{"line":708,"column":12},"end":{"line":708,"column":39}},"293":{"start":{"line":710,"column":10},"end":{"line":710,"column":35}},"294":{"start":{"line":711,"column":10},"end":{"line":711,"column":24}},"295":{"start":{"line":714,"column":10},"end":{"line":714,"column":41}},"296":{"start":{"line":714,"column":29},"end":{"line":714,"column":41}},"297":{"start":{"line":715,"column":10},"end":{"line":715,"column":83}},"298":{"start":{"line":715,"column":71},"end":{"line":715,"column":83}},"299":{"start":{"line":718,"column":10},"end":{"line":751,"column":13}},"300":{"start":{"line":719,"column":12},"end":{"line":719,"column":63}},"301":{"start":{"line":721,"column":12},"end":{"line":721,"column":49}},"302":{"start":{"line":723,"column":12},"end":{"line":723,"column":53}},"303":{"start":{"line":723,"column":28},"end":{"line":723,"column":53}},"304":{"start":{"line":724,"column":12},"end":{"line":724,"column":67}},"305":{"start":{"line":724,"column":43},"end":{"line":724,"column":67}},"306":{"start":{"line":725,"column":12},"end":{"line":725,"column":60}},"307":{"start":{"line":725,"column":35},"end":{"line":725,"column":60}},"308":{"start":{"line":727,"column":12},"end":{"line":733,"column":25}},"309":{"start":{"line":736,"column":12},"end":{"line":750,"column":15}},"310":{"start":{"line":737,"column":14},"end":{"line":749,"column":15}},"311":{"start":{"line":738,"column":16},"end":{"line":745,"column":19}},"312":{"start":{"line":739,"column":18},"end":{"line":739,"column":34}},"313":{"start":{"line":740,"column":18},"end":{"line":740,"column":113}},"314":{"start":{"line":741,"column":18},"end":{"line":741,"column":119}},"315":{"start":{"line":743,"column":18},"end":{"line":743,"column":70}},"316":{"start":{"line":744,"column":18},"end":{"line":744,"column":89}},"317":{"start":{"line":747,"column":16},"end":{"line":747,"column":116}},"318":{"start":{"line":748,"column":16},"end":{"line":748,"column":53}},"319":{"start":{"line":767,"column":0},"end":{"line":790,"column":2}},"320":{"start":{"line":768,"column":2},"end":{"line":771,"column":5}},"321":{"start":{"line":773,"column":2},"end":{"line":789,"column":18}},"322":{"start":{"line":775,"column":4},"end":{"line":779,"column":5}},"323":{"start":{"line":776,"column":6},"end":{"line":778,"column":8}},"324":{"start":{"line":783,"column":4},"end":{"line":783,"column":36}},"325":{"start":{"line":785,"column":4},"end":{"line":788,"column":7}},"326":{"start":{"line":803,"column":0},"end":{"line":805,"column":2}},"327":{"start":{"line":804,"column":2},"end":{"line":804,"column":57}},"328":{"start":{"line":807,"column":0},"end":{"line":809,"column":2}},"329":{"start":{"line":808,"column":2},"end":{"line":808,"column":61}},"330":{"start":{"line":823,"column":0},"end":{"line":847,"column":2}},"331":{"start":{"line":824,"column":2},"end":{"line":827,"column":17}},"332":{"start":{"line":829,"column":2},"end":{"line":829,"column":26}},"333":{"start":{"line":830,"column":2},"end":{"line":830,"column":58}},"334":{"start":{"line":830,"column":30},"end":{"line":830,"column":58}},"335":{"start":{"line":832,"column":2},"end":{"line":832,"column":37}},"336":{"start":{"line":833,"column":2},"end":{"line":833,"column":40}},"337":{"start":{"line":834,"column":2},"end":{"line":834,"column":41}},"338":{"start":{"line":835,"column":2},"end":{"line":835,"column":31}},"339":{"start":{"line":838,"column":2},"end":{"line":838,"column":84}},"340":{"start":{"line":839,"column":2},"end":{"line":839,"column":53}},"341":{"start":{"line":841,"column":2},"end":{"line":844,"column":3}},"342":{"start":{"line":842,"column":4},"end":{"line":842,"column":60}},"343":{"start":{"line":843,"column":4},"end":{"line":843,"column":43}},"344":{"start":{"line":846,"column":2},"end":{"line":846,"column":28}},"345":{"start":{"line":848,"column":0},"end":{"line":848,"column":64}},"346":{"start":{"line":862,"column":0},"end":{"line":898,"column":2}},"347":{"start":{"line":863,"column":2},"end":{"line":866,"column":14}},"348":{"start":{"line":868,"column":2},"end":{"line":897,"column":5}},"349":{"start":{"line":870,"column":4},"end":{"line":872,"column":5}},"350":{"start":{"line":871,"column":6},"end":{"line":871,"column":65}},"351":{"start":{"line":874,"column":4},"end":{"line":874,"column":29}},"352":{"start":{"line":876,"column":4},"end":{"line":889,"column":5}},"353":{"start":{"line":877,"column":6},"end":{"line":879,"column":22}},"354":{"start":{"line":881,"column":6},"end":{"line":881,"column":33}},"355":{"start":{"line":882,"column":6},"end":{"line":882,"column":94}},"356":{"start":{"line":884,"column":6},"end":{"line":884,"column":46}},"357":{"start":{"line":886,"column":6},"end":{"line":886,"column":150}},"358":{"start":{"line":888,"column":6},"end":{"line":888,"column":164}},"359":{"start":{"line":892,"column":4},"end":{"line":894,"column":5}},"360":{"start":{"line":893,"column":6},"end":{"line":893,"column":64}},"361":{"start":{"line":896,"column":4},"end":{"line":896,"column":18}},"362":{"start":{"line":909,"column":0},"end":{"line":935,"column":2}},"363":{"start":{"line":910,"column":2},"end":{"line":910,"column":91}},"364":{"start":{"line":910,"column":50},"end":{"line":910,"column":91}},"365":{"start":{"line":912,"column":2},"end":{"line":915,"column":14}},"366":{"start":{"line":917,"column":2},"end":{"line":934,"column":5}},"367":{"start":{"line":919,"column":4},"end":{"line":921,"column":5}},"368":{"start":{"line":920,"column":6},"end":{"line":920,"column":65}},"369":{"start":{"line":923,"column":4},"end":{"line":925,"column":123}},"370":{"start":{"line":927,"column":4},"end":{"line":927,"column":59}},"371":{"start":{"line":928,"column":4},"end":{"line":928,"column":79}},"372":{"start":{"line":931,"column":4},"end":{"line":933,"column":5}},"373":{"start":{"line":932,"column":6},"end":{"line":932,"column":64}},"374":{"start":{"line":962,"column":0},"end":{"line":999,"column":2}},"375":{"start":{"line":963,"column":2},"end":{"line":966,"column":12}},"376":{"start":{"line":968,"column":2},"end":{"line":972,"column":5}},"377":{"start":{"line":974,"column":2},"end":{"line":974,"column":50}},"378":{"start":{"line":976,"column":2},"end":{"line":984,"column":3}},"379":{"start":{"line":977,"column":4},"end":{"line":977,"column":32}},"380":{"start":{"line":978,"column":9},"end":{"line":984,"column":3}},"381":{"start":{"line":979,"column":4},"end":{"line":981,"column":7}},"382":{"start":{"line":980,"column":6},"end":{"line":980,"column":33}},"383":{"start":{"line":983,"column":4},"end":{"line":983,"column":20}},"384":{"start":{"line":986,"column":2},"end":{"line":988,"column":3}},"385":{"start":{"line":987,"column":4},"end":{"line":987,"column":132}},"386":{"start":{"line":990,"column":2},"end":{"line":996,"column":11}},"387":{"start":{"line":992,"column":4},"end":{"line":995,"column":5}},"388":{"start":{"line":993,"column":6},"end":{"line":993,"column":66}},"389":{"start":{"line":994,"column":6},"end":{"line":994,"column":26}},"390":{"start":{"line":998,"column":2},"end":{"line":998,"column":132}},"391":{"start":{"line":1026,"column":0},"end":{"line":1040,"column":2}},"392":{"start":{"line":1027,"column":2},"end":{"line":1029,"column":5}},"393":{"start":{"line":1031,"column":2},"end":{"line":1035,"column":3}},"394":{"start":{"line":1032,"column":4},"end":{"line":1034,"column":7}},"395":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":29}},"396":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":30}},"397":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":41}},"398":{"start":{"line":1048,"column":0},"end":{"line":1064,"column":2}},"399":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":20}},"400":{"start":{"line":1051,"column":2},"end":{"line":1053,"column":3}},"401":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":17}},"402":{"start":{"line":1055,"column":2},"end":{"line":1061,"column":5}},"403":{"start":{"line":1056,"column":4},"end":{"line":1060,"column":5}},"404":{"start":{"line":1057,"column":6},"end":{"line":1057,"column":79}},"405":{"start":{"line":1059,"column":6},"end":{"line":1059,"column":59}},"406":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":16}},"407":{"start":{"line":1072,"column":0},"end":{"line":1078,"column":2}},"408":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":18}},"409":{"start":{"line":1075,"column":2},"end":{"line":1077,"column":5}},"410":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":30}},"411":{"start":{"line":1080,"column":0},"end":{"line":1082,"column":2}},"412":{"start":{"line":1081,"column":2},"end":{"line":1081,"column":42}},"413":{"start":{"line":1090,"column":0},"end":{"line":1094,"column":2}},"414":{"start":{"line":1091,"column":2},"end":{"line":1093,"column":5}},"415":{"start":{"line":1096,"column":0},"end":{"line":1096,"column":26}},"416":{"start":{"line":1097,"column":0},"end":{"line":1097,"column":35}},"417":{"start":{"line":1098,"column":0},"end":{"line":1098,"column":34}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":36}},{"start":{"line":19,"column":40},"end":{"line":19,"column":42}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":53},"end":{"line":27,"column":58}},{"start":{"line":27,"column":61},"end":{"line":27,"column":79}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":21}},{"start":{"line":27,"column":25},"end":{"line":27,"column":49}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"8":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},{"start":{"line":38,"column":53},"end":{"line":38,"column":104}}]},"9":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"10":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},{"start":{"line":43,"column":53},"end":{"line":43,"column":104}}]},"11":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"12":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":49}},{"start":{"line":48,"column":53},"end":{"line":48,"column":104}}]},"13":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"14":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"15":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":18},"end":{"line":90,"column":25}},{"start":{"line":90,"column":29},"end":{"line":90,"column":31}}]},"16":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"17":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"18":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":31}},{"start":{"line":162,"column":35},"end":{"line":162,"column":58}}]},"19":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"20":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":27}},{"start":{"line":180,"column":31},"end":{"line":180,"column":54}}]},"21":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"22":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"23":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"24":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":15}},{"start":{"line":189,"column":19},"end":{"line":189,"column":32}},{"start":{"line":189,"column":36},"end":{"line":189,"column":57}},{"start":{"line":189,"column":61},"end":{"line":189,"column":107}}]},"25":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":6}},{"start":{"line":190,"column":6},"end":{"line":190,"column":6}}]},"26":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":13},"end":{"line":194,"column":13}},{"start":{"line":194,"column":13},"end":{"line":194,"column":13}}]},"27":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"28":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":28}},{"start":{"line":203,"column":33},"end":{"line":203,"column":40}},{"start":{"line":203,"column":44},"end":{"line":203,"column":57}},{"start":{"line":203,"column":61},"end":{"line":203,"column":82}},{"start":{"line":203,"column":88},"end":{"line":203,"column":95}},{"start":{"line":203,"column":99},"end":{"line":203,"column":112}}]},"29":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"30":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"31":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":6},"end":{"line":216,"column":6}},{"start":{"line":216,"column":6},"end":{"line":216,"column":6}}]},"32":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":10},"end":{"line":216,"column":38}},{"start":{"line":216,"column":42},"end":{"line":216,"column":78}}]},"33":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"34":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":29}},{"start":{"line":256,"column":33},"end":{"line":256,"column":45}}]},"35":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":14},"end":{"line":258,"column":19}},{"start":{"line":258,"column":23},"end":{"line":258,"column":25}}]},"36":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"37":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"38":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":19}},{"start":{"line":265,"column":23},"end":{"line":265,"column":64}},{"start":{"line":265,"column":68},"end":{"line":265,"column":100}},{"start":{"line":265,"column":104},"end":{"line":265,"column":137}},{"start":{"line":265,"column":141},"end":{"line":265,"column":171}}]},"39":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":25},"end":{"line":265,"column":38}},{"start":{"line":265,"column":42},"end":{"line":265,"column":63}}]},"40":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":70},"end":{"line":265,"column":77}},{"start":{"line":265,"column":81},"end":{"line":265,"column":99}}]},"41":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":6},"end":{"line":266,"column":6}},{"start":{"line":266,"column":6},"end":{"line":266,"column":6}}]},"42":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":6}},{"start":{"line":276,"column":6},"end":{"line":276,"column":6}}]},"43":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":8},"end":{"line":278,"column":8}},{"start":{"line":278,"column":8},"end":{"line":278,"column":8}}]},"44":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":8}},{"start":{"line":282,"column":8},"end":{"line":282,"column":8}}]},"45":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":10},"end":{"line":287,"column":10}},{"start":{"line":287,"column":10},"end":{"line":287,"column":10}}]},"46":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"47":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"48":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"49":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"50":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":20}},{"start":{"line":310,"column":24},"end":{"line":310,"column":48}}]},"51":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":6}},{"start":{"line":312,"column":6},"end":{"line":312,"column":6}}]},"52":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":10},"end":{"line":312,"column":35}},{"start":{"line":312,"column":39},"end":{"line":312,"column":53}},{"start":{"line":312,"column":57},"end":{"line":312,"column":80}}]},"53":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"54":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":10},"end":{"line":319,"column":23}},{"start":{"line":319,"column":27},"end":{"line":319,"column":48}},{"start":{"line":319,"column":52},"end":{"line":319,"column":98}}]},"55":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":8},"end":{"line":325,"column":8}},{"start":{"line":325,"column":8},"end":{"line":325,"column":8}}]},"56":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":10},"end":{"line":327,"column":10}},{"start":{"line":327,"column":10},"end":{"line":327,"column":10}}]},"57":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":12},"end":{"line":328,"column":12}},{"start":{"line":328,"column":12},"end":{"line":328,"column":12}}]},"58":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":16},"end":{"line":328,"column":37}},{"start":{"line":328,"column":41},"end":{"line":328,"column":87}}]},"59":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":14},"end":{"line":330,"column":14}},{"start":{"line":330,"column":14},"end":{"line":330,"column":14}}]},"60":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":10},"end":{"line":339,"column":10}},{"start":{"line":339,"column":10},"end":{"line":339,"column":10}}]},"61":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":14},"end":{"line":339,"column":40}},{"start":{"line":339,"column":44},"end":{"line":339,"column":57}},{"start":{"line":339,"column":61},"end":{"line":339,"column":90}}]},"62":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":10},"end":{"line":344,"column":10}},{"start":{"line":344,"column":10},"end":{"line":344,"column":10}}]},"63":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":14},"end":{"line":344,"column":31}},{"start":{"line":344,"column":35},"end":{"line":344,"column":68}},{"start":{"line":344,"column":72},"end":{"line":344,"column":108}}]},"64":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":10}},{"start":{"line":349,"column":10},"end":{"line":349,"column":10}}]},"65":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":14},"end":{"line":349,"column":43}},{"start":{"line":349,"column":47},"end":{"line":349,"column":79}},{"start":{"line":349,"column":83},"end":{"line":349,"column":90}},{"start":{"line":349,"column":94},"end":{"line":349,"column":119}}]},"66":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":12},"end":{"line":350,"column":12}},{"start":{"line":350,"column":12},"end":{"line":350,"column":12}}]},"67":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":12},"end":{"line":353,"column":12}},{"start":{"line":353,"column":12},"end":{"line":353,"column":12}}]},"68":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":14},"end":{"line":354,"column":14}},{"start":{"line":354,"column":14},"end":{"line":354,"column":14}}]},"69":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":14},"end":{"line":357,"column":14}},{"start":{"line":357,"column":14},"end":{"line":357,"column":14}}]},"70":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":8}},{"start":{"line":365,"column":8},"end":{"line":365,"column":8}}]},"71":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":12},"end":{"line":365,"column":44}},{"start":{"line":365,"column":48},"end":{"line":365,"column":83}},{"start":{"line":365,"column":87},"end":{"line":365,"column":101}},{"start":{"line":365,"column":105},"end":{"line":365,"column":124}},{"start":{"line":365,"column":128},"end":{"line":365,"column":153}}]},"72":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":10},"end":{"line":366,"column":10}},{"start":{"line":366,"column":10},"end":{"line":366,"column":10}}]},"73":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":14},"end":{"line":366,"column":36}},{"start":{"line":366,"column":40},"end":{"line":366,"column":58}}]},"74":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":10},"end":{"line":371,"column":10}},{"start":{"line":371,"column":10},"end":{"line":371,"column":10}}]},"75":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":41},"end":{"line":373,"column":45}},{"start":{"line":373,"column":48},"end":{"line":373,"column":83}}]},"76":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":70},"end":{"line":373,"column":75}},{"start":{"line":373,"column":78},"end":{"line":373,"column":83}}]},"77":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":17},"end":{"line":375,"column":17}},{"start":{"line":375,"column":17},"end":{"line":375,"column":17}}]},"78":{"line":377,"type":"cond-expr","locations":[{"start":{"line":377,"column":36},"end":{"line":377,"column":40}},{"start":{"line":377,"column":43},"end":{"line":377,"column":72}}]},"79":{"line":377,"type":"cond-expr","locations":[{"start":{"line":377,"column":59},"end":{"line":377,"column":64}},{"start":{"line":377,"column":67},"end":{"line":377,"column":72}}]},"80":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":8},"end":{"line":381,"column":8}},{"start":{"line":381,"column":8},"end":{"line":381,"column":8}}]},"81":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":12},"end":{"line":381,"column":24}},{"start":{"line":381,"column":30},"end":{"line":381,"column":55}},{"start":{"line":381,"column":59},"end":{"line":381,"column":73}},{"start":{"line":381,"column":78},"end":{"line":381,"column":101}}]},"82":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]},"83":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":4},"end":{"line":409,"column":4}},{"start":{"line":409,"column":4},"end":{"line":409,"column":4}}]},"84":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":11},"end":{"line":413,"column":29}},{"start":{"line":413,"column":33},"end":{"line":413,"column":38}}]},"85":{"line":420,"type":"cond-expr","locations":[{"start":{"line":420,"column":26},"end":{"line":420,"column":33}},{"start":{"line":420,"column":36},"end":{"line":420,"column":41}}]},"86":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"87":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"88":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":2},"end":{"line":443,"column":2}},{"start":{"line":443,"column":2},"end":{"line":443,"column":2}}]},"89":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"90":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":2},"end":{"line":468,"column":2}},{"start":{"line":468,"column":2},"end":{"line":468,"column":2}}]},"91":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":6},"end":{"line":468,"column":46}},{"start":{"line":468,"column":50},"end":{"line":468,"column":83}}]},"92":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"93":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":6},"end":{"line":470,"column":6}},{"start":{"line":470,"column":6},"end":{"line":470,"column":6}}]},"94":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":17},"end":{"line":474,"column":22}},{"start":{"line":474,"column":26},"end":{"line":474,"column":61}},{"start":{"line":474,"column":67},"end":{"line":474,"column":81}}]},"95":{"line":475,"type":"cond-expr","locations":[{"start":{"line":475,"column":61},"end":{"line":475,"column":65}},{"start":{"line":475,"column":68},"end":{"line":475,"column":108}}]},"96":{"line":477,"type":"binary-expr","locations":[{"start":{"line":477,"column":16},"end":{"line":477,"column":24}},{"start":{"line":477,"column":28},"end":{"line":477,"column":66}}]},"97":{"line":478,"type":"cond-expr","locations":[{"start":{"line":478,"column":61},"end":{"line":478,"column":63}},{"start":{"line":478,"column":66},"end":{"line":478,"column":110}}]},"98":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"99":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":2},"end":{"line":510,"column":2}},{"start":{"line":510,"column":2},"end":{"line":510,"column":2}}]},"100":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":4},"end":{"line":511,"column":4}},{"start":{"line":511,"column":4},"end":{"line":511,"column":4}}]},"101":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"102":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":4},"end":{"line":521,"column":4}},{"start":{"line":521,"column":4},"end":{"line":521,"column":4}}]},"103":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":11},"end":{"line":523,"column":11}},{"start":{"line":523,"column":11},"end":{"line":523,"column":11}}]},"104":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":28},"end":{"line":530,"column":42}},{"start":{"line":530,"column":46},"end":{"line":530,"column":86}}]},"105":{"line":533,"type":"cond-expr","locations":[{"start":{"line":533,"column":32},"end":{"line":533,"column":40}},{"start":{"line":533,"column":43},"end":{"line":533,"column":51}}]},"106":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"107":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":6},"end":{"line":537,"column":19}},{"start":{"line":537,"column":23},"end":{"line":537,"column":49}},{"start":{"line":537,"column":53},"end":{"line":537,"column":97}}]},"108":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":541,"column":2}},{"start":{"line":541,"column":2},"end":{"line":541,"column":2}}]},"109":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":6},"end":{"line":541,"column":29}},{"start":{"line":541,"column":33},"end":{"line":541,"column":92}}]},"110":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":35},"end":{"line":541,"column":51}},{"start":{"line":541,"column":55},"end":{"line":541,"column":91}}]},"111":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":2},"end":{"line":549,"column":2}},{"start":{"line":549,"column":2},"end":{"line":549,"column":2}}]},"112":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"113":{"line":550,"type":"binary-expr","locations":[{"start":{"line":550,"column":8},"end":{"line":550,"column":21}},{"start":{"line":550,"column":25},"end":{"line":550,"column":69}}]},"114":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":4},"end":{"line":554,"column":4}},{"start":{"line":554,"column":4},"end":{"line":554,"column":4}}]},"115":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":8},"end":{"line":554,"column":27}},{"start":{"line":554,"column":31},"end":{"line":554,"column":63}},{"start":{"line":554,"column":67},"end":{"line":554,"column":109}}]},"116":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"117":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":4},"end":{"line":560,"column":4}},{"start":{"line":560,"column":4},"end":{"line":560,"column":4}}]},"118":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":8},"end":{"line":560,"column":22}},{"start":{"line":560,"column":26},"end":{"line":560,"column":77}}]},"119":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":2},"end":{"line":565,"column":2}},{"start":{"line":565,"column":2},"end":{"line":565,"column":2}}]},"120":{"line":565,"type":"binary-expr","locations":[{"start":{"line":565,"column":6},"end":{"line":565,"column":19}},{"start":{"line":565,"column":23},"end":{"line":565,"column":38}},{"start":{"line":565,"column":42},"end":{"line":565,"column":86}}]},"121":{"line":566,"type":"binary-expr","locations":[{"start":{"line":566,"column":37},"end":{"line":566,"column":83}},{"start":{"line":566,"column":87},"end":{"line":566,"column":90}}]},"122":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":2},"end":{"line":569,"column":2}},{"start":{"line":569,"column":2},"end":{"line":569,"column":2}}]},"123":{"line":569,"type":"binary-expr","locations":[{"start":{"line":569,"column":6},"end":{"line":569,"column":22}},{"start":{"line":569,"column":26},"end":{"line":569,"column":39}},{"start":{"line":569,"column":43},"end":{"line":569,"column":74}}]},"124":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":37},"end":{"line":570,"column":83}},{"start":{"line":570,"column":87},"end":{"line":570,"column":90}}]},"125":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":575,"column":4}},{"start":{"line":575,"column":4},"end":{"line":575,"column":4}}]},"126":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":8},"end":{"line":578,"column":8}},{"start":{"line":578,"column":8},"end":{"line":578,"column":8}}]},"127":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":10},"end":{"line":581,"column":10}},{"start":{"line":581,"column":10},"end":{"line":581,"column":10}}]},"128":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":6},"end":{"line":588,"column":6}},{"start":{"line":588,"column":6},"end":{"line":588,"column":6}}]},"129":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":8},"end":{"line":594,"column":8}},{"start":{"line":594,"column":8},"end":{"line":594,"column":8}}]},"130":{"line":594,"type":"binary-expr","locations":[{"start":{"line":594,"column":12},"end":{"line":594,"column":25}},{"start":{"line":594,"column":29},"end":{"line":594,"column":73}}]},"131":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":10},"end":{"line":599,"column":10}},{"start":{"line":599,"column":10},"end":{"line":599,"column":10}}]},"132":{"line":599,"type":"binary-expr","locations":[{"start":{"line":599,"column":14},"end":{"line":599,"column":35}},{"start":{"line":599,"column":39},"end":{"line":599,"column":56}}]},"133":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":14},"end":{"line":604,"column":14}},{"start":{"line":604,"column":14},"end":{"line":604,"column":14}}]},"134":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":10},"end":{"line":612,"column":10}},{"start":{"line":612,"column":10},"end":{"line":612,"column":10}}]},"135":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":12},"end":{"line":613,"column":12}},{"start":{"line":613,"column":12},"end":{"line":613,"column":12}}]},"136":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":16},"end":{"line":619,"column":16}},{"start":{"line":619,"column":16},"end":{"line":619,"column":16}}]},"137":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":18},"end":{"line":622,"column":18}},{"start":{"line":622,"column":18},"end":{"line":622,"column":18}}]},"138":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":6},"end":{"line":632,"column":6}},{"start":{"line":632,"column":6},"end":{"line":632,"column":6}}]},"139":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":6},"end":{"line":633,"column":6}},{"start":{"line":633,"column":6},"end":{"line":633,"column":6}}]},"140":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":6},"end":{"line":634,"column":6}},{"start":{"line":634,"column":6},"end":{"line":634,"column":6}}]},"141":{"line":634,"type":"binary-expr","locations":[{"start":{"line":634,"column":10},"end":{"line":634,"column":32}},{"start":{"line":634,"column":36},"end":{"line":634,"column":65}}]},"142":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":8},"end":{"line":641,"column":8}},{"start":{"line":641,"column":8},"end":{"line":641,"column":8}}]},"143":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":8},"end":{"line":659,"column":8}},{"start":{"line":659,"column":8},"end":{"line":659,"column":8}}]},"144":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":6},"end":{"line":663,"column":6}},{"start":{"line":663,"column":6},"end":{"line":663,"column":6}}]},"145":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":6},"end":{"line":664,"column":6}},{"start":{"line":664,"column":6},"end":{"line":664,"column":6}}]},"146":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":10},"end":{"line":664,"column":25}},{"start":{"line":664,"column":29},"end":{"line":664,"column":46}}]},"147":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":6},"end":{"line":670,"column":6}},{"start":{"line":670,"column":6},"end":{"line":670,"column":6}}]},"148":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":12},"end":{"line":686,"column":12}},{"start":{"line":686,"column":12},"end":{"line":686,"column":12}}]},"149":{"line":686,"type":"binary-expr","locations":[{"start":{"line":686,"column":16},"end":{"line":686,"column":52}},{"start":{"line":687,"column":16},"end":{"line":687,"column":74}},{"start":{"line":688,"column":16},"end":{"line":688,"column":61}}]},"150":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":10},"end":{"line":701,"column":10}},{"start":{"line":701,"column":10},"end":{"line":701,"column":10}}]},"151":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":10},"end":{"line":714,"column":10}},{"start":{"line":714,"column":10},"end":{"line":714,"column":10}}]},"152":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":10},"end":{"line":715,"column":10}},{"start":{"line":715,"column":10},"end":{"line":715,"column":10}}]},"153":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":14},"end":{"line":715,"column":36}},{"start":{"line":715,"column":40},"end":{"line":715,"column":69}}]},"154":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":12},"end":{"line":723,"column":12}},{"start":{"line":723,"column":12},"end":{"line":723,"column":12}}]},"155":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":12},"end":{"line":724,"column":12}},{"start":{"line":724,"column":12},"end":{"line":724,"column":12}}]},"156":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":12},"end":{"line":725,"column":12}},{"start":{"line":725,"column":12},"end":{"line":725,"column":12}}]},"157":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":14},"end":{"line":737,"column":14}},{"start":{"line":737,"column":14},"end":{"line":737,"column":14}}]},"158":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":13},"end":{"line":770,"column":34}},{"start":{"line":770,"column":38},"end":{"line":770,"column":42}}]},"159":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":4},"end":{"line":775,"column":4}},{"start":{"line":775,"column":4},"end":{"line":775,"column":4}}]},"160":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":13},"end":{"line":787,"column":17}},{"start":{"line":787,"column":21},"end":{"line":787,"column":40}}]},"161":{"line":824,"type":"binary-expr","locations":[{"start":{"line":824,"column":22},"end":{"line":824,"column":36}},{"start":{"line":824,"column":40},"end":{"line":824,"column":42}}]},"162":{"line":829,"type":"binary-expr","locations":[{"start":{"line":829,"column":12},"end":{"line":829,"column":19}},{"start":{"line":829,"column":23},"end":{"line":829,"column":25}}]},"163":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":2},"end":{"line":830,"column":2}},{"start":{"line":830,"column":2},"end":{"line":830,"column":2}}]},"164":{"line":838,"type":"binary-expr","locations":[{"start":{"line":838,"column":39},"end":{"line":838,"column":53}},{"start":{"line":838,"column":57},"end":{"line":838,"column":59}}]},"165":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"166":{"line":870,"type":"if","locations":[{"start":{"line":870,"column":4},"end":{"line":870,"column":4}},{"start":{"line":870,"column":4},"end":{"line":870,"column":4}}]},"167":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":4},"end":{"line":876,"column":4}},{"start":{"line":876,"column":4},"end":{"line":876,"column":4}}]},"168":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":8},"end":{"line":876,"column":49}},{"start":{"line":876,"column":53},"end":{"line":876,"column":76}}]},"169":{"line":878,"type":"binary-expr","locations":[{"start":{"line":878,"column":18},"end":{"line":878,"column":33}},{"start":{"line":878,"column":37},"end":{"line":878,"column":78}}]},"170":{"line":882,"type":"cond-expr","locations":[{"start":{"line":882,"column":64},"end":{"line":882,"column":86}},{"start":{"line":882,"column":89},"end":{"line":882,"column":93}}]},"171":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":4},"end":{"line":892,"column":4}},{"start":{"line":892,"column":4},"end":{"line":892,"column":4}}]},"172":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":2},"end":{"line":910,"column":2}},{"start":{"line":910,"column":2},"end":{"line":910,"column":2}}]},"173":{"line":919,"type":"if","locations":[{"start":{"line":919,"column":4},"end":{"line":919,"column":4}},{"start":{"line":919,"column":4},"end":{"line":919,"column":4}}]},"174":{"line":925,"type":"cond-expr","locations":[{"start":{"line":925,"column":84},"end":{"line":925,"column":115}},{"start":{"line":925,"column":118},"end":{"line":925,"column":122}}]},"175":{"line":931,"type":"if","locations":[{"start":{"line":931,"column":4},"end":{"line":931,"column":4}},{"start":{"line":931,"column":4},"end":{"line":931,"column":4}}]},"176":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":2},"end":{"line":976,"column":2}},{"start":{"line":976,"column":2},"end":{"line":976,"column":2}}]},"177":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":9},"end":{"line":978,"column":9}},{"start":{"line":978,"column":9},"end":{"line":978,"column":9}}]},"178":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":2},"end":{"line":986,"column":2}},{"start":{"line":986,"column":2},"end":{"line":986,"column":2}}]},"179":{"line":986,"type":"binary-expr","locations":[{"start":{"line":986,"column":6},"end":{"line":986,"column":21}},{"start":{"line":986,"column":25},"end":{"line":986,"column":38}},{"start":{"line":986,"column":42},"end":{"line":986,"column":64}}]},"180":{"line":987,"type":"binary-expr","locations":[{"start":{"line":987,"column":40},"end":{"line":987,"column":86}},{"start":{"line":987,"column":90},"end":{"line":987,"column":131}}]},"181":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":4},"end":{"line":992,"column":4}},{"start":{"line":992,"column":4},"end":{"line":992,"column":4}}]},"182":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":8},"end":{"line":992,"column":38}},{"start":{"line":992,"column":42},"end":{"line":992,"column":78}},{"start":{"line":992,"column":82},"end":{"line":992,"column":127}}]},"183":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}},{"start":{"line":1031,"column":2},"end":{"line":1031,"column":2}}]},"184":{"line":1031,"type":"binary-expr","locations":[{"start":{"line":1031,"column":6},"end":{"line":1031,"column":31}},{"start":{"line":1031,"column":35},"end":{"line":1031,"column":59}}]},"185":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}},{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}}]},"186":{"line":1051,"type":"binary-expr","locations":[{"start":{"line":1051,"column":6},"end":{"line":1051,"column":12}},{"start":{"line":1051,"column":16},"end":{"line":1051,"column":33}}]},"187":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"188":{"line":1056,"type":"binary-expr","locations":[{"start":{"line":1056,"column":8},"end":{"line":1056,"column":29}},{"start":{"line":1056,"column":33},"end":{"line":1056,"column":70}}]},"189":{"line":1057,"type":"binary-expr","locations":[{"start":{"line":1057,"column":15},"end":{"line":1057,"column":21}},{"start":{"line":1057,"column":26},"end":{"line":1057,"column":77}}]},"190":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":15},"end":{"line":1059,"column":21}},{"start":{"line":1059,"column":26},"end":{"line":1059,"column":57}}]}},"code":["'use strict';","","var Utils = require('./utils')","  , BelongsTo = require('./associations/belongs-to')","  , BelongsToMany = require('./associations/belongs-to-many')","  , InstanceValidator = require('./instance-validator')","  , QueryTypes = require('./query-types')","  , sequelizeErrors = require('./errors')","  , Dottie = require('dottie')","  , Promise = require('./promise')","  , _ = require('lodash')","  , defaultsOptions = { raw: true };","","// private","var initValues = function(values, options) {","  var defaults","    , key;","","  values = values && _.clone(values) || {};","","  if (options.isNewRecord) {","    defaults = {};","","    if (this.Model._hasDefaultValues) {","      defaults = _.mapValues(this.Model._defaultValues, function(valueFn) {","        var value = valueFn();","        return (value && value._isSequelizeMethod) ? value : _.cloneDeep(value);","      });","    }","","    // set id to null if not passed as value, a newly created dao has no id","    // removing this breaks bulkCreate","    // do after default values since it might have UUID as a default value","    if (!defaults.hasOwnProperty(this.Model.primaryKeyAttribute)) {","      defaults[this.Model.primaryKeyAttribute] = null;","    }","","    if (this.Model._timestampAttributes.createdAt && defaults[this.Model._timestampAttributes.createdAt]) {","      this.dataValues[this.Model._timestampAttributes.createdAt] = Utils.toDefaultValue(defaults[this.Model._timestampAttributes.createdAt]);","      delete defaults[this.Model._timestampAttributes.createdAt];","    }","","    if (this.Model._timestampAttributes.updatedAt && defaults[this.Model._timestampAttributes.updatedAt]) {","      this.dataValues[this.Model._timestampAttributes.updatedAt] = Utils.toDefaultValue(defaults[this.Model._timestampAttributes.updatedAt]);","      delete defaults[this.Model._timestampAttributes.updatedAt];","    }","","    if (this.Model._timestampAttributes.deletedAt && defaults[this.Model._timestampAttributes.deletedAt]) {","      this.dataValues[this.Model._timestampAttributes.deletedAt] = Utils.toDefaultValue(defaults[this.Model._timestampAttributes.deletedAt]);","      delete defaults[this.Model._timestampAttributes.deletedAt];","    }","","    if (Object.keys(defaults).length) {","      for (key in defaults) {","        if (values[key] === undefined) {","          this.set(key, Utils.toDefaultValue(defaults[key]), defaultsOptions);","          delete values[key];","        }","      }","    }","  }","","  this.set(values, options);","};","","/**"," * This class represents an single instance, a database row. You might see it referred to as both Instance and instance. You should not"," * instantiate the Instance class directly, instead you access it using the finder and creation methods on the model."," *"," * Instance instances operate with the concept of a `dataValues` property, which stores the actual values represented by the instance."," * By default, the values from dataValues can also be accessed directly from the Instance, that is:"," * ```js"," * instance.field"," * // is the same as"," * instance.get('field')"," * // is the same as"," * instance.getDataValue('field')"," * ```"," * However, if getters and/or setters are defined for `field` they will be invoked, instead of returning the value from `dataValues`."," * Accessing properties directly or using `get` is preferred for regular use, `getDataValue` should only be used for custom getters."," *"," * @see {Sequelize#define} for more information about getters and setters"," * @class Instance"," */","var Instance = function(values, options) {","  this.dataValues = {};","  this._previousDataValues = {};","  this._changed = {};","  this.$modelOptions = this.Model.options;","  this.$options = options || {};","  this.hasPrimaryKeys = this.Model.options.hasPrimaryKeys;","  this.__eagerlyLoadedAssociations = [];","  /**","   * Returns true if this instance has not yet been persisted to the database","   * @property isNewRecord","   * @return {Boolean}","   */","  this.isNewRecord = options.isNewRecord;","","  /**","   * Returns the Model the instance was created from.","   * @see {Model}","   * @property Model","   * @return {Model}","   */","","  initValues.call(this, values, options);","};","","/**"," * A reference to the sequelize instance"," * @see {Sequelize}"," * @property sequelize"," * @return {Sequelize}"," */","Object.defineProperty(Instance.prototype, 'sequelize', {","  get: function() { return this.Model.modelManager.sequelize; }","});","","/**"," * Get an object representing the query for this instance, use with `options.where`"," *"," * @property where"," * @return {Object}"," */","Instance.prototype.where = function() {","  var where;","","  where = this.Model.primaryKeyAttributes.reduce(function (result, attribute) {","    result[attribute] = this.get(attribute, {raw: true});","    return result;","  }.bind(this), {});","","  if (_.size(where) === 0) {","    return this.$modelOptions.whereCollection;","  }","  return Utils.mapWhereFieldNames(where, this.$Model);","};","","Instance.prototype.toString = function () {","  return '[object SequelizeInstance:'+this.Model.name+']';","};","","/**"," * Get the value of the underlying data value"," *"," * @param {String} key"," * @return {any}"," */","Instance.prototype.getDataValue = function(key) {","  return this.dataValues[key];","};","","/**"," * Update the underlying data value"," *"," * @param {String} key"," * @param {any} value"," */","Instance.prototype.setDataValue = function(key, value) {","  var originalValue = this._previousDataValues[key];","  if (!Utils.isPrimitive(value) || value !== originalValue) {","    this.changed(key, true);","  }","","  this.dataValues[key] = value;","};","","/**"," * If no key is given, returns all values of the instance, also invoking virtual getters."," *"," * If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key."," *"," * @param {String} [key]"," * @param {Object} [options]"," * @param {Boolean} [options.plain=false] If set to true, included instances will be returned as plain objects"," * @return {Object|any}"," */","Instance.prototype.get = function(key, options) { // testhint options:none","  if (options === undefined && typeof key === 'object') {","    options = key;","    key = undefined;","  }","","  if (key) {","    if (this._customGetters[key]) {","      return this._customGetters[key].call(this, key);","    }","    if (options && options.plain && this.$options.include && this.$options.includeNames.indexOf(key) !== -1) {","      if (Array.isArray(this.dataValues[key])) {","        return this.dataValues[key].map(function (instance) {","          return instance.get({plain: options.plain});","        });","      } else if (this.dataValues[key] instanceof Instance) {","        return this.dataValues[key].get({plain: options.plain});","      } else {","        return this.dataValues[key];","      }","    }","\t\treturn this.dataValues[key];","  }","","  if (this._hasCustomGetters || (options && options.plain && this.$options.include) || (options && options.clone)) {","    var values = {}","      , _key;","","    if (this._hasCustomGetters) {","      for (_key in this._customGetters) {","        if (this._customGetters.hasOwnProperty(_key)) {","          values[_key] = this.get(_key, options);","        }","      }","    }","","    for (_key in this.dataValues) {","      if (!values.hasOwnProperty(_key) && this.dataValues.hasOwnProperty(_key)) {","        values[_key] = this.get(_key, options);","      }","    }","    return values;","  }","  return this.dataValues;","};","","/**"," * Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call `save`)."," * In its most basic form `set` will update a value stored in the underlying `dataValues` object. However, if a custom setter function is defined for the key, that function"," * will be called instead. To bypass the setter, you can pass `raw: true` in the options object."," *"," * If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be"," * set directly to the object passed, or used to extend dataValues, if dataValues already contain values."," *"," * When set is called, the previous value of the field is stored and sets a changed flag(see `changed`)."," *"," * Set can also be used to build instances for associations, if you have values for those."," * When using set with associations you need to make sure the property key matches the alias of the association"," * while also making sure that the proper include options have been set (from .build() or .find())"," *"," * If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed."," *"," * @see {Model#find} for more information about includes"," * @param {String|Object} key"," * @param {any} value"," * @param {Object} [options]"," * @param {Boolean} [options.raw=false] If set to true, field and virtual setters will be ignored"," * @param {Boolean} [options.reset=false] Clear all previously set data values"," * @alias setAttributes"," */","Instance.prototype.set = function(key, value, options) { // testhint options:none","  var values","    , originalValue","    , keys","    , i","    , length;","","  if (typeof key === 'object' && key !== null) {","    values = key;","    options = value || {};","","    if (options.reset) {","      this.dataValues = {};","    }","","    // If raw, and we're not dealing with includes or special attributes, just set it straight on the dataValues object","    if (options.raw && !(this.$options && this.$options.include) && !(options && options.attributes) && !this.Model._hasBooleanAttributes && !this.Model._hasDateAttributes) {","      if (Object.keys(this.dataValues).length) {","        this.dataValues = _.extend(this.dataValues, values);","      } else {","        this.dataValues = values;","      }","      // If raw, .changed() shouldn't be true","      this._previousDataValues = _.clone(this.dataValues);","    } else {","      // Loop and call set","","      if (options.attributes) {","        keys = options.attributes;","        if (this.Model._hasVirtualAttributes) {","          keys = keys.concat(this.Model._virtualAttributes);","        }","","        if (this.$options.includeNames) {","          keys = keys.concat(this.$options.includeNames);","        }","","        for (i = 0, length = keys.length; i < length; i++) {","          if (values[keys[i]] !== undefined) {","            this.set(keys[i], values[keys[i]], options);","          }","        }","      } else {","        for (key in values) {","          this.set(key, values[key], options);","        }","      }","","      if (options.raw) {","        // If raw, .changed() shouldn't be true","        this._previousDataValues = _.clone(this.dataValues);","      }","    }","  } else {","    if (!options)","      options = {};","    if (!options.raw) {","      originalValue = this.dataValues[key];","    }","","    // If not raw, and there's a customer setter","    if (!options.raw && this._customSetters[key]) {","      this._customSetters[key].call(this, value, key);","      if (!Utils.isPrimitive(value) && value !== null || value !== originalValue) {","        this._previousDataValues[key] = originalValue;","        this.changed(key, true);","      }","    } else {","      // Check if we have included models, and if this key matches the include model names/aliases","","      if (this.$options && this.$options.include && this.$options.includeNames.indexOf(key) !== -1) {","        // Pass it on to the include handler","        this._setInclude(key, value, options);","        return this;","      } else {","        // Bunch of stuff we won't do when its raw","        if (!options.raw) {","          // If attribute is not in model definition, return","          if (!this._isAttribute(key)) {","            if (key.indexOf('.') > -1 && this.Model._isJsonAttribute(key.split('.')[0])) {","              var previousDottieValue = Dottie.get(this.dataValues, key);","              if (!_.isEqual(previousDottieValue, value)) {","                Dottie.set(this.dataValues, key, value);","                this.changed(key.split('.')[0], true);","              }","            }","            return this;","          }","","          // If attempting to set primary key and primary key is already defined, return","          if (this.Model._hasPrimaryKeys && originalValue && this.Model._isPrimaryKey(key)) {","            return this;","          }","","          // If attempting to set read only attributes, return","          if (!this.isNewRecord && this.Model._hasReadOnlyAttributes && this.Model._isReadOnlyAttribute(key)) {","            return this;","          }","","          // Convert date fields to real date objects","          if (this.Model._hasDateAttributes && this.Model._isDateAttribute(key) && !!value && !value._isSequelizeMethod) {","            if (!(value instanceof Date)) {","              value = new Date(value);","            }","            if (originalValue) {","              if (!(originalValue instanceof Date)) {","                originalValue = new Date(originalValue);","              }","              if (value.getTime() === originalValue.getTime()) {","                return this;","              }","            }","          }","        }","","        // Convert boolean-ish values to booleans","        if (this.Model._hasBooleanAttributes && this.Model._isBooleanAttribute(key) && value !== null && value !== undefined && !value._isSequelizeMethod) {","          if (Buffer.isBuffer(value) && value.length === 1) {","            // Bit fields are returned as buffers","            value = value[0];","          }","","          if (_.isString(value)) {","            // Only take action on valid boolean strings.","            value = (value === 'true') ? true : (value === 'false') ? false : value;","","          } else if (_.isNumber(value)) {","            // Only take action on valid boolean integers.","            value = (value === 1) ? true : (value === 0) ? false : value;","          }","        }","","        if (!options.raw && ((!Utils.isPrimitive(value) && value !== null) || value !== originalValue)) {","          this._previousDataValues[key] = originalValue;","          this.changed(key, true);","        }","        this.dataValues[key] = value;","      }","    }","  }","","  return this;","};","","Instance.prototype.setAttributes = function(updates) {","  return this.set(updates);","};","","/**"," * If changed is called with a string it will return a boolean indicating whether the value of that key in `dataValues` is different from the value in `_previousDataValues`."," *"," * If changed is called without an argument, it will return an array of keys that have changed."," *"," * If changed is called without an argument and no keys have changed, it will return `false`."," *"," * @param {String} [key]"," * @return {Boolean|Array}"," */","Instance.prototype.changed = function(key, value) {","  if (key) {","    if (value !== undefined) {","      this._changed[key] = value;","      return this;","    }","    return this._changed[key] || false;","  }","","  var changed = Object.keys(this.dataValues).filter(function(key) {","    return this.changed(key);","  }.bind(this));","","  return changed.length ? changed : false;","};","","/**"," * Returns the previous value for key from `_previousDataValues`."," *"," * If called without a key, returns the previous values for all values which have changed"," *"," * @param {String} [key]"," * @return {any|Array<any>}"," */","Instance.prototype.previous = function(key) {","  if (key) {","    return this._previousDataValues[key];","  }","","  return _.pickBy(this._previousDataValues, function(value, key) {","    return this.changed(key);","  }.bind(this));","};","","Instance.prototype._setInclude = function(key, value, options) {","  if (!Array.isArray(value)) value = [value];","  if (value[0] instanceof Instance) {","    value = value.map(function(instance) {","      return instance.dataValues;","    });","  }","","  var include = this.$options.includeMap[key]","    , association = include.association","    , self = this","    , accessor = key","    , childOptions","    , primaryKeyAttribute  = include.model.primaryKeyAttribute","    , isEmpty;","","  if (!isEmpty) {","    childOptions = {","      isNewRecord: this.isNewRecord,","      include: include.include,","      includeNames: include.includeNames,","      includeMap: include.includeMap,","      includeValidated: true,","      raw: options.raw,","      attributes: include.originalAttributes","    };","  }","  if (include.originalAttributes === undefined || include.originalAttributes.length) {","    if (association.isSingleAssociation) {","      if (Array.isArray(value)) {","        value = value[0];","      }","","      isEmpty = (value && value[primaryKeyAttribute] === null) || (value === null);","      self[accessor] = self.dataValues[accessor] = isEmpty ? null : include.model.build(value, childOptions);","    } else {","      isEmpty = value[0] && value[0][primaryKeyAttribute] === null;","      self[accessor] = self.dataValues[accessor] = isEmpty ? [] : include.model.bulkBuild(value, childOptions);","    }","  }","};","","/**"," * Validate this instance, and if the validation passes, persist it to the database. It will only save changed fields, and do nothing if no fields have changed."," *"," * On success, the callback will be called with this instance. On validation error, the callback will be called with an instance of `Sequelize.ValidationError`."," * This error will have a property for each of the fields for which validation failed, with the error message for that field."," *"," * @param {Object} [options]"," * @param {string[]} [options.fields] An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved."," * @param {Boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated."," * @param {Boolean} [options.validate=true] If false, validations won't be run."," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Transaction} [options.transaction]"," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<this|Errors.ValidationError>}"," */","Instance.prototype.save = function(options) {","  if (arguments.length > 1) {","    throw new Error('The second argument was removed in favor of the options object.');","  }","","  options = Utils.cloneDeep(options);","  options = _.defaults(options, {","    hooks: true,","    validate: true","  });","","  if (!options.fields) {","    if (this.isNewRecord) {","      options.fields = Object.keys(this.Model.attributes);","    } else {","      options.fields = _.intersection(this.changed(), Object.keys(this.Model.attributes));","    }","","    options.defaultFields = options.fields;","  }","","  if (options.returning === undefined) {","    if (options.association) {","      options.returning = false;","    } else if (this.isNewRecord) {","      options.returning = true;","    }","  }","","  var self = this","    , primaryKeyName = this.Model.primaryKeyAttribute","    , primaryKeyAttribute = primaryKeyName && this.Model.rawAttributes[primaryKeyName]","    , updatedAtAttr = this.Model._timestampAttributes.updatedAt","    , createdAtAttr = this.Model._timestampAttributes.createdAt","    , hook = self.isNewRecord ? 'Create' : 'Update'","    , wasNewRecord = this.isNewRecord","    , now = Utils.now(this.sequelize.options.dialect);","","  if (updatedAtAttr && options.fields.length >= 1 && options.fields.indexOf(updatedAtAttr) === -1) {","    options.fields.push(updatedAtAttr);","  }","","  if (options.silent === true && !(this.isNewRecord && this.get(updatedAtAttr, {raw: true}))) {","    // UpdateAtAttr might have been added as a result of Object.keys(Model.attributes). In that case we have to remove it again","    Utils._.remove(options.fields, function(val) {","      return val === updatedAtAttr;","    });","    updatedAtAttr = false;","  }","","  if (this.isNewRecord === true) {","    if (createdAtAttr && options.fields.indexOf(createdAtAttr) === -1) {","      options.fields.push(createdAtAttr);","    }","","    if (primaryKeyAttribute && primaryKeyAttribute.defaultValue && options.fields.indexOf(primaryKeyName) < 0) {","      options.fields.unshift(primaryKeyName);","    }","  }","","  if (this.isNewRecord === false) {","    if (primaryKeyName && this.get(primaryKeyName, {raw: true}) === undefined) {","      throw new Error('You attempted to save an instance with no primary key, this is not allowed since it would result in a global update');","    }","  }","","  if (updatedAtAttr && !options.silent && options.fields.indexOf(updatedAtAttr) !== -1) {","    this.dataValues[updatedAtAttr] = this.Model.$getDefaultTimestamp(updatedAtAttr) || now;","  }","","  if (this.isNewRecord && createdAtAttr && !this.dataValues[createdAtAttr]) {","    this.dataValues[createdAtAttr] = this.Model.$getDefaultTimestamp(createdAtAttr) || now;","  }","","  return Promise.bind(this).then(function() {","    // Validate","    if (options.validate) {","      return Promise.bind(this).then(function () {","        // hookValidate rejects with errors, validate returns with errors","        if (options.hooks) return this.hookValidate(options);","","        return this.validate(options).then(function (err) {","          if (err) throw err;","        });","      });","    }","  }).then(function() {","    return Promise.bind(this).then(function() {","      // Run before hook","      if (options.hooks) {","        var beforeHookValues = _.pick(this.dataValues, options.fields)","          , afterHookValues","          , hookChanged","          , ignoreChanged = _.difference(this.changed(), options.fields); // In case of update where it's only supposed to update the passed values and the hook values","","        if (updatedAtAttr && options.fields.indexOf(updatedAtAttr) !== -1) {","          ignoreChanged = _.without(ignoreChanged, updatedAtAttr);","        }","","        return this.Model.runHooks('before' + hook, this, options).bind(this).then(function() {","          if (options.defaultFields && !this.isNewRecord) {","            afterHookValues = _.pick(this.dataValues, _.difference(this.changed(), ignoreChanged));","","            hookChanged = [];","            Object.keys(afterHookValues).forEach(function (key) {","              if (afterHookValues[key] !== beforeHookValues[key]) {","                hookChanged.push(key);","              }","            });","","            options.fields = _.uniq(options.fields.concat(hookChanged));","          }","","          if (hookChanged) {","            if (options.validate) {","              // Validate again","","              options.skip = _.difference(Object.keys(this.Model.rawAttributes), hookChanged);","              return Promise.bind(this).then(function () {","                // hookValidate rejects with errors, validate returns with errors","                if (options.hooks) return this.hookValidate(options);","","                return this.validate(options).then(function (err) {","                  if (err) throw err;","                });","              }).then(function() {","                delete options.skip;","              });","            }","          }","        });","      }","    }).then(function() {","      if (!options.fields.length) return this;","      if (!this.isNewRecord) return this;","      if (!this.$options.include || !this.$options.include.length) return this;","","      // Nested creation for BelongsTo relations","      return Promise.map(this.$options.include.filter(function (include) {","        return include.association instanceof BelongsTo;","      }), function (include) {","        var instance = self.get(include.as);","        if (!instance) return Promise.resolve();","","        var includeOptions =  _(Utils.cloneDeep(include))","          .omit(['association'])","          .defaults({","            transaction: options.transaction,","            logging: options.logging,","            parentRecord: self","          }).value();","","        return instance.save(includeOptions).then(function () {","          return self[include.association.accessors.set](instance, {save: false, logging: options.logging});","        });","      });","    })","    .then(function() {","      var realFields = [];","      options.fields.forEach(function(field) {","        if (!self.Model._isVirtualAttribute(field)) {","          realFields.push(field);","        }","      });","      if (!realFields.length) return this;","      if (!this.changed() && !this.isNewRecord) return this;","","      var values = Utils.mapValueFieldNames(this.dataValues, options.fields, this.Model)","        , query = null","        , args = [];","","      if (self.isNewRecord) {","        query = 'insert';","        args = [self, self.$Model.getTableName(options), values, options];","      } else {","        var where = this.where();","","        where = Utils.mapValueFieldNames(where, Object.keys(where), this.Model);","","        query = 'update';","        args = [self, self.$Model.getTableName(options), values, where, options];","      }","","      return self.sequelize.getQueryInterface()[query].apply(self.sequelize.getQueryInterface(), args)","        .then(function(result) {","          // Transfer database generated values (defaults, autoincrement, etc)","          Object.keys(self.Model.rawAttributes).forEach(function (attr) {","            if (self.Model.rawAttributes[attr].field &&","                values[self.Model.rawAttributes[attr].field] !== undefined &&","                self.Model.rawAttributes[attr].field !== attr","            ) {","              values[attr] = values[self.Model.rawAttributes[attr].field];","              delete values[self.Model.rawAttributes[attr].field];","            }","          });","          values = _.extend(values, result.dataValues);","","          result.dataValues = _.extend(result.dataValues, values);","          return result;","        })","        .tap(function(result) {","          // Run after hook","          if (options.hooks) {","            return self.Model.runHooks('after' + hook, result, options);","          }","        })","        .then(function(result) {","          options.fields.forEach(function (field) {","            result._previousDataValues[field] = result.dataValues[field];","            self.changed(field, false);","          });","          self.isNewRecord = false;","          return result;","        })","        .tap(function() {","          if (!wasNewRecord) return self;","          if (!self.$options.include || !self.$options.include.length) return self;","","          // Nested creation for HasOne/HasMany/BelongsToMany relations","          return Promise.map(self.$options.include.filter(function (include) {","            return !(include.association instanceof BelongsTo);","          }), function (include) {","            var instances = self.get(include.as);","","            if (!instances) return Promise.resolve();","            if (!Array.isArray(instances)) instances = [instances];","            if (!instances.length) return Promise.resolve();","","            var includeOptions =  _(Utils.cloneDeep(include))","              .omit(['association'])","              .defaults({","                transaction: options.transaction,","                logging: options.logging,","                parentRecord: self","              }).value();","","            // Instances will be updated in place so we can safely treat HasOne like a HasMany","            return Promise.map(instances, function (instance) {","              if (include.association instanceof BelongsToMany) {","                return instance.save(includeOptions).then(function () {","                  var values = {};","                  values[include.association.foreignKey] = self.get(self.Model.primaryKeyAttribute, {raw: true});","                  values[include.association.otherKey] = instance.get(instance.Model.primaryKeyAttribute, {raw: true});","                  // Include values defined in the scope of the association","                  _.assign(values, include.association.through.scope);","                  return include.association.throughModel.create(values, includeOptions);","                });","              } else {","                instance.set(include.association.foreignKey, self.get(self.Model.primaryKeyAttribute, {raw: true}));","                return instance.save(includeOptions);","              }","            });","          });","        });","    });","  });","};","","/*","* Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object.","* This is different from doing a `find(Instance.id)`, because that would create and return a new instance. With this method,","* all references to the Instance are updated with the new data and no new objects are created.","*","* @see {Model#find}","* @param {Object} [options] Options that are passed on to `Model.find`","* @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.","* @return {Promise<this>}","*/","Instance.prototype.reload = function(options) {","  options = _.defaults({}, options, {","    where: this.where(),","    include: this.$options.include || null","  });","","  return this.Model.findOne(options).bind(this)","  .tap(function (reload) {","    if (!reload) {","      throw new sequelizeErrors.InstanceError(","        'Instance could not be reloaded because it does not exist anymore (find call returned null)'","      );","    }","  })","  .then(function(reload) {","    // update the internal options of the instance","    this.$options = reload.$options;","    // re-set instance values","    this.set(reload.dataValues, {","      raw: true,","      reset: true && !options.attributes","    });","  }).return(this);","};","","/*"," * Validate the attribute of this instance according to validation rules set in the model definition."," *"," * Emits null if and only if validation successful; otherwise an Error instance containing { field name : [error msgs] } entries."," *"," * @param {Object} [options] Options that are passed to the validator"," * @param {Array} [options.skip] An array of strings. All properties that are in this array will not be validated"," * @see {InstanceValidator}"," *"," * @return {Promise<undefined|Errors.ValidationError>}"," */","Instance.prototype.validate = function(options) {","  return new InstanceValidator(this, options).validate();","};","","Instance.prototype.hookValidate = function(options) {","  return new InstanceValidator(this, options).hookValidate();","};","","/**"," * This is the same as calling `set` and then calling `save` but it only saves the"," * exact values passed to it, making it more atomic and safer."," *"," * @see {Instance#set}"," * @see {Instance#save}"," * @param {Object} updates See `set`"," * @param {Object} options See `save`"," *"," * @return {Promise<this>}"," * @alias updateAttributes"," */","Instance.prototype.update = function(values, options) {","  var changedBefore = this.changed() || []","    , sideEffects","    , fields","    , setOptions;","","  options = options || {};","  if (Array.isArray(options)) options = {fields: options};","","  options = Utils.cloneDeep(options);","  setOptions = Utils.cloneDeep(options);","  setOptions.attributes = options.fields;","  this.set(values, setOptions);","","  // Now we need to figure out which fields were actually affected by the setter.","  sideEffects = _.without.apply(this, [this.changed() || []].concat(changedBefore));","  fields = _.union(Object.keys(values), sideEffects);","","  if (!options.fields) {","    options.fields = _.intersection(fields, this.changed());","    options.defaultFields = options.fields;","  }","","  return this.save(options);","};","Instance.prototype.updateAttributes = Instance.prototype.update;","","/**"," * Destroy the row corresponding to this instance. Depending on your setting for paranoid, the row will either be completely deleted, or have its deletedAt timestamp set to the current time."," *"," * @param {Object}      [options={}]"," * @param {Boolean}     [options.force=false] If set to true, paranoid models will actually be deleted"," * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Transaction} [options.transaction]"," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<undefined>}"," */","","Instance.prototype.destroy = function(options) {","  options = Utils._.extend({","    hooks: true,","    force: false","  }, options);","","  return Promise.bind(this).then(function() {","    // Run before hook","    if (options.hooks) {","      return this.Model.runHooks('beforeDestroy', this, options);","    }","  }).then(function() {","    var where = this.where();","","    if (this.Model._timestampAttributes.deletedAt && options.force === false) {","      var attribute = this.Model.rawAttributes[this.Model._timestampAttributes.deletedAt]","        , field = attribute.field || this.Model._timestampAttributes.deletedAt","        , values = {};","","      values[field] = new Date();","      where[field] = attribute.hasOwnProperty('defaultValue') ? attribute.defaultValue : null;","","      this.setDataValue(field, values[field]);","","      return this.sequelize.getQueryInterface().update(this, this.$Model.getTableName(options), values, where, _.defaults({ hooks: false }, options));","    } else {","      return this.sequelize.getQueryInterface().delete(this, this.$Model.getTableName(options), where, _.assign({ type: QueryTypes.DELETE, limit: null }, options));","    }","  }).tap(function() {","    // Run after hook","    if (options.hooks) {","      return this.Model.runHooks('afterDestroy', this, options);","    }","  }).then(function(result) {","    return result;","  });","};","","/**"," * Restore the row corresponding to this instance. Only available for paranoid models."," *"," * @param {Object}      [options={}]"," * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Transaction} [options.transaction]"," *"," * @return {Promise<undefined>}"," */","Instance.prototype.restore = function(options) {","  if (!this.Model._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');","","  options = Utils._.extend({","    hooks: true,","    force: false","  }, options);","","  return Promise.bind(this).then(function() {","    // Run before hook","    if (options.hooks) {","      return this.Model.runHooks('beforeRestore', this, options);","    }","  }).then(function() {","    var deletedAtCol = this.Model._timestampAttributes.deletedAt","      , deletedAtAttribute = this.Model.rawAttributes[deletedAtCol]","      , deletedAtDefaultValue = deletedAtAttribute.hasOwnProperty('defaultValue') ? deletedAtAttribute.defaultValue : null;","","    this.setDataValue(deletedAtCol, deletedAtDefaultValue);","    return this.save(_.extend({}, options, {hooks : false, omitNull : false}));","  }).tap(function() {","    // Run after hook","    if (options.hooks) {","      return this.Model.runHooks('afterRestore', this, options);","    }","  });","};","","/**"," * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a"," * ```sql"," * SET column = column + X"," * ```"," * query. To get the correct value after an increment into the Instance you should do a reload."," *"," *```js"," * instance.increment('number') // increment number by 1"," * instance.increment(['number', 'count'], { by: 2 }) // increment number and count by 2"," * instance.increment({ answer: 42, tries: 1}, { by: 2 }) // increment answer by 42, and tries by 1."," *                                                        // `by` is ignored, since each column has its own value"," * ```"," *"," * @see {Instance#reload}"," * @param {String|Array|Object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given."," * @param {Object} [options]"," * @param {Integer} [options.by=1] The number to increment by"," * @param {Boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated."," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Transaction} [options.transaction]"," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise<this>}"," */","Instance.prototype.increment = function(fields, options) {","  var identifier = this.where()","    , updatedAtAttr = this.Model._timestampAttributes.updatedAt","    , values = {}","    , where;","","  options = _.defaults({}, options, {","    by: 1,","    attributes: {},","    where: {}","  });","","  where = _.extend({}, options.where, identifier);","","  if (Utils._.isString(fields)) {","    values[fields] = options.by;","  } else if (Utils._.isArray(fields)) {","    Utils._.each(fields, function(field) {","      values[field] = options.by;","    });","  } else { // Assume fields is key-value pairs","    values = fields;","  }","","  if (!options.silent && updatedAtAttr && !values[updatedAtAttr]) {","    options.attributes[updatedAtAttr] = this.Model.$getDefaultTimestamp(updatedAtAttr) || Utils.now(this.sequelize.options.dialect);","  }","","  Object.keys(values).forEach(function(attr) {","    // Field name mapping","    if (this.Model.rawAttributes[attr] && this.Model.rawAttributes[attr].field && this.Model.rawAttributes[attr].field !== attr) {","      values[this.Model.rawAttributes[attr].field] = values[attr];","      delete values[attr];","    }","  }, this);","","  return this.sequelize.getQueryInterface().increment(this, this.$Model.getTableName(options), values, where, options).return(this);","};","","/**"," * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a"," * ```sql"," * SET column = column - X"," * ```"," * query. To get the correct value after an decrement into the Instance you should do a reload."," *"," * ```js"," * instance.decrement('number') // decrement number by 1"," * instance.decrement(['number', 'count'], { by: 2 }) // decrement number and count by 2"," * instance.decrement({ answer: 42, tries: 1}, { by: 2 }) // decrement answer by 42, and tries by 1."," *                                                        // `by` is ignored, since each column has its own value"," * ```"," *"," * @see {Instance#reload}"," * @param {String|Array|Object} fields If a string is provided, that column is decremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given"," * @param {Object} [options]"," * @param {Integer} [options.by=1] The number to decrement by"," * @param {Boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated."," * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql."," * @param {Transaction} [options.transaction]"," * @param  {String}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)"," *"," * @return {Promise}"," */","Instance.prototype.decrement = function(fields, options) {","  options = _.defaults({}, options, {","    by: 1","  });","","  if (!Utils._.isString(fields) && !Utils._.isArray(fields)) { // Assume fields is key-value pairs","    Utils._.each(fields, function(value, field) {","      fields[field] = -value;","    });","  }","","  options.by = 0 - options.by;","","  return this.increment(fields, options);","};","","/**"," * Check whether all values of this and `other` Instance are the same"," *"," * @param {Instance} other"," * @return {Boolean}"," */","Instance.prototype.equals = function(other) {","  var result = true;","","  if (!other || !other.dataValues) {","    return false;","  }","","  Utils._.each(this.dataValues, function(value, key) {","    if (Utils._.isDate(value) && Utils._.isDate(other.dataValues[key])) {","      result = result && (value.getTime() === other.dataValues[key].getTime());","    } else {","      result = result && (value === other.dataValues[key]);","    }","  });","","  return result;","};","","/**"," * Check if this is equal to one of `others` by calling equals"," *"," * @param {Array} others"," * @return {Boolean}"," */","Instance.prototype.equalsOneOf = function(others) {","  var self = this;","","  return _.some(others, function(other) {","    return self.equals(other);","  });","};","","Instance.prototype.setValidators = function(attribute, validators) {","  this.validators[attribute] = validators;","};","","/**"," * Convert the instance to a JSON representation. Proxies to calling `get` with no keys. This means get all values gotten from the DB, and apply all custom getters."," *"," * @see {Instance#get}"," * @return {object}"," */","Instance.prototype.toJSON = function() {","  return this.get({","    plain: true","  });","};","","module.exports = Instance;","module.exports.Instance = Instance;","module.exports.default = Instance;",""],"l":{"3":1,"15":1,"16":0,"19":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"34":0,"35":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"48":0,"49":0,"50":0,"53":0,"54":0,"55":0,"56":0,"57":0,"63":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"98":0,"107":0,"116":1,"117":0,"126":1,"127":0,"129":0,"130":0,"131":0,"134":0,"135":0,"137":0,"140":1,"141":0,"150":1,"151":0,"160":1,"161":0,"162":0,"163":0,"166":0,"179":1,"180":0,"181":0,"182":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"197":0,"200":0,"203":0,"204":0,"207":0,"208":0,"209":0,"210":0,"215":0,"216":0,"217":0,"220":0,"222":0,"249":1,"250":0,"256":0,"257":0,"258":0,"260":0,"261":0,"265":0,"266":0,"267":0,"269":0,"272":0,"276":0,"277":0,"278":0,"279":0,"282":0,"283":0,"286":0,"287":0,"288":0,"292":0,"293":0,"297":0,"299":0,"303":0,"304":0,"305":0,"306":0,"310":0,"311":0,"312":0,"313":0,"314":0,"319":0,"321":0,"322":0,"325":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"335":0,"339":0,"340":0,"344":0,"345":0,"349":0,"350":0,"351":0,"353":0,"354":0,"355":0,"357":0,"358":0,"365":0,"366":0,"368":0,"371":0,"373":0,"375":0,"377":0,"381":0,"382":0,"383":0,"385":0,"390":0,"393":1,"394":0,"407":1,"408":0,"409":0,"410":0,"411":0,"413":0,"416":0,"417":0,"420":0,"431":1,"432":0,"433":0,"436":0,"437":0,"441":1,"442":0,"443":0,"444":0,"445":0,"449":0,"457":0,"458":0,"468":0,"469":0,"470":0,"471":0,"474":0,"475":0,"477":0,"478":0,"499":1,"500":0,"501":0,"504":0,"505":0,"510":0,"511":0,"512":0,"514":0,"517":0,"520":0,"521":0,"522":0,"523":0,"524":0,"528":0,"537":0,"538":0,"541":0,"543":0,"544":0,"546":0,"549":0,"550":0,"551":0,"554":0,"555":0,"559":0,"560":0,"561":0,"565":0,"566":0,"569":0,"570":0,"573":0,"575":0,"576":0,"578":0,"580":0,"581":0,"586":0,"588":0,"589":0,"594":0,"595":0,"598":0,"599":0,"600":0,"602":0,"603":0,"604":0,"605":0,"609":0,"612":0,"613":0,"616":0,"617":0,"619":0,"621":0,"622":0,"625":0,"632":0,"633":0,"634":0,"637":0,"638":0,"640":0,"641":0,"643":0,"651":0,"652":0,"657":0,"658":0,"659":0,"660":0,"663":0,"664":0,"666":0,"670":0,"671":0,"672":0,"674":0,"676":0,"678":0,"679":0,"682":0,"685":0,"686":0,"690":0,"691":0,"694":0,"696":0,"697":0,"701":0,"702":0,"706":0,"707":0,"708":0,"710":0,"711":0,"714":0,"715":0,"718":0,"719":0,"721":0,"723":0,"724":0,"725":0,"727":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"743":0,"744":0,"747":0,"748":0,"767":1,"768":0,"773":0,"775":0,"776":0,"783":0,"785":0,"803":1,"804":0,"807":1,"808":0,"823":1,"824":0,"829":0,"830":0,"832":0,"833":0,"834":0,"835":0,"838":0,"839":0,"841":0,"842":0,"843":0,"846":0,"848":1,"862":1,"863":0,"868":0,"870":0,"871":0,"874":0,"876":0,"877":0,"881":0,"882":0,"884":0,"886":0,"888":0,"892":0,"893":0,"896":0,"909":1,"910":0,"912":0,"917":0,"919":0,"920":0,"923":0,"927":0,"928":0,"931":0,"932":0,"962":1,"963":0,"968":0,"974":0,"976":0,"977":0,"978":0,"979":0,"980":0,"983":0,"986":0,"987":0,"990":0,"992":0,"993":0,"994":0,"998":0,"1026":1,"1027":0,"1031":0,"1032":0,"1033":0,"1037":0,"1039":0,"1048":1,"1049":0,"1051":0,"1052":0,"1055":0,"1056":0,"1057":0,"1059":0,"1063":0,"1072":1,"1073":0,"1075":0,"1076":0,"1080":1,"1081":0,"1090":1,"1091":0,"1096":1,"1097":1,"1098":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/belongs-to.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/belongs-to.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":1,"110":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":50}}},"2":{"name":"(anonymous_2)","line":110,"loc":{"start":{"line":110,"column":39},"end":{"line":110,"column":50}}},"3":{"name":"(anonymous_3)","line":136,"loc":{"start":{"line":136,"column":28},"end":{"line":136,"column":42}}},"4":{"name":"(anonymous_4)","line":139,"loc":{"start":{"line":139,"column":28},"end":{"line":139,"column":46}}},"5":{"name":"(anonymous_5)","line":147,"loc":{"start":{"line":147,"column":26},"end":{"line":147,"column":55}}},"6":{"name":"(anonymous_6)","line":174,"loc":{"start":{"line":174,"column":25},"end":{"line":174,"column":45}}},"7":{"name":"(anonymous_7)","line":192,"loc":{"start":{"line":192,"column":40},"end":{"line":192,"column":59}}},"8":{"name":"(anonymous_8)","line":194,"loc":{"start":{"line":194,"column":24},"end":{"line":194,"column":44}}},"9":{"name":"(anonymous_9)","line":198,"loc":{"start":{"line":198,"column":22},"end":{"line":198,"column":42}}},"10":{"name":"(anonymous_10)","line":209,"loc":{"start":{"line":209,"column":35},"end":{"line":209,"column":63}}},"11":{"name":"(anonymous_11)","line":212,"loc":{"start":{"line":212,"column":42},"end":{"line":212,"column":80}}},"12":{"name":"(anonymous_12)","line":239,"loc":{"start":{"line":239,"column":36},"end":{"line":239,"column":64}}},"13":{"name":"(anonymous_13)","line":242,"loc":{"start":{"line":242,"column":45},"end":{"line":242,"column":79}}},"14":{"name":"(anonymous_14)","line":251,"loc":{"start":{"line":251,"column":67},"end":{"line":251,"column":97}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":105,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":37}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":57}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}},"13":{"start":{"line":30,"column":2},"end":{"line":38,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"15":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":48}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"18":{"start":{"line":40,"column":2},"end":{"line":45,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":55}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":90}},"21":{"start":{"line":43,"column":9},"end":{"line":45,"column":3}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"23":{"start":{"line":47,"column":2},"end":{"line":55,"column":3}},"24":{"start":{"line":48,"column":4},"end":{"line":54,"column":6}},"25":{"start":{"line":57,"column":2},"end":{"line":57,"column":36}},"26":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"27":{"start":{"line":60,"column":4},"end":{"line":60,"column":95}},"28":{"start":{"line":63,"column":2},"end":{"line":63,"column":77}},"29":{"start":{"line":64,"column":2},"end":{"line":64,"column":90}},"30":{"start":{"line":65,"column":2},"end":{"line":65,"column":79}},"31":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"32":{"start":{"line":68,"column":2},"end":{"line":68,"column":37}},"33":{"start":{"line":69,"column":2},"end":{"line":69,"column":43}},"34":{"start":{"line":72,"column":2},"end":{"line":72,"column":66}},"35":{"start":{"line":74,"column":2},"end":{"line":104,"column":4}},"36":{"start":{"line":107,"column":0},"end":{"line":107,"column":38}},"37":{"start":{"line":110,"column":0},"end":{"line":134,"column":2}},"38":{"start":{"line":111,"column":2},"end":{"line":111,"column":25}},"39":{"start":{"line":113,"column":2},"end":{"line":116,"column":5}},"40":{"start":{"line":118,"column":2},"end":{"line":122,"column":3}},"41":{"start":{"line":119,"column":4},"end":{"line":119,"column":94}},"42":{"start":{"line":120,"column":4},"end":{"line":120,"column":99}},"43":{"start":{"line":121,"column":4},"end":{"line":121,"column":63}},"44":{"start":{"line":124,"column":2},"end":{"line":124,"column":128}},"45":{"start":{"line":125,"column":2},"end":{"line":125,"column":64}},"46":{"start":{"line":127,"column":2},"end":{"line":127,"column":93}},"47":{"start":{"line":129,"column":2},"end":{"line":129,"column":34}},"48":{"start":{"line":131,"column":2},"end":{"line":131,"column":37}},"49":{"start":{"line":133,"column":2},"end":{"line":133,"column":14}},"50":{"start":{"line":136,"column":0},"end":{"line":145,"column":2}},"51":{"start":{"line":137,"column":2},"end":{"line":137,"column":25}},"52":{"start":{"line":139,"column":2},"end":{"line":141,"column":4}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":42}},"54":{"start":{"line":143,"column":2},"end":{"line":143,"column":32}},"55":{"start":{"line":144,"column":2},"end":{"line":144,"column":33}},"56":{"start":{"line":147,"column":0},"end":{"line":206,"column":2}},"57":{"start":{"line":148,"column":2},"end":{"line":151,"column":17}},"58":{"start":{"line":153,"column":2},"end":{"line":153,"column":37}},"59":{"start":{"line":155,"column":2},"end":{"line":161,"column":3}},"60":{"start":{"line":156,"column":4},"end":{"line":160,"column":5}},"61":{"start":{"line":157,"column":6},"end":{"line":157,"column":33}},"62":{"start":{"line":159,"column":6},"end":{"line":159,"column":43}},"63":{"start":{"line":163,"column":2},"end":{"line":165,"column":3}},"64":{"start":{"line":164,"column":4},"end":{"line":164,"column":68}},"65":{"start":{"line":167,"column":2},"end":{"line":170,"column":3}},"66":{"start":{"line":168,"column":4},"end":{"line":168,"column":25}},"67":{"start":{"line":169,"column":4},"end":{"line":169,"column":26}},"68":{"start":{"line":172,"column":2},"end":{"line":185,"column":3}},"69":{"start":{"line":173,"column":4},"end":{"line":177,"column":6}},"70":{"start":{"line":175,"column":8},"end":{"line":175,"column":52}},"71":{"start":{"line":179,"column":4},"end":{"line":184,"column":5}},"72":{"start":{"line":180,"column":6},"end":{"line":180,"column":76}},"73":{"start":{"line":182,"column":6},"end":{"line":182,"column":74}},"74":{"start":{"line":183,"column":6},"end":{"line":183,"column":27}},"75":{"start":{"line":187,"column":2},"end":{"line":189,"column":24}},"76":{"start":{"line":191,"column":2},"end":{"line":204,"column":3}},"77":{"start":{"line":192,"column":4},"end":{"line":203,"column":7}},"78":{"start":{"line":193,"column":6},"end":{"line":193,"column":22}},"79":{"start":{"line":194,"column":6},"end":{"line":196,"column":9}},"80":{"start":{"line":195,"column":8},"end":{"line":195,"column":73}},"81":{"start":{"line":198,"column":6},"end":{"line":200,"column":9}},"82":{"start":{"line":199,"column":8},"end":{"line":199,"column":76}},"83":{"start":{"line":202,"column":6},"end":{"line":202,"column":20}},"84":{"start":{"line":205,"column":2},"end":{"line":205,"column":33}},"85":{"start":{"line":209,"column":0},"end":{"line":236,"column":2}},"86":{"start":{"line":210,"column":2},"end":{"line":210,"column":25}},"87":{"start":{"line":212,"column":2},"end":{"line":233,"column":4}},"88":{"start":{"line":213,"column":4},"end":{"line":213,"column":28}},"89":{"start":{"line":215,"column":4},"end":{"line":215,"column":35}},"90":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"91":{"start":{"line":217,"column":6},"end":{"line":217,"column":56}},"92":{"start":{"line":220,"column":4},"end":{"line":220,"column":44}},"93":{"start":{"line":222,"column":4},"end":{"line":222,"column":39}},"94":{"start":{"line":222,"column":32},"end":{"line":222,"column":39}},"95":{"start":{"line":224,"column":4},"end":{"line":228,"column":16}},"96":{"start":{"line":232,"column":4},"end":{"line":232,"column":30}},"97":{"start":{"line":235,"column":2},"end":{"line":235,"column":14}},"98":{"start":{"line":239,"column":0},"end":{"line":257,"column":2}},"99":{"start":{"line":240,"column":2},"end":{"line":240,"column":25}},"100":{"start":{"line":242,"column":2},"end":{"line":254,"column":4}},"101":{"start":{"line":243,"column":4},"end":{"line":244,"column":21}},"102":{"start":{"line":246,"column":4},"end":{"line":248,"column":5}},"103":{"start":{"line":247,"column":6},"end":{"line":247,"column":56}},"104":{"start":{"line":249,"column":4},"end":{"line":249,"column":54}},"105":{"start":{"line":251,"column":4},"end":{"line":253,"column":7}},"106":{"start":{"line":252,"column":6},"end":{"line":252,"column":79}},"107":{"start":{"line":256,"column":2},"end":{"line":256,"column":14}},"108":{"start":{"line":259,"column":0},"end":{"line":259,"column":27}},"109":{"start":{"line":260,"column":0},"end":{"line":260,"column":37}},"110":{"start":{"line":261,"column":0},"end":{"line":261,"column":35}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":22},"end":{"line":42,"column":51}},{"start":{"line":42,"column":55},"end":{"line":42,"column":89}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":9},"end":{"line":43,"column":9}},{"start":{"line":43,"column":9},"end":{"line":43,"column":9}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"7":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":27},"end":{"line":60,"column":75}},{"start":{"line":60,"column":79},"end":{"line":60,"column":94}}]},"8":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":19},"end":{"line":63,"column":41}},{"start":{"line":63,"column":45},"end":{"line":63,"column":76}}]},"9":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":24},"end":{"line":64,"column":71}},{"start":{"line":64,"column":75},"end":{"line":64,"column":89}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":30}},{"start":{"line":114,"column":34},"end":{"line":114,"column":80}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"12":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":59}},{"start":{"line":119,"column":63},"end":{"line":119,"column":93}}]},"13":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":28},"end":{"line":120,"column":49}},{"start":{"line":120,"column":54},"end":{"line":120,"column":97}}]},"14":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":73},"end":{"line":120,"column":83}},{"start":{"line":120,"column":86},"end":{"line":120,"column":97}}]},"15":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":28},"end":{"line":121,"column":49}},{"start":{"line":121,"column":53},"end":{"line":121,"column":62}}]},"16":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":25},"end":{"line":127,"column":73}},{"start":{"line":127,"column":77},"end":{"line":127,"column":92}}]},"17":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"18":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"19":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"20":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"21":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"22":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"23":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":38}},{"start":{"line":179,"column":42},"end":{"line":179,"column":56}}]},"24":{"line":187,"type":"cond-expr","locations":[{"start":{"line":188,"column":18},"end":{"line":188,"column":48}},{"start":{"line":189,"column":18},"end":{"line":189,"column":23}}]},"25":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"26":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":14},"end":{"line":213,"column":21}},{"start":{"line":213,"column":25},"end":{"line":213,"column":27}}]},"27":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"28":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"29":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"30":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":9},"end":{"line":246,"column":24}},{"start":{"line":246,"column":28},"end":{"line":246,"column":30}}]},"31":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":23},"end":{"line":249,"column":38}},{"start":{"line":249,"column":42},"end":{"line":249,"column":44}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , Helpers = require('./helpers')","  , _ = require('lodash')","  , Transaction = require('../transaction')","  , Association = require('./base')","  , util = require('util');","","/**"," * One-to-one association"," *"," * In the API reference below, replace `Assocation` with the actual name of your association, e.g. for `User.belongsTo(Project)` the getter will be `user.getProject()`."," *"," * @mixin BelongsTo"," */","var BelongsTo = function(source, target, options) {","  Association.call(this);","","  this.associationType = 'BelongsTo';","  this.source = source;","  this.target = target;","  this.options = options;","  this.scope = options.scope;","  this.isSingleAssociation = true;","  this.isSelfAssociation = (this.source === this.target);","  this.as = this.options.as;","  this.foreignKeyAttribute = {};","","  if (this.as) {","    this.isAliased = true;","    this.options.name = {","      singular: this.as","    };","  } else {","    this.as = this.target.options.name.singular;","    this.options.name = this.target.options.name;","  }","","  if (_.isObject(this.options.foreignKey)) {","    this.foreignKeyAttribute = this.options.foreignKey;","    this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;","  } else if (this.options.foreignKey) {","    this.foreignKey = this.options.foreignKey;","  }","","  if (!this.foreignKey) {","    this.foreignKey = Utils.camelizeIf(","      [","        Utils.underscoredIf(this.as, this.source.options.underscored),","        this.target.primaryKeyAttribute","      ].join('_'),","      !this.source.options.underscored","    );","  }","","  this.identifier = this.foreignKey;","","  if (this.source.rawAttributes[this.identifier]) {","    this.identifierField = this.source.rawAttributes[this.identifier].field || this.identifier;","  }","","  this.targetKey = this.options.targetKey || this.target.primaryKeyAttribute;","  this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;","  this.targetKeyIsPrimary = this.targetKey === this.target.primaryKeyAttribute;","","  this.targetIdentifier = this.targetKey;","  this.associationAccessor = this.as;","  this.options.useHooks = options.useHooks;","","  // Get singular name, trying to uppercase the first letter, unless the model forbids it","  var singular = Utils.uppercaseFirst(this.options.name.singular);","","  this.accessors = {","    /**","     * Get the associated instance.","     *","     * @param {Object} [options]","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false.","     * @param {String} [options.schema] Apply a schema on the related model","     * @return {Promise<Instance>}","     * @method getAssociation","     */","    get: 'get' + singular,","    /**","     * Set the associated model.","     *","     * @param {Instance|String|Number} [newAssociation] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.","     * @param {Object} [options] Options passed to `this.save`","     * @param {Boolean} [options.save=true] Skip saving this after setting the foreign key if false.","     * @return {Promise}","     * @method setAssociation","     */","    set: 'set' + singular,","    /**","     * Create a new instance of the associated model and associate it with this.","     *","     * @param {Object} [values]","     * @param {Object} [options] Options passed to `target.create` and setAssociation.","     * @return {Promise}","     * @method createAssociation","     */","    create: 'create' + singular","  };","};","","util.inherits(BelongsTo, Association);","","// the id is in the source table","BelongsTo.prototype.injectAttributes = function() {","  var newAttributes = {};","","  newAttributes[this.foreignKey] = _.defaults({}, this.foreignKeyAttribute, {","    type: this.options.keyType || this.target.rawAttributes[this.targetKey].type,","    allowNull : true","  });","","  if (this.options.constraints !== false) {","    var source = this.source.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];","    this.options.onDelete = this.options.onDelete || (source.allowNull ? 'SET NULL' : 'NO ACTION');","    this.options.onUpdate = this.options.onUpdate || 'CASCADE';","  }","","  Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.target, this.source, this.options, this.targetKeyField);","  Utils.mergeDefaults(this.source.rawAttributes, newAttributes);","","  this.identifierField = this.source.rawAttributes[this.foreignKey].field || this.foreignKey;","","  this.source.refreshAttributes();","","  Helpers.checkNamingCollision(this);","","  return this;","};","","BelongsTo.prototype.mixin = function(obj) {","  var association = this;","","  obj[this.accessors.get] = function(options) {","    return association.get(this, options);","  };","","  association.injectSetter(obj);","  association.injectCreator(obj);","};","","BelongsTo.prototype.get = function(instances, options) {","  var association = this","    , Target = association.target","    , instance","    , where = {};","","  options = Utils.cloneDeep(options);","","  if (options.hasOwnProperty('scope')) {","    if (!options.scope) {","      Target = Target.unscoped();","    } else {","      Target = Target.scope(options.scope);","    }","  }","","  if (options.hasOwnProperty('schema')) {","    Target = Target.schema(options.schema, options.schemaDelimiter);","  }","","  if (!Array.isArray(instances)) {","    instance = instances;","    instances = undefined;","  }","","  if (instances) {","    where[association.targetKey] = {","      $in: instances.map(function (instance) {","        return instance.get(association.foreignKey);","      })","    };","  } else {","    if (association.targetKeyIsPrimary && !options.where) {","      return Target.findById(instance.get(association.foreignKey), options);","    } else {","      where[association.targetKey] = instance.get(association.foreignKey);","      options.limit = null;","    }","  }","","  options.where = options.where ?","                  {$and: [where, options.where]} :","                  where;","","  if (instances) {","    return Target.findAll(options).then(function (results) {","      var result = {};","      instances.forEach(function (instance) {","        result[instance.get(association.foreignKey, {raw: true})] = null;","      });","","      results.forEach(function (instance) {","        result[instance.get(association.targetKey, {raw: true})] = instance;","      });","","      return result;","    });","  }","  return Target.findOne(options);","};","","// Add setAssociaton method to the prototype of the model instance","BelongsTo.prototype.injectSetter = function(instancePrototype) {","  var association = this;","","  instancePrototype[this.accessors.set] = function(associatedInstance, options) {","    options = options || {};","","    var value = associatedInstance;","    if (associatedInstance instanceof association.target.Instance) {","      value = associatedInstance[association.targetKey];","    }","","    this.set(association.foreignKey, value);","","    if (options.save === false) return;","","    options = _.extend({","      fields: [association.foreignKey],","      allowNull: [association.foreignKey],","      association: true","    }, options);","","","    // passes the changed field to save, so only that field get updated.","    return this.save(options);","  };","","  return this;","};","","// Add createAssociation method to the prototype of the model instance","BelongsTo.prototype.injectCreator = function(instancePrototype) {","  var association = this;","","  instancePrototype[this.accessors.create] = function(values, fieldsOrOptions) {","    var instance = this","      , options = {};","","    if ((fieldsOrOptions || {}).transaction instanceof Transaction) {","      options.transaction = fieldsOrOptions.transaction;","    }","    options.logging = (fieldsOrOptions || {}).logging;","","    return association.target.create(values, fieldsOrOptions).then(function(newAssociatedObject) {","      return instance[association.accessors.set](newAssociatedObject, options);","    });","  };","","  return this;","};","","module.exports = BelongsTo;","module.exports.BelongsTo = BelongsTo;","module.exports.default = BelongsTo;",""],"l":{"3":1,"17":1,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"36":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"48":0,"57":0,"59":0,"60":0,"63":0,"64":0,"65":0,"67":0,"68":0,"69":0,"72":0,"74":0,"107":1,"110":1,"111":0,"113":0,"118":0,"119":0,"120":0,"121":0,"124":0,"125":0,"127":0,"129":0,"131":0,"133":0,"136":1,"137":0,"139":0,"140":0,"143":0,"144":0,"147":1,"148":0,"153":0,"155":0,"156":0,"157":0,"159":0,"163":0,"164":0,"167":0,"168":0,"169":0,"172":0,"173":0,"175":0,"179":0,"180":0,"182":0,"183":0,"187":0,"191":0,"192":0,"193":0,"194":0,"195":0,"198":0,"199":0,"202":0,"205":0,"209":1,"210":0,"212":0,"213":0,"215":0,"216":0,"217":0,"220":0,"222":0,"224":0,"232":0,"235":0,"239":1,"240":0,"242":0,"243":0,"246":0,"247":0,"249":0,"251":0,"252":0,"256":0,"259":1,"260":1,"261":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/helpers.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"checkNamingCollision","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}}},"2":{"name":"addForeignKeyConstraints","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":79}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":29}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":12,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":11,"column":6}},"5":{"start":{"line":15,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":43,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":24,"column":88}},"8":{"start":{"line":23,"column":31},"end":{"line":23,"column":76}},"9":{"start":{"line":24,"column":28},"end":{"line":24,"column":76}},"10":{"start":{"line":26,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":27,"column":6},"end":{"line":37,"column":7}},"12":{"start":{"line":28,"column":8},"end":{"line":34,"column":10}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":62}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":58}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":47}},"16":{"start":{"line":41,"column":6},"end":{"line":41,"column":47}},"17":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":34}},{"start":{"line":19,"column":38},"end":{"line":19,"column":54}},{"start":{"line":19,"column":58},"end":{"line":19,"column":74}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":35},"end":{"line":24,"column":67}},{"start":{"line":24,"column":71},"end":{"line":24,"column":75}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":6}},{"start":{"line":27,"column":6},"end":{"line":27,"column":6}}]},"7":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":36},"end":{"line":39,"column":39}},{"start":{"line":39,"column":43},"end":{"line":39,"column":57}}]}},"code":["'use strict';","","var Utils = require('./../utils');","","function checkNamingCollision (association) {","  if (association.source.rawAttributes.hasOwnProperty(association.as)) {","    throw new Error(","      'Naming collision between attribute \\'' + association.as +","      '\\' and association \\'' + association.as + '\\' on model ' + association.source.name +","      '. To remedy this, change either foreignKey or as in your association definition'","    );","  }","}","","function addForeignKeyConstraints (newAttribute, source, target, options, key) {","  // FK constraints are opt-in: users must either set `foreignKeyConstraints`","  // on the association, or request an `onDelete` or `onUpdate` behaviour","","  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {","","    // Find primary keys: composite keys not supported with this approach","    var primaryKeys = Utils._.chain(source.rawAttributes).keys()","      .filter(function($key) { return source.rawAttributes[$key].primaryKey; })","      .map(function($key) { return source.rawAttributes[$key].field || $key; }).value();","","    if (primaryKeys.length === 1) {","      if (!!source.$schema) {","        newAttribute.references = {","          model: source.modelManager.sequelize.queryInterface.QueryGenerator.addSchema({","            tableName: source.tableName,","            $schema: source.$schema,","            $schemaDelimiter: source.$schemaDelimiter","          })","        };","      } else {","        newAttribute.references = { model: source.tableName };","      }","","      newAttribute.references.key = key || primaryKeys[0];","      newAttribute.onDelete = options.onDelete;","      newAttribute.onUpdate = options.onUpdate;","    }","  }","}","","module.exports = {","  checkNamingCollision: checkNamingCollision,","  addForeignKeyConstraints: addForeignKeyConstraints","};",""],"l":{"3":1,"5":1,"6":0,"7":0,"15":1,"19":0,"22":0,"23":0,"24":0,"26":0,"27":0,"28":0,"36":0,"39":0,"40":0,"41":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/transaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/transaction.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"Transaction","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"2":{"name":"(anonymous_2)","line":176,"loc":{"start":{"line":176,"column":31},"end":{"line":176,"column":42}}},"3":{"name":"(anonymous_3)","line":189,"loc":{"start":{"line":189,"column":13},"end":{"line":189,"column":24}}},"4":{"name":"(anonymous_4)","line":204,"loc":{"start":{"line":204,"column":33},"end":{"line":204,"column":44}}},"5":{"name":"(anonymous_5)","line":217,"loc":{"start":{"line":217,"column":13},"end":{"line":217,"column":24}}},"6":{"name":"(anonymous_6)","line":225,"loc":{"start":{"line":225,"column":43},"end":{"line":225,"column":54}}},"7":{"name":"(anonymous_7)","line":242,"loc":{"start":{"line":242,"column":8},"end":{"line":242,"column":30}}},"8":{"name":"(anonymous_8)","line":245,"loc":{"start":{"line":245,"column":10},"end":{"line":245,"column":22}}},"9":{"name":"(anonymous_9)","line":247,"loc":{"start":{"line":247,"column":10},"end":{"line":247,"column":22}}},"10":{"name":"(anonymous_10)","line":249,"loc":{"start":{"line":249,"column":10},"end":{"line":249,"column":22}}},"11":{"name":"(anonymous_11)","line":251,"loc":{"start":{"line":251,"column":10},"end":{"line":251,"column":22}}},"12":{"name":"(anonymous_12)","line":253,"loc":{"start":{"line":253,"column":11},"end":{"line":253,"column":31}}},"13":{"name":"(anonymous_13)","line":254,"loc":{"start":{"line":254,"column":35},"end":{"line":254,"column":47}}},"14":{"name":"(anonymous_14)","line":257,"loc":{"start":{"line":257,"column":9},"end":{"line":257,"column":21}}},"15":{"name":"(anonymous_15)","line":265,"loc":{"start":{"line":265,"column":30},"end":{"line":265,"column":41}}},"16":{"name":"(anonymous_16)","line":272,"loc":{"start":{"line":272,"column":38},"end":{"line":272,"column":50}}},"17":{"name":"(anonymous_17)","line":281,"loc":{"start":{"line":281,"column":38},"end":{"line":281,"column":49}}},"18":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":42},"end":{"line":288,"column":53}}},"19":{"name":"(anonymous_19)","line":295,"loc":{"start":{"line":295,"column":32},"end":{"line":295,"column":43}}},"20":{"name":"(anonymous_20)","line":301,"loc":{"start":{"line":301,"column":34},"end":{"line":301,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":21,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":29}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":90}},"6":{"start":{"line":26,"column":2},"end":{"line":31,"column":20}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":41}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":67}},"9":{"start":{"line":36,"column":2},"end":{"line":42,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":29}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":38}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":72}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":50}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":34}},"15":{"start":{"line":80,"column":0},"end":{"line":84,"column":2}},"16":{"start":{"line":120,"column":0},"end":{"line":125,"column":2}},"17":{"start":{"line":164,"column":0},"end":{"line":169,"column":2}},"18":{"start":{"line":176,"column":0},"end":{"line":196,"column":2}},"19":{"start":{"line":177,"column":2},"end":{"line":177,"column":18}},"20":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"21":{"start":{"line":180,"column":4},"end":{"line":180,"column":113}},"22":{"start":{"line":183,"column":2},"end":{"line":183,"column":19}},"23":{"start":{"line":185,"column":2},"end":{"line":195,"column":7}},"24":{"start":{"line":190,"column":6},"end":{"line":190,"column":31}},"25":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"26":{"start":{"line":192,"column":8},"end":{"line":192,"column":30}},"27":{"start":{"line":194,"column":6},"end":{"line":194,"column":18}},"28":{"start":{"line":204,"column":0},"end":{"line":223,"column":2}},"29":{"start":{"line":205,"column":2},"end":{"line":205,"column":18}},"30":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"31":{"start":{"line":208,"column":4},"end":{"line":208,"column":115}},"32":{"start":{"line":211,"column":2},"end":{"line":211,"column":19}},"33":{"start":{"line":213,"column":2},"end":{"line":222,"column":7}},"34":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"35":{"start":{"line":219,"column":8},"end":{"line":219,"column":30}},"36":{"start":{"line":221,"column":6},"end":{"line":221,"column":18}},"37":{"start":{"line":225,"column":0},"end":{"line":263,"column":2}},"38":{"start":{"line":226,"column":2},"end":{"line":226,"column":18}},"39":{"start":{"line":227,"column":2},"end":{"line":227,"column":24}},"40":{"start":{"line":229,"column":2},"end":{"line":239,"column":3}},"41":{"start":{"line":230,"column":4},"end":{"line":230,"column":70}},"42":{"start":{"line":232,"column":4},"end":{"line":232,"column":41}},"43":{"start":{"line":234,"column":4},"end":{"line":236,"column":5}},"44":{"start":{"line":235,"column":6},"end":{"line":235,"column":37}},"45":{"start":{"line":238,"column":4},"end":{"line":238,"column":87}},"46":{"start":{"line":241,"column":2},"end":{"line":262,"column":5}},"47":{"start":{"line":243,"column":4},"end":{"line":243,"column":33}},"48":{"start":{"line":244,"column":4},"end":{"line":244,"column":35}},"49":{"start":{"line":246,"column":4},"end":{"line":246,"column":24}},"50":{"start":{"line":248,"column":4},"end":{"line":248,"column":32}},"51":{"start":{"line":250,"column":4},"end":{"line":250,"column":36}},"52":{"start":{"line":252,"column":4},"end":{"line":252,"column":32}},"53":{"start":{"line":254,"column":4},"end":{"line":256,"column":7}},"54":{"start":{"line":255,"column":6},"end":{"line":255,"column":21}},"55":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"56":{"start":{"line":259,"column":6},"end":{"line":259,"column":62}},"57":{"start":{"line":261,"column":4},"end":{"line":261,"column":16}},"58":{"start":{"line":265,"column":0},"end":{"line":270,"column":2}},"59":{"start":{"line":266,"column":2},"end":{"line":269,"column":42}},"60":{"start":{"line":272,"column":0},"end":{"line":279,"column":2}},"61":{"start":{"line":273,"column":2},"end":{"line":278,"column":3}},"62":{"start":{"line":274,"column":4},"end":{"line":277,"column":44}},"63":{"start":{"line":281,"column":0},"end":{"line":286,"column":2}},"64":{"start":{"line":282,"column":2},"end":{"line":285,"column":64}},"65":{"start":{"line":288,"column":0},"end":{"line":293,"column":2}},"66":{"start":{"line":289,"column":2},"end":{"line":292,"column":72}},"67":{"start":{"line":295,"column":0},"end":{"line":299,"column":2}},"68":{"start":{"line":296,"column":2},"end":{"line":296,"column":80}},"69":{"start":{"line":297,"column":2},"end":{"line":297,"column":35}},"70":{"start":{"line":298,"column":2},"end":{"line":298,"column":13}},"71":{"start":{"line":301,"column":0},"end":{"line":309,"column":2}},"72":{"start":{"line":302,"column":2},"end":{"line":302,"column":43}},"73":{"start":{"line":304,"column":2},"end":{"line":308,"column":3}},"74":{"start":{"line":305,"column":4},"end":{"line":307,"column":5}},"75":{"start":{"line":306,"column":6},"end":{"line":306,"column":35}},"76":{"start":{"line":311,"column":0},"end":{"line":311,"column":29}},"77":{"start":{"line":312,"column":0},"end":{"line":312,"column":41}},"78":{"start":{"line":313,"column":0},"end":{"line":313,"column":37}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":5},"end":{"line":31,"column":12}},{"start":{"line":31,"column":16},"end":{"line":31,"column":18}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":26},"end":{"line":34,"column":40}},{"start":{"line":34,"column":43},"end":{"line":34,"column":66}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"5":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"6":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"7":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":6}},{"start":{"line":218,"column":6},"end":{"line":218,"column":6}}]},"8":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"9":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"10":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"11":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"12":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"13":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]}},"code":["'use strict';","","var Utils = require('./utils');","","/**"," * The transaction object is used to identify a running transaction. It is created by calling `Sequelize.transaction()`."," *"," * To run a query under a transaction, you should pass the transaction in the options object."," * @class Transaction"," * @constructor"," *"," * @param {Sequelize} sequelize A configured sequelize Instance"," * @param {Object} options An object with options"," * @param {Boolean} options.autocommit=true Sets the autocommit property of the transaction."," * @param {String} options.type=true Sets the type of the transaction."," * @param {String} options.isolationLevel=true Sets the isolation level of the transaction."," * @param {String} options.deferrable Sets the constraints to be deferred or immediately checked."," * @param {String} options.readOnly=false Sets the read-only property of the transaction. Such transactions"," *   will use read replicas when available"," */","function Transaction(sequelize, options) {","  this.sequelize = sequelize;","  this.savepoints = [];","  var generateTransactionId = this.sequelize.dialect.QueryGenerator.generateTransactionId;","","  this.options = Utils._.extend({","    autocommit: true,","    type: sequelize.options.transactionType,","    isolationLevel: sequelize.options.isolationLevel,","    readOnly: false","  }, options || {});","","  this.parent = this.options.transaction;","  this.id = this.parent ? this.parent.id : generateTransactionId();","","  if (this.parent) {","    this.id = this.parent.id;","    this.parent.savepoints.push(this);","    this.name = this.id + '-savepoint-' + this.parent.savepoints.length;","  } else {","    this.id = this.name = generateTransactionId();","  }","","  delete this.options.transaction;","}","","/**"," * Types can be set per-transaction by passing `options.type` to `sequelize.transaction`."," * Default to `DEFERRED` but you can override the default type by passing `options.transactionType` in `new Sequelize`."," * Sqlite only."," *"," * The possible types to use when starting a transaction:"," *"," * ```js"," * {"," *   DEFERRED: \"DEFERRED\","," *   IMMEDIATE: \"IMMEDIATE\","," *   EXCLUSIVE: \"EXCLUSIVE\""," * }"," * ```"," *"," * Pass in the desired level as the first argument:"," *"," * ```js"," * return sequelize.transaction({"," *   type: Sequelize.Transaction.EXCLUSIVE"," * }, function (t) {"," *"," *  // your transactions"," *"," * }).then(function(result) {"," *   // transaction has been committed. Do something after the commit if required."," * }).catch(function(err) {"," *   // do something with the err."," * });"," * ```"," *"," * @property TYPES"," */","Transaction.TYPES = {","  DEFERRED: 'DEFERRED',","  IMMEDIATE: 'IMMEDIATE',","  EXCLUSIVE: 'EXCLUSIVE'","};","","","/**"," * Isolations levels can be set per-transaction by passing `options.isolationLevel` to `sequelize.transaction`."," * Default to `REPEATABLE_READ` but you can override the default isolation level by passing `options.isolationLevel` in `new Sequelize`."," *"," * The possible isolations levels to use when starting a transaction:"," *"," * ```js"," * {"," *   READ_UNCOMMITTED: \"READ UNCOMMITTED\","," *   READ_COMMITTED: \"READ COMMITTED\","," *   REPEATABLE_READ: \"REPEATABLE READ\","," *   SERIALIZABLE: \"SERIALIZABLE\""," * }"," * ```"," *"," * Pass in the desired level as the first argument:"," *"," * ```js"," * return sequelize.transaction({"," *   isolationLevel: Sequelize.Transaction.SERIALIZABLE"," * }, function (t) {"," *"," *  // your transactions"," *"," * }).then(function(result) {"," *   // transaction has been committed. Do something after the commit if required."," * }).catch(function(err) {"," *   // do something with the err."," * });"," * ```"," *"," * @property ISOLATION_LEVELS"," */","Transaction.ISOLATION_LEVELS = {","  READ_UNCOMMITTED: 'READ UNCOMMITTED',","  READ_COMMITTED: 'READ COMMITTED',","  REPEATABLE_READ: 'REPEATABLE READ',","  SERIALIZABLE: 'SERIALIZABLE'","};","","/**"," * Possible options for row locking. Used in conjunction with `find` calls:"," *"," * ```js"," * t1 // is a transaction"," * t1.LOCK.UPDATE,"," * t1.LOCK.SHARE,"," * t1.LOCK.KEY_SHARE, // Postgres 9.3+ only"," * t1.LOCK.NO_KEY_UPDATE // Postgres 9.3+ only"," * ```"," *"," * Usage:"," * ```js"," * t1 // is a transaction"," * Model.findAll({"," *   where: ...,"," *   transaction: t1,"," *   lock: t1.LOCK..."," * });"," * ```"," *"," * Postgres also supports specific locks while eager loading by using OF:"," * ```js"," * UserModel.findAll({"," *   where: ...,"," *   include: [TaskModel, ...],"," *   transaction: t1,"," *   lock: {"," *     level: t1.LOCK...,"," *     of: UserModel"," *   }"," * });"," * ```"," * UserModel will be locked but TaskModel won't!"," *"," * @property LOCK"," */","Transaction.LOCK = Transaction.prototype.LOCK = {","  UPDATE: 'UPDATE',","  SHARE: 'SHARE',","  KEY_SHARE: 'KEY SHARE',","  NO_KEY_UPDATE: 'NO KEY UPDATE'","};","","/**"," * Commit the transaction"," *"," * @return {Promise}"," */","Transaction.prototype.commit = function() {","  var self = this;","","  if (this.finished) {","    throw new Error('Transaction cannot be committed because it has been finished with state: ' + self.finished);","  }","","  this.$clearCls();","","  return this","    .sequelize","    .getQueryInterface()","    .commitTransaction(this, this.options)","    .finally(function() {","      self.finished = 'commit';","      if (!self.parent) {","        return self.cleanup();","      }","      return null;","    });","};","","","/**"," * Rollback (abort) the transaction"," *"," * @return {Promise}"," */","Transaction.prototype.rollback = function() {","  var self = this;","","  if (this.finished) {","    throw new Error('Transaction cannot be rolled back because it has been finished with state: ' + self.finished);","  }","","  this.$clearCls();","","  return this","    .sequelize","    .getQueryInterface()","    .rollbackTransaction(this, this.options)","    .finally(function() {","      if (!self.parent) {","        return self.cleanup();","      }","      return self;","    });","};","","Transaction.prototype.prepareEnvironment = function() {","  var self = this;","  var connectionPromise;","","  if (this.parent) {","    connectionPromise = Utils.Promise.resolve(this.parent.connection);","  } else {","    var acquireOptions = {uuid: this.id};","","    if (this.options.readOnly) {","      acquireOptions.type = 'SELECT';","    }","","    connectionPromise = this.sequelize.connectionManager.getConnection(acquireOptions);","  }","","  return connectionPromise","  .then(function (connection) {","    self.connection = connection;","    self.connection.uuid = self.id;","  }).then(function () {","    return self.begin();","  }).then(function () {","    return self.setDeferrable();","  }).then(function () {","    return self.setIsolationLevel();","  }).then(function () {","    return self.setAutocommit();","  }).catch(function (setupErr) {","    return self.rollback().finally(function () {","      throw setupErr;","    });","  }).tap(function () {","    if (self.sequelize.constructor.cls) {","      self.sequelize.constructor.cls.set('transaction', self);","    }","    return null;","  });","};","","Transaction.prototype.begin = function() {","  return this","    .sequelize","    .getQueryInterface()","    .startTransaction(this, this.options);","};","","Transaction.prototype.setDeferrable = function () {","  if (this.options.deferrable) {","    return this","      .sequelize","      .getQueryInterface()","      .deferConstraints(this, this.options);","  }","};","","Transaction.prototype.setAutocommit = function() {","  return this","    .sequelize","    .getQueryInterface()","    .setAutocommit(this, this.options.autocommit, this.options);","};","","Transaction.prototype.setIsolationLevel = function() {","  return this","    .sequelize","    .getQueryInterface()","    .setIsolationLevel(this, this.options.isolationLevel, this.options);","};","","Transaction.prototype.cleanup = function() {","  var res = this.sequelize.connectionManager.releaseConnection(this.connection);","  this.connection.uuid = undefined;","  return res;","};","","Transaction.prototype.$clearCls = function () {","  var cls = this.sequelize.constructor.cls;","","  if (cls) {","    if (cls.get('transaction') === this) {","      cls.set('transaction', null);","    }","  }","};","","module.exports = Transaction;","module.exports.Transaction = Transaction;","module.exports.default = Transaction;",""],"l":{"3":1,"21":1,"22":0,"23":0,"24":0,"26":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"44":0,"80":1,"120":1,"164":1,"176":1,"177":0,"179":0,"180":0,"183":0,"185":0,"190":0,"191":0,"192":0,"194":0,"204":1,"205":0,"207":0,"208":0,"211":0,"213":0,"218":0,"219":0,"221":0,"225":1,"226":0,"227":0,"229":0,"230":0,"232":0,"234":0,"235":0,"238":0,"241":0,"243":0,"244":0,"246":0,"248":0,"250":0,"252":0,"254":0,"255":0,"258":0,"259":0,"261":0,"265":1,"266":0,"272":1,"273":0,"274":0,"281":1,"282":0,"288":1,"289":0,"295":1,"296":0,"297":0,"298":0,"301":1,"302":0,"304":0,"305":0,"306":0,"311":1,"312":1,"313":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/base.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/base.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":1,"15":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":18},"end":{"line":3,"column":29}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":40},"end":{"line":6,"column":56}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":18},"end":{"line":10,"column":32}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":32},"end":{"line":22,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":18}},"5":{"start":{"line":10,"column":2},"end":{"line":19,"column":11}},"6":{"start":{"line":11,"column":4},"end":{"line":17,"column":5}},"7":{"start":{"line":12,"column":6},"end":{"line":12,"column":27}},"8":{"start":{"line":13,"column":6},"end":{"line":13,"column":57}},"9":{"start":{"line":14,"column":6},"end":{"line":16,"column":9}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"11":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]}},"code":["'use strict';","","var Association = function() {};","","// Normalize input - may be array or single obj, instance or primary key - convert it to an array of built objects","Association.prototype.toInstanceArray = function (objs) {","  if (!Array.isArray(objs)) {","    objs = [objs];","  }","  return objs.map(function(obj) {","    if (!(obj instanceof this.target.Instance)) {","      var tmpInstance = {};","      tmpInstance[this.target.primaryKeyAttribute] = obj;","      return this.target.build(tmpInstance, {","        isNewRecord: false","      });","    }","    return obj;","  }, this);","};","","Association.prototype.inspect = function() {","  return this.as;","};","","module.exports = Association;","module.exports.Association = Association;","module.exports.default = Association;",""],"l":{"3":1,"6":1,"7":0,"8":0,"10":0,"11":0,"12":0,"13":0,"14":0,"18":0,"22":1,"23":0,"26":1,"27":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/belongs-to-many.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/belongs-to-many.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":1,"293":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":54}}},"2":{"name":"(anonymous_2)","line":149,"loc":{"start":{"line":149,"column":35},"end":{"line":149,"column":57}}},"3":{"name":"(anonymous_3)","line":311,"loc":{"start":{"line":311,"column":43},"end":{"line":311,"column":54}}},"4":{"name":"(anonymous_4)","line":319,"loc":{"start":{"line":319,"column":43},"end":{"line":319,"column":78}}},"5":{"name":"(anonymous_5)","line":435,"loc":{"start":{"line":435,"column":30},"end":{"line":435,"column":58}}},"6":{"name":"(anonymous_6)","line":494,"loc":{"start":{"line":494,"column":39},"end":{"line":494,"column":53}}},"7":{"name":"(anonymous_7)","line":497,"loc":{"start":{"line":497,"column":28},"end":{"line":497,"column":46}}},"8":{"name":"(anonymous_8)","line":501,"loc":{"start":{"line":501,"column":30},"end":{"line":501,"column":48}}},"9":{"name":"(anonymous_9)","line":513,"loc":{"start":{"line":513,"column":67},"end":{"line":513,"column":85}}},"10":{"name":"(anonymous_10)","line":518,"loc":{"start":{"line":518,"column":63},"end":{"line":518,"column":92}}},"11":{"name":"(anonymous_11)","line":531,"loc":{"start":{"line":531,"column":30},"end":{"line":531,"column":50}}},"12":{"name":"(anonymous_12)","line":548,"loc":{"start":{"line":548,"column":57},"end":{"line":548,"column":85}}},"13":{"name":"(anonymous_13)","line":556,"loc":{"start":{"line":556,"column":39},"end":{"line":556,"column":53}}},"14":{"name":"(anonymous_14)","line":559,"loc":{"start":{"line":559,"column":28},"end":{"line":559,"column":68}}},"15":{"name":"(anonymous_15)","line":580,"loc":{"start":{"line":580,"column":22},"end":{"line":580,"column":45}}},"16":{"name":"(anonymous_16)","line":589,"loc":{"start":{"line":589,"column":56},"end":{"line":589,"column":70}}},"17":{"name":"(anonymous_17)","line":590,"loc":{"start":{"line":590,"column":36},"end":{"line":590,"column":57}}},"18":{"name":"(anonymous_18)","line":595,"loc":{"start":{"line":595,"column":26},"end":{"line":595,"column":47}}},"19":{"name":"(anonymous_19)","line":596,"loc":{"start":{"line":596,"column":50},"end":{"line":596,"column":64}}},"20":{"name":"(anonymous_20)","line":626,"loc":{"start":{"line":626,"column":60},"end":{"line":626,"column":90}}},"21":{"name":"(anonymous_21)","line":636,"loc":{"start":{"line":636,"column":43},"end":{"line":636,"column":72}}},"22":{"name":"(anonymous_22)","line":656,"loc":{"start":{"line":656,"column":62},"end":{"line":656,"column":107}}},"23":{"name":"(anonymous_23)","line":674,"loc":{"start":{"line":674,"column":48},"end":{"line":674,"column":71}}},"24":{"name":"(anonymous_24)","line":681,"loc":{"start":{"line":681,"column":22},"end":{"line":681,"column":45}}},"25":{"name":"(anonymous_25)","line":685,"loc":{"start":{"line":685,"column":27},"end":{"line":685,"column":41}}},"26":{"name":"(anonymous_26)","line":686,"loc":{"start":{"line":686,"column":54},"end":{"line":686,"column":72}}},"27":{"name":"(anonymous_27)","line":696,"loc":{"start":{"line":696,"column":46},"end":{"line":696,"column":67}}},"28":{"name":"(anonymous_28)","line":705,"loc":{"start":{"line":705,"column":43},"end":{"line":705,"column":72}}},"29":{"name":"(anonymous_29)","line":720,"loc":{"start":{"line":720,"column":34},"end":{"line":720,"column":50}}},"30":{"name":"(anonymous_30)","line":741,"loc":{"start":{"line":741,"column":68},"end":{"line":741,"column":108}}},"31":{"name":"(anonymous_31)","line":748,"loc":{"start":{"line":748,"column":68},"end":{"line":748,"column":91}}},"32":{"name":"(anonymous_32)","line":758,"loc":{"start":{"line":758,"column":40},"end":{"line":758,"column":54}}},"33":{"name":"(anonymous_33)","line":761,"loc":{"start":{"line":761,"column":31},"end":{"line":761,"column":57}}},"34":{"name":"(anonymous_34)","line":780,"loc":{"start":{"line":780,"column":59},"end":{"line":780,"column":89}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":41,"column":0},"end":{"line":305,"column":2}},"3":{"start":{"line":42,"column":2},"end":{"line":42,"column":25}},"4":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"5":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"6":{"start":{"line":47,"column":4},"end":{"line":47,"column":96}},"7":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"8":{"start":{"line":51,"column":4},"end":{"line":53,"column":6}},"9":{"start":{"line":56,"column":2},"end":{"line":56,"column":41}},"10":{"start":{"line":57,"column":2},"end":{"line":57,"column":23}},"11":{"start":{"line":58,"column":2},"end":{"line":58,"column":23}},"12":{"start":{"line":59,"column":2},"end":{"line":59,"column":32}},"13":{"start":{"line":60,"column":2},"end":{"line":60,"column":25}},"14":{"start":{"line":61,"column":2},"end":{"line":61,"column":49}},"15":{"start":{"line":62,"column":2},"end":{"line":62,"column":47}},"16":{"start":{"line":63,"column":2},"end":{"line":63,"column":29}},"17":{"start":{"line":64,"column":2},"end":{"line":64,"column":33}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":55}},"19":{"start":{"line":66,"column":2},"end":{"line":66,"column":28}},"20":{"start":{"line":67,"column":2},"end":{"line":67,"column":28}},"21":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":81}},"23":{"start":{"line":73,"column":2},"end":{"line":88,"column":3}},"24":{"start":{"line":74,"column":4},"end":{"line":74,"column":26}},"25":{"start":{"line":76,"column":4},"end":{"line":84,"column":5}},"26":{"start":{"line":77,"column":6},"end":{"line":77,"column":34}},"27":{"start":{"line":78,"column":6},"end":{"line":78,"column":31}},"28":{"start":{"line":80,"column":6},"end":{"line":83,"column":8}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":46}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":49}},"31":{"start":{"line":90,"column":2},"end":{"line":93,"column":4}},"32":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"33":{"start":{"line":99,"column":4},"end":{"line":99,"column":34}},"34":{"start":{"line":105,"column":2},"end":{"line":121,"column":3}},"35":{"start":{"line":106,"column":4},"end":{"line":106,"column":55}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":90}},"37":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"38":{"start":{"line":110,"column":6},"end":{"line":110,"column":36}},"39":{"start":{"line":113,"column":4},"end":{"line":113,"column":34}},"40":{"start":{"line":114,"column":4},"end":{"line":120,"column":6}},"41":{"start":{"line":123,"column":2},"end":{"line":144,"column":3}},"42":{"start":{"line":124,"column":4},"end":{"line":124,"column":51}},"43":{"start":{"line":125,"column":4},"end":{"line":125,"column":84}},"44":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"45":{"start":{"line":128,"column":6},"end":{"line":128,"column":34}},"46":{"start":{"line":131,"column":4},"end":{"line":131,"column":32}},"47":{"start":{"line":132,"column":4},"end":{"line":143,"column":6}},"48":{"start":{"line":149,"column":2},"end":{"line":157,"column":16}},"49":{"start":{"line":150,"column":4},"end":{"line":150,"column":64}},"50":{"start":{"line":150,"column":57},"end":{"line":150,"column":64}},"51":{"start":{"line":151,"column":4},"end":{"line":151,"column":51}},"52":{"start":{"line":151,"column":44},"end":{"line":151,"column":51}},"53":{"start":{"line":153,"column":4},"end":{"line":156,"column":5}},"54":{"start":{"line":154,"column":6},"end":{"line":154,"column":32}},"55":{"start":{"line":155,"column":6},"end":{"line":155,"column":32}},"56":{"start":{"line":159,"column":2},"end":{"line":170,"column":3}},"57":{"start":{"line":160,"column":4},"end":{"line":169,"column":5}},"58":{"start":{"line":161,"column":6},"end":{"line":166,"column":10}},"59":{"start":{"line":168,"column":6},"end":{"line":168,"column":68}},"60":{"start":{"line":172,"column":2},"end":{"line":174,"column":6}},"61":{"start":{"line":176,"column":2},"end":{"line":189,"column":3}},"62":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"63":{"start":{"line":178,"column":6},"end":{"line":178,"column":45}},"64":{"start":{"line":180,"column":4},"end":{"line":188,"column":5}},"65":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"66":{"start":{"line":183,"column":8},"end":{"line":183,"column":70}},"67":{"start":{"line":185,"column":6},"end":{"line":185,"column":45}},"68":{"start":{"line":186,"column":6},"end":{"line":186,"column":54}},"69":{"start":{"line":187,"column":6},"end":{"line":187,"column":48}},"70":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"71":{"start":{"line":192,"column":4},"end":{"line":192,"column":43}},"72":{"start":{"line":195,"column":2},"end":{"line":195,"column":151}},"73":{"start":{"line":197,"column":2},"end":{"line":197,"column":37}},"74":{"start":{"line":200,"column":2},"end":{"line":201,"column":66}},"75":{"start":{"line":203,"column":2},"end":{"line":300,"column":4}},"76":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"77":{"start":{"line":303,"column":4},"end":{"line":303,"column":96}},"78":{"start":{"line":307,"column":0},"end":{"line":307,"column":42}},"79":{"start":{"line":311,"column":0},"end":{"line":433,"column":2}},"80":{"start":{"line":312,"column":2},"end":{"line":312,"column":18}},"81":{"start":{"line":314,"column":2},"end":{"line":314,"column":36}},"82":{"start":{"line":315,"column":2},"end":{"line":315,"column":41}},"83":{"start":{"line":319,"column":2},"end":{"line":331,"column":5}},"84":{"start":{"line":320,"column":4},"end":{"line":330,"column":5}},"85":{"start":{"line":321,"column":6},"end":{"line":328,"column":7}},"86":{"start":{"line":324,"column":8},"end":{"line":324,"column":37}},"87":{"start":{"line":327,"column":8},"end":{"line":327,"column":63}},"88":{"start":{"line":329,"column":6},"end":{"line":329,"column":36}},"89":{"start":{"line":333,"column":2},"end":{"line":340,"column":88}},"90":{"start":{"line":342,"column":2},"end":{"line":347,"column":3}},"91":{"start":{"line":343,"column":4},"end":{"line":343,"column":67}},"92":{"start":{"line":344,"column":9},"end":{"line":347,"column":3}},"93":{"start":{"line":345,"column":4},"end":{"line":345,"column":103}},"94":{"start":{"line":346,"column":4},"end":{"line":346,"column":64}},"95":{"start":{"line":349,"column":2},"end":{"line":353,"column":3}},"96":{"start":{"line":350,"column":4},"end":{"line":352,"column":6}},"97":{"start":{"line":355,"column":2},"end":{"line":359,"column":3}},"98":{"start":{"line":356,"column":4},"end":{"line":358,"column":6}},"99":{"start":{"line":361,"column":2},"end":{"line":383,"column":3}},"100":{"start":{"line":362,"column":4},"end":{"line":365,"column":6}},"101":{"start":{"line":367,"column":4},"end":{"line":367,"column":115}},"102":{"start":{"line":368,"column":4},"end":{"line":368,"column":115}},"103":{"start":{"line":370,"column":4},"end":{"line":370,"column":72}},"104":{"start":{"line":370,"column":35},"end":{"line":370,"column":72}},"105":{"start":{"line":371,"column":4},"end":{"line":371,"column":72}},"106":{"start":{"line":371,"column":35},"end":{"line":371,"column":72}},"107":{"start":{"line":373,"column":4},"end":{"line":376,"column":6}},"108":{"start":{"line":378,"column":4},"end":{"line":378,"column":113}},"109":{"start":{"line":379,"column":4},"end":{"line":379,"column":113}},"110":{"start":{"line":381,"column":4},"end":{"line":381,"column":72}},"111":{"start":{"line":381,"column":35},"end":{"line":381,"column":72}},"112":{"start":{"line":382,"column":4},"end":{"line":382,"column":72}},"113":{"start":{"line":382,"column":35},"end":{"line":382,"column":72}},"114":{"start":{"line":385,"column":2},"end":{"line":385,"column":131}},"115":{"start":{"line":386,"column":2},"end":{"line":386,"column":127}},"116":{"start":{"line":388,"column":2},"end":{"line":388,"column":100}},"117":{"start":{"line":389,"column":2},"end":{"line":389,"column":103}},"118":{"start":{"line":391,"column":2},"end":{"line":393,"column":3}},"119":{"start":{"line":392,"column":4},"end":{"line":392,"column":126}},"120":{"start":{"line":395,"column":2},"end":{"line":395,"column":41}},"121":{"start":{"line":397,"column":2},"end":{"line":399,"column":5}},"122":{"start":{"line":400,"column":2},"end":{"line":402,"column":5}},"123":{"start":{"line":403,"column":2},"end":{"line":406,"column":5}},"124":{"start":{"line":408,"column":2},"end":{"line":410,"column":5}},"125":{"start":{"line":411,"column":2},"end":{"line":413,"column":5}},"126":{"start":{"line":414,"column":2},"end":{"line":417,"column":5}},"127":{"start":{"line":419,"column":2},"end":{"line":428,"column":3}},"128":{"start":{"line":420,"column":4},"end":{"line":422,"column":7}},"129":{"start":{"line":424,"column":4},"end":{"line":427,"column":7}},"130":{"start":{"line":430,"column":2},"end":{"line":430,"column":37}},"131":{"start":{"line":432,"column":2},"end":{"line":432,"column":14}},"132":{"start":{"line":435,"column":0},"end":{"line":492,"column":2}},"133":{"start":{"line":436,"column":2},"end":{"line":436,"column":43}},"134":{"start":{"line":438,"column":2},"end":{"line":441,"column":19}},"135":{"start":{"line":443,"column":2},"end":{"line":445,"column":3}},"136":{"start":{"line":444,"column":4},"end":{"line":444,"column":44}},"137":{"start":{"line":447,"column":2},"end":{"line":452,"column":4}},"138":{"start":{"line":454,"column":2},"end":{"line":476,"column":3}},"139":{"start":{"line":455,"column":4},"end":{"line":455,"column":22}},"140":{"start":{"line":456,"column":4},"end":{"line":456,"column":96}},"141":{"start":{"line":458,"column":4},"end":{"line":460,"column":5}},"142":{"start":{"line":459,"column":6},"end":{"line":459,"column":44}},"143":{"start":{"line":463,"column":4},"end":{"line":467,"column":5}},"144":{"start":{"line":464,"column":6},"end":{"line":466,"column":8}},"145":{"start":{"line":469,"column":4},"end":{"line":469,"column":44}},"146":{"start":{"line":470,"column":4},"end":{"line":475,"column":7}},"147":{"start":{"line":478,"column":2},"end":{"line":478,"column":33}},"148":{"start":{"line":479,"column":2},"end":{"line":485,"column":3}},"149":{"start":{"line":480,"column":4},"end":{"line":484,"column":5}},"150":{"start":{"line":481,"column":6},"end":{"line":481,"column":31}},"151":{"start":{"line":483,"column":6},"end":{"line":483,"column":41}},"152":{"start":{"line":487,"column":2},"end":{"line":489,"column":3}},"153":{"start":{"line":488,"column":4},"end":{"line":488,"column":66}},"154":{"start":{"line":491,"column":2},"end":{"line":491,"column":32}},"155":{"start":{"line":494,"column":0},"end":{"line":554,"column":2}},"156":{"start":{"line":495,"column":2},"end":{"line":495,"column":25}},"157":{"start":{"line":497,"column":2},"end":{"line":499,"column":4}},"158":{"start":{"line":498,"column":4},"end":{"line":498,"column":42}},"159":{"start":{"line":501,"column":2},"end":{"line":516,"column":4}},"160":{"start":{"line":502,"column":4},"end":{"line":503,"column":36}},"161":{"start":{"line":505,"column":4},"end":{"line":505,"column":39}},"162":{"start":{"line":506,"column":4},"end":{"line":508,"column":6}},"163":{"start":{"line":509,"column":4},"end":{"line":509,"column":37}},"164":{"start":{"line":510,"column":4},"end":{"line":510,"column":23}},"165":{"start":{"line":511,"column":4},"end":{"line":511,"column":25}},"166":{"start":{"line":513,"column":4},"end":{"line":515,"column":7}},"167":{"start":{"line":514,"column":6},"end":{"line":514,"column":40}},"168":{"start":{"line":518,"column":2},"end":{"line":551,"column":4}},"169":{"start":{"line":519,"column":4},"end":{"line":519,"column":19}},"170":{"start":{"line":521,"column":4},"end":{"line":523,"column":5}},"171":{"start":{"line":522,"column":6},"end":{"line":522,"column":30}},"172":{"start":{"line":525,"column":4},"end":{"line":529,"column":7}},"173":{"start":{"line":531,"column":4},"end":{"line":539,"column":7}},"174":{"start":{"line":532,"column":6},"end":{"line":538,"column":7}},"175":{"start":{"line":533,"column":8},"end":{"line":533,"column":32}},"176":{"start":{"line":535,"column":8},"end":{"line":535,"column":24}},"177":{"start":{"line":536,"column":8},"end":{"line":536,"column":66}},"178":{"start":{"line":537,"column":8},"end":{"line":537,"column":22}},"179":{"start":{"line":541,"column":4},"end":{"line":546,"column":6}},"180":{"start":{"line":548,"column":4},"end":{"line":550,"column":7}},"181":{"start":{"line":549,"column":6},"end":{"line":549,"column":59}},"182":{"start":{"line":553,"column":2},"end":{"line":553,"column":14}},"183":{"start":{"line":556,"column":0},"end":{"line":756,"column":2}},"184":{"start":{"line":557,"column":2},"end":{"line":557,"column":25}},"185":{"start":{"line":559,"column":2},"end":{"line":654,"column":4}},"186":{"start":{"line":560,"column":4},"end":{"line":560,"column":28}},"187":{"start":{"line":561,"column":4},"end":{"line":566,"column":19}},"188":{"start":{"line":568,"column":4},"end":{"line":572,"column":5}},"189":{"start":{"line":569,"column":6},"end":{"line":569,"column":32}},"190":{"start":{"line":571,"column":6},"end":{"line":571,"column":79}},"191":{"start":{"line":574,"column":4},"end":{"line":574,"column":44}},"192":{"start":{"line":575,"column":4},"end":{"line":575,"column":47}},"193":{"start":{"line":577,"column":4},"end":{"line":653,"column":7}},"194":{"start":{"line":581,"column":6},"end":{"line":584,"column":30}},"195":{"start":{"line":587,"column":6},"end":{"line":587,"column":150}},"196":{"start":{"line":589,"column":6},"end":{"line":593,"column":9}},"197":{"start":{"line":590,"column":8},"end":{"line":592,"column":11}},"198":{"start":{"line":591,"column":10},"end":{"line":591,"column":70}},"199":{"start":{"line":595,"column":6},"end":{"line":621,"column":9}},"200":{"start":{"line":596,"column":8},"end":{"line":598,"column":11}},"201":{"start":{"line":597,"column":10},"end":{"line":597,"column":70}},"202":{"start":{"line":600,"column":8},"end":{"line":620,"column":9}},"203":{"start":{"line":601,"column":10},"end":{"line":601,"column":48}},"204":{"start":{"line":603,"column":10},"end":{"line":603,"column":73}},"205":{"start":{"line":605,"column":10},"end":{"line":607,"column":11}},"206":{"start":{"line":606,"column":12},"end":{"line":606,"column":35}},"207":{"start":{"line":609,"column":10},"end":{"line":610,"column":80}},"208":{"start":{"line":612,"column":10},"end":{"line":612,"column":54}},"209":{"start":{"line":613,"column":10},"end":{"line":613,"column":59}},"210":{"start":{"line":615,"column":10},"end":{"line":619,"column":11}},"211":{"start":{"line":616,"column":12},"end":{"line":618,"column":17}},"212":{"start":{"line":623,"column":6},"end":{"line":633,"column":7}},"213":{"start":{"line":624,"column":8},"end":{"line":624,"column":23}},"214":{"start":{"line":625,"column":8},"end":{"line":625,"column":52}},"215":{"start":{"line":626,"column":8},"end":{"line":628,"column":11}},"216":{"start":{"line":627,"column":10},"end":{"line":627,"column":56}},"217":{"start":{"line":630,"column":8},"end":{"line":632,"column":22}},"218":{"start":{"line":635,"column":6},"end":{"line":650,"column":7}},"219":{"start":{"line":636,"column":8},"end":{"line":647,"column":22}},"220":{"start":{"line":637,"column":10},"end":{"line":637,"column":30}},"221":{"start":{"line":639,"column":10},"end":{"line":639,"column":59}},"222":{"start":{"line":640,"column":10},"end":{"line":640,"column":76}},"223":{"start":{"line":642,"column":10},"end":{"line":642,"column":117}},"224":{"start":{"line":644,"column":10},"end":{"line":644,"column":58}},"225":{"start":{"line":646,"column":10},"end":{"line":646,"column":28}},"226":{"start":{"line":649,"column":8},"end":{"line":649,"column":105}},"227":{"start":{"line":652,"column":6},"end":{"line":652,"column":41}},"228":{"start":{"line":656,"column":2},"end":{"line":739,"column":4}},"229":{"start":{"line":658,"column":4},"end":{"line":658,"column":54}},"230":{"start":{"line":658,"column":23},"end":{"line":658,"column":54}},"231":{"start":{"line":660,"column":4},"end":{"line":660,"column":63}},"232":{"start":{"line":662,"column":4},"end":{"line":668,"column":39}},"233":{"start":{"line":670,"column":4},"end":{"line":670,"column":61}},"234":{"start":{"line":672,"column":4},"end":{"line":672,"column":19}},"235":{"start":{"line":673,"column":4},"end":{"line":673,"column":48}},"236":{"start":{"line":674,"column":4},"end":{"line":674,"column":111}},"237":{"start":{"line":674,"column":73},"end":{"line":674,"column":107}},"238":{"start":{"line":676,"column":4},"end":{"line":676,"column":47}},"239":{"start":{"line":678,"column":4},"end":{"line":738,"column":7}},"240":{"start":{"line":682,"column":6},"end":{"line":682,"column":24}},"241":{"start":{"line":684,"column":6},"end":{"line":684,"column":61}},"242":{"start":{"line":685,"column":6},"end":{"line":702,"column":9}},"243":{"start":{"line":686,"column":8},"end":{"line":688,"column":11}},"244":{"start":{"line":687,"column":10},"end":{"line":687,"column":67}},"245":{"start":{"line":690,"column":8},"end":{"line":701,"column":9}},"246":{"start":{"line":691,"column":10},"end":{"line":691,"column":40}},"247":{"start":{"line":693,"column":10},"end":{"line":694,"column":80}},"248":{"start":{"line":696,"column":10},"end":{"line":700,"column":11}},"249":{"start":{"line":697,"column":12},"end":{"line":697,"column":76}},"250":{"start":{"line":699,"column":12},"end":{"line":699,"column":42}},"251":{"start":{"line":704,"column":6},"end":{"line":718,"column":7}},"252":{"start":{"line":705,"column":8},"end":{"line":715,"column":22}},"253":{"start":{"line":706,"column":10},"end":{"line":707,"column":80}},"254":{"start":{"line":709,"column":10},"end":{"line":709,"column":59}},"255":{"start":{"line":710,"column":10},"end":{"line":710,"column":76}},"256":{"start":{"line":712,"column":10},"end":{"line":712,"column":58}},"257":{"start":{"line":714,"column":10},"end":{"line":714,"column":28}},"258":{"start":{"line":717,"column":8},"end":{"line":717,"column":105}},"259":{"start":{"line":720,"column":6},"end":{"line":735,"column":9}},"260":{"start":{"line":721,"column":8},"end":{"line":723,"column":23}},"261":{"start":{"line":725,"column":8},"end":{"line":727,"column":9}},"262":{"start":{"line":726,"column":10},"end":{"line":726,"column":33}},"263":{"start":{"line":729,"column":8},"end":{"line":729,"column":52}},"264":{"start":{"line":730,"column":8},"end":{"line":730,"column":56}},"265":{"start":{"line":732,"column":8},"end":{"line":734,"column":13}},"266":{"start":{"line":737,"column":6},"end":{"line":737,"column":41}},"267":{"start":{"line":741,"column":2},"end":{"line":753,"column":4}},"268":{"start":{"line":742,"column":4},"end":{"line":742,"column":28}},"269":{"start":{"line":744,"column":4},"end":{"line":744,"column":77}},"270":{"start":{"line":746,"column":4},"end":{"line":746,"column":19}},"271":{"start":{"line":747,"column":4},"end":{"line":747,"column":85}},"272":{"start":{"line":748,"column":4},"end":{"line":748,"column":160}},"273":{"start":{"line":748,"column":93},"end":{"line":748,"column":156}},"274":{"start":{"line":750,"column":4},"end":{"line":752,"column":17}},"275":{"start":{"line":755,"column":2},"end":{"line":755,"column":14}},"276":{"start":{"line":758,"column":0},"end":{"line":786,"column":2}},"277":{"start":{"line":759,"column":2},"end":{"line":759,"column":25}},"278":{"start":{"line":761,"column":2},"end":{"line":783,"column":4}},"279":{"start":{"line":762,"column":4},"end":{"line":762,"column":24}},"280":{"start":{"line":763,"column":4},"end":{"line":763,"column":28}},"281":{"start":{"line":764,"column":4},"end":{"line":764,"column":26}},"282":{"start":{"line":766,"column":4},"end":{"line":770,"column":5}},"283":{"start":{"line":767,"column":6},"end":{"line":769,"column":8}},"284":{"start":{"line":772,"column":4},"end":{"line":777,"column":5}},"285":{"start":{"line":773,"column":6},"end":{"line":773,"column":42}},"286":{"start":{"line":774,"column":6},"end":{"line":776,"column":7}},"287":{"start":{"line":775,"column":8},"end":{"line":775,"column":79}},"288":{"start":{"line":780,"column":4},"end":{"line":782,"column":7}},"289":{"start":{"line":781,"column":6},"end":{"line":781,"column":127}},"290":{"start":{"line":785,"column":2},"end":{"line":785,"column":14}},"291":{"start":{"line":788,"column":0},"end":{"line":788,"column":31}},"292":{"start":{"line":789,"column":0},"end":{"line":789,"column":45}},"293":{"start":{"line":790,"column":0},"end":{"line":790,"column":39}}},"branchMap":{"1":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":25}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":35}},{"start":{"line":46,"column":39},"end":{"line":46,"column":63}},{"start":{"line":46,"column":67},"end":{"line":46,"column":91}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"6":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":14}},{"start":{"line":69,"column":18},"end":{"line":69,"column":40}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"9":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":62}},{"start":{"line":92,"column":66},"end":{"line":92,"column":87}}]},"10":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":37}},{"start":{"line":92,"column":41},"end":{"line":92,"column":62}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"12":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"13":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":22},"end":{"line":107,"column":51}},{"start":{"line":107,"column":55},"end":{"line":107,"column":89}}]},"14":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"15":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":22},"end":{"line":114,"column":45}},{"start":{"line":114,"column":49},"end":{"line":120,"column":5}}]},"16":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"17":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":20},"end":{"line":125,"column":47}},{"start":{"line":125,"column":51},"end":{"line":125,"column":83}}]},"18":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"19":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":20},"end":{"line":132,"column":41}},{"start":{"line":132,"column":45},"end":{"line":143,"column":5}}]},"20":{"line":135,"type":"cond-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":38}},{"start":{"line":137,"column":12},"end":{"line":137,"column":45}}]},"21":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"22":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"23":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"24":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"25":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"26":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"27":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"28":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"29":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"30":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"31":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":100},"end":{"line":195,"column":128}},{"start":{"line":195,"column":131},"end":{"line":195,"column":149}}]},"32":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"33":{"line":303,"type":"cond-expr","locations":[{"start":{"line":303,"column":64},"end":{"line":303,"column":89}},{"start":{"line":303,"column":92},"end":{"line":303,"column":94}}]},"34":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"35":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":37}},{"start":{"line":320,"column":41},"end":{"line":320,"column":74}}]},"36":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"37":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":10},"end":{"line":321,"column":43}},{"start":{"line":321,"column":47},"end":{"line":321,"column":78}}]},"38":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":23},"end":{"line":335,"column":38}},{"start":{"line":335,"column":42},"end":{"line":335,"column":73}}]},"39":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":23},"end":{"line":338,"column":38}},{"start":{"line":338,"column":42},"end":{"line":338,"column":73}}]},"40":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"41":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":9},"end":{"line":344,"column":9}},{"start":{"line":344,"column":9},"end":{"line":344,"column":9}}]},"42":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":2},"end":{"line":349,"column":2}},{"start":{"line":349,"column":2},"end":{"line":349,"column":2}}]},"43":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"44":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"45":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":31},"end":{"line":367,"column":52}},{"start":{"line":367,"column":56},"end":{"line":367,"column":114}}]},"46":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":31},"end":{"line":368,"column":52}},{"start":{"line":368,"column":56},"end":{"line":368,"column":114}}]},"47":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"48":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"49":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":31},"end":{"line":378,"column":87}},{"start":{"line":378,"column":91},"end":{"line":378,"column":112}}]},"50":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":31},"end":{"line":379,"column":87}},{"start":{"line":379,"column":91},"end":{"line":379,"column":112}}]},"51":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"52":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"53":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":25},"end":{"line":388,"column":80}},{"start":{"line":388,"column":84},"end":{"line":388,"column":99}}]},"54":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":32},"end":{"line":389,"column":85}},{"start":{"line":389,"column":89},"end":{"line":389,"column":102}}]},"55":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"56":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":6},"end":{"line":391,"column":17}},{"start":{"line":391,"column":21},"end":{"line":391,"column":56}}]},"57":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":41},"end":{"line":392,"column":101}},{"start":{"line":392,"column":105},"end":{"line":392,"column":125}}]},"58":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":2},"end":{"line":419,"column":2}},{"start":{"line":419,"column":2},"end":{"line":419,"column":2}}]},"59":{"line":419,"type":"binary-expr","locations":[{"start":{"line":419,"column":6},"end":{"line":419,"column":17}},{"start":{"line":419,"column":21},"end":{"line":419,"column":48}}]},"60":{"line":436,"type":"binary-expr","locations":[{"start":{"line":436,"column":12},"end":{"line":436,"column":36}},{"start":{"line":436,"column":40},"end":{"line":436,"column":42}}]},"61":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":2},"end":{"line":443,"column":2}},{"start":{"line":443,"column":2},"end":{"line":443,"column":2}}]},"62":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":2},"end":{"line":454,"column":2}},{"start":{"line":454,"column":2},"end":{"line":454,"column":2}}]},"63":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"64":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":4},"end":{"line":463,"column":4}},{"start":{"line":463,"column":4},"end":{"line":463,"column":4}}]},"65":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":8},"end":{"line":463,"column":23}},{"start":{"line":463,"column":27},"end":{"line":463,"column":48}}]},"66":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":22},"end":{"line":469,"column":37}},{"start":{"line":469,"column":41},"end":{"line":469,"column":43}}]},"67":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":2}},{"start":{"line":479,"column":2},"end":{"line":479,"column":2}}]},"68":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":4},"end":{"line":480,"column":4}},{"start":{"line":480,"column":4},"end":{"line":480,"column":4}}]},"69":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":487,"column":2}},{"start":{"line":487,"column":2},"end":{"line":487,"column":2}}]},"70":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":4},"end":{"line":521,"column":4}},{"start":{"line":521,"column":4},"end":{"line":521,"column":4}}]},"71":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":6}},{"start":{"line":532,"column":6},"end":{"line":532,"column":6}}]},"72":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":14},"end":{"line":560,"column":21}},{"start":{"line":560,"column":25},"end":{"line":560,"column":27}}]},"73":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":4},"end":{"line":568,"column":4}},{"start":{"line":568,"column":4},"end":{"line":568,"column":4}}]},"74":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":8},"end":{"line":600,"column":8}},{"start":{"line":600,"column":8},"end":{"line":600,"column":8}}]},"75":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":10},"end":{"line":605,"column":10}},{"start":{"line":605,"column":10},"end":{"line":605,"column":10}}]},"76":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":10},"end":{"line":615,"column":10}},{"start":{"line":615,"column":10},"end":{"line":615,"column":10}}]},"77":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":6},"end":{"line":623,"column":6}},{"start":{"line":623,"column":6},"end":{"line":623,"column":6}}]},"78":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":6},"end":{"line":635,"column":6}},{"start":{"line":635,"column":6},"end":{"line":635,"column":6}}]},"79":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":4},"end":{"line":658,"column":4}},{"start":{"line":658,"column":4},"end":{"line":658,"column":4}}]},"80":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":27},"end":{"line":660,"column":56}},{"start":{"line":660,"column":60},"end":{"line":660,"column":62}}]},"81":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":8},"end":{"line":690,"column":8}},{"start":{"line":690,"column":8},"end":{"line":690,"column":8}}]},"82":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":10},"end":{"line":696,"column":10}},{"start":{"line":696,"column":10},"end":{"line":696,"column":10}}]},"83":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":6},"end":{"line":704,"column":6}},{"start":{"line":704,"column":6},"end":{"line":704,"column":6}}]},"84":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":8},"end":{"line":725,"column":8}},{"start":{"line":725,"column":8},"end":{"line":725,"column":8}}]},"85":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":14},"end":{"line":742,"column":21}},{"start":{"line":742,"column":25},"end":{"line":742,"column":27}}]},"86":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":14},"end":{"line":763,"column":21}},{"start":{"line":763,"column":25},"end":{"line":763,"column":27}}]},"87":{"line":764,"type":"binary-expr","locations":[{"start":{"line":764,"column":13},"end":{"line":764,"column":19}},{"start":{"line":764,"column":23},"end":{"line":764,"column":25}}]},"88":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"89":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":4},"end":{"line":772,"column":4}},{"start":{"line":772,"column":4},"end":{"line":772,"column":4}}]},"90":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":6},"end":{"line":774,"column":6}},{"start":{"line":774,"column":6},"end":{"line":774,"column":6}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , Helpers = require('./helpers')","  , _ = require('lodash')","  , Association = require('./base')","  , BelongsTo = require('./belongs-to')","  , HasMany = require('./has-many')","  , HasOne = require('./has-one')","  , CounterCache = require('../plugins/counter-cache')","  , util = require('util');","","/**"," * Many-to-many association with a join table."," *"," * When the join table has additional attributes, these can be passed in the options object:"," *"," * ```js"," * UserProject = sequelize.define('user_project', {"," *   role: Sequelize.STRING"," * });"," * User.belongsToMany(Project, { through: UserProject });"," * Project.belongsToMany(User, { through: UserProject });"," * // through is required!"," *"," * user.addProject(project, { role: 'manager', transaction: t });"," * ```"," *"," * All methods allow you to pass either a persisted instance, its primary key, or a mixture:"," *"," * ```js"," * Project.create({ id: 11 }).then(function (project) {"," *   user.addProjects([project, 12]);"," * });"," * ```"," *"," * In the API reference below, replace `Assocation(s)` with the actual name of your association, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`."," *"," * @mixin BelongsToMany"," */","var BelongsToMany = function(source, target, options) {","  Association.call(this);","","  options = options || {};","","  if (options.through === undefined || options.through === true || options.through === null) {","    throw new Error('belongsToMany must be given a through option, either a string or a model');","  }","","  if (!options.through.model) {","    options.through = {","      model: options.through","    };","  }","","  this.associationType = 'BelongsToMany';","  this.source = source;","  this.target = target;","  this.targetAssociation = null;","  this.options = options;","  this.sequelize = source.modelManager.sequelize;","  this.through = _.assign({}, options.through);","  this.scope = options.scope;","  this.isMultiAssociation = true;","  this.isSelfAssociation = this.source === this.target;","  this.doubleLinked = false;","  this.as = this.options.as;","","  if (!this.as && this.isSelfAssociation) {","    throw new Error('\\'as\\' must be defined for many-to-many self-associations');","  }","","  if (this.as) {","    this.isAliased = true;","","    if (Utils._.isPlainObject(this.as)) {","      this.options.name = this.as;","      this.as = this.as.plural;","    } else {","      this.options.name = {","        plural: this.as,","        singular: Utils.singularize(this.as)","      };","    }","  } else {","    this.as = this.target.options.name.plural;","    this.options.name = this.target.options.name;","  }","","  this.combinedTableName = Utils.combineTableNames(","    this.source.tableName,","    this.isSelfAssociation ? (this.as || this.target.tableName) : this.target.tableName","  );","","  /*","   * If self association, this is the target association - Unless we find a pairing association","   */","  if (this.isSelfAssociation) {","    this.targetAssociation = this;","  }","","  /*","   * Default/generated foreign/other keys","   */","  if (_.isObject(this.options.foreignKey)) {","    this.foreignKeyAttribute = this.options.foreignKey;","    this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;","  } else {","    if (!this.options.foreignKey) {","      this.foreignKeyDefault = true;","    }","","    this.foreignKeyAttribute = {};","    this.foreignKey = this.options.foreignKey || Utils.camelizeIf(","      [","        Utils.underscoredIf(this.source.options.name.singular, this.source.options.underscored),","        this.source.primaryKeyAttribute","      ].join('_'),","      !this.source.options.underscored","    );","  }","","  if (_.isObject(this.options.otherKey)) {","    this.otherKeyAttribute = this.options.otherKey;","    this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;","  } else {","    if (!this.options.otherKey) {","      this.otherKeyDefault = true;","    }","","    this.otherKeyAttribute = {};","    this.otherKey = this.options.otherKey || Utils.camelizeIf(","      [","        Utils.underscoredIf(","          this.isSelfAssociation ?","            Utils.singularize(this.as) :","            this.target.options.name.singular,","          this.target.options.underscored","        ),","        this.target.primaryKeyAttribute","      ].join('_'),","      !this.target.options.underscored","    );","  }","","  /*","   * Find paired association (if exists)","   */","  _.each(this.target.associations, function(association) {","    if (association.associationType !== 'BelongsToMany') return;","    if (association.target !== this.source) return;","","    if (this.options.through.model === association.options.through.model) {","      this.paired = association;","      association.paired = this;","    }","  }.bind(this));","","  if (typeof this.through.model === 'string') {","    if (!this.sequelize.isDefined(this.through.model)) {","      this.through.model = this.sequelize.define(this.through.model, {}, _.extend(this.options, {","        tableName: this.through.model,","        indexes: [], //we don't want indexes here (as referenced in #2416)","        paranoid: false,  // A paranoid join table does not make sense","        validate: {} // Don't propagate model-level validations","      }));","    } else {","      this.through.model = this.sequelize.model(this.through.model);","    }","  }","","  this.options = _.assign(this.options, _.pick(this.through.model.options, [","    'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'","  ]));","","  if (this.paired) {","    if (this.otherKeyDefault) {","      this.otherKey = this.paired.foreignKey;","    }","    if (this.paired.otherKeyDefault) {","      // If paired otherKey was inferred we should make sure to clean it up before adding a new one that matches the foreignKey","      if (this.paired.otherKey !== this.foreignKey) {","        delete this.through.model.rawAttributes[this.paired.otherKey];","      }","      this.paired.otherKey = this.foreignKey;","      this.paired.foreignIdentifier = this.foreignKey;","      delete this.paired.foreignIdentifierField;","    }","  }","","  if (this.through) {","    this.throughModel = this.through.model;","  }","","  this.options.tableName = this.combinedName = (this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model);","","  this.associationAccessor = this.as;","","  // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it","  var plural = Utils.uppercaseFirst(this.options.name.plural)","    , singular = Utils.uppercaseFirst(this.options.name.singular);","","  this.accessors = {","    /**","     * Get everything currently associated with this, using an optional where clause.","     *","     * @param {Object} [options]","     * @param {Object} [options.where] An optional where clause to limit the associated models","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false","     * @param {String} [options.schema] Apply a schema on the related model","     * @return {Promise<Array<Instance>>}","     * @method getAssociations","     */","    get: 'get' + plural,","    /**","     * Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.","     *","     * @param {Array<Instance|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.","     * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`. Can also hold additional attributes for the join table","     * @param {Object} [options.validate] Run validation for the join model","     * @return {Promise}","     * @method setAssociations","     */","    set: 'set' + plural,","    /**","     * Associate several persisted instances with this.","     *","     * @param {Array<Instance|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this.","     * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`. Can also hold additional attributes for the join table.","     * @param {Object} [options.validate] Run validation for the join model.","     * @return {Promise}","     * @method addAssociations","     */","    addMultiple: 'add' + plural,","    /**","     * Associate a persisted instance with this.","     *","     * @param {Instance|String|Number} [newAssociation] A persisted instance or primary key of instance to associate with this.","     * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`. Can also hold additional attributes for the join table.","     * @param {Object} [options.validate] Run validation for the join model.","     * @return {Promise}","     * @method addAssociation","     */","    add: 'add' + singular,","     /**","     * Create a new instance of the associated model and associate it with this.","     *","     * @param {Object} [values]","     * @param {Object} [options] Options passed to create and add. Can also hold additional attributes for the join table","     * @return {Promise}","     * @method createAssociation","     */","    create: 'create' + singular,","    /**","     * Un-associate the instance.","     *","     * @param {Instance|String|Number} [oldAssociated] Can be an Instance or its primary key","     * @param {Object} [options] Options passed to `through.destroy`","     * @return {Promise}","     * @method removeAssociation","     */","    remove: 'remove' + singular,","    /**","     * Un-associate several instances.","     *","     * @param {Array<Instance|String|Number>} [oldAssociated] Can be an array of instances or their primary keys","     * @param {Object} [options] Options passed to `through.destroy`","     * @return {Promise}","     * @method removeAssociations","     */","    removeMultiple: 'remove' + plural,","    /**","     * Check if an instance is associated with this.","     *","     * @param {Instance|String|Number} [instance] Can be an Instance or its primary key","     * @param {Object} [options] Options passed to getAssociations","     * @return {Promise}","     * @method hasAssociation","     */","    hasSingle: 'has' + singular,","    /**","     * Check if all instances are associated with this.","     *","     * @param {Array<Instance|String|Number>} [instances] Can be an array of instances or their primary keys","     * @param {Object} [options] Options passed to getAssociations","     * @return {Promise}","     * @method hasAssociations","     */","    hasAll: 'has' + plural,","    /**","     * Count everything currently associated with this, using an optional where clause.","     *","     * @param {Object} [options]","     * @param {Object} [options.where] An optional where clause to limit the associated models","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false","     * @return {Promise<Int>}","     * @method countAssociations","     */","    count: 'count' + plural","  };","","  if (this.options.counterCache) {","    new CounterCache(this, this.options.counterCache !== true ? this.options.counterCache : {});","  }","};","","util.inherits(BelongsToMany, Association);","","// the id is in the target table","// or in an extra table which connects two tables","BelongsToMany.prototype.injectAttributes = function() {","  var self = this;","","  this.identifier = this.foreignKey;","  this.foreignIdentifier = this.otherKey;","","  // remove any PKs previously defined by sequelize","  // but ignore any keys that are part of this association (#5865)","  _.each(this.through.model.rawAttributes, function(attribute, attributeName) {","    if (attribute.primaryKey === true && attribute._autoGenerated === true) {","      if (attributeName === self.foreignKey || attributeName === self.otherKey) {","        // this key is still needed as it's part of the association","        // so just set primaryKey to false","        attribute.primaryKey = false;","      }","      else {","        delete self.through.model.rawAttributes[attributeName];","      }","      self.primaryKeyDeleted = true;","    }","  });","","  var sourceKey = this.source.rawAttributes[this.source.primaryKeyAttribute]","    , sourceKeyType = sourceKey.type","    , sourceKeyField = sourceKey.field || this.source.primaryKeyAttribute","    , targetKey = this.target.rawAttributes[this.target.primaryKeyAttribute]","    , targetKeyType = targetKey.type","    , targetKeyField = targetKey.field || this.target.primaryKeyAttribute","    , sourceAttribute = _.defaults({}, this.foreignKeyAttribute, { type: sourceKeyType })","    , targetAttribute = _.defaults({}, this.otherKeyAttribute, { type: targetKeyType });","","  if (this.primaryKeyDeleted === true) {","    targetAttribute.primaryKey = sourceAttribute.primaryKey = true;","  } else if (this.through.unique !== false) {","    var uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');","    targetAttribute.unique = sourceAttribute.unique = uniqueKey;","  }","","  if (!this.through.model.rawAttributes[this.foreignKey]) {","    this.through.model.rawAttributes[this.foreignKey] = {","      _autoGenerated: true","    };","  }","","  if (!this.through.model.rawAttributes[this.otherKey]) {","    this.through.model.rawAttributes[this.otherKey] = {","      _autoGenerated: true","    };","  }","","  if (this.options.constraints !== false) {","    sourceAttribute.references = {","      model: this.source.getTableName(),","      key:   sourceKeyField","    };","    // For the source attribute the passed option is the priority","    sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;","    sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;","","    if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';","    if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';","","    targetAttribute.references = {","      model: this.target.getTableName(),","      key:   targetKeyField","    };","    // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)","    targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;","    targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;","","    if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';","    if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';","  }","","  this.through.model.rawAttributes[this.foreignKey] = _.extend(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);","  this.through.model.rawAttributes[this.otherKey] = _.extend(this.through.model.rawAttributes[this.otherKey], targetAttribute);","","  this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;","  this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;","","  if (this.paired && !this.paired.foreignIdentifierField) {","    this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;","  }","","  this.through.model.refreshAttributes();","","  this.toSource = new BelongsTo(this.through.model, this.source, {","    foreignKey: this.foreignKey","  });","  this.manyFromSource = new HasMany(this.source, this.through.model, {","    foreignKey: this.foreignKey","  });","  this.oneFromSource = new HasOne(this.source, this.through.model, {","    foreignKey: this.foreignKey,","    as: this.through.model.name","  });","","  this.toTarget = new BelongsTo(this.through.model, this.target, {","    foreignKey: this.otherKey","  });","  this.manyFromTarget = new HasMany(this.target, this.through.model, {","    foreignKey: this.otherKey","  });","  this.oneFromTarget = new HasOne(this.target, this.through.model, {","    foreignKey: this.otherKey,","    as: this.through.model.name","  });","","  if (this.paired && this.paired.otherKeyDefault) {","    this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {","      foreignKey: this.paired.otherKey","    });","","    this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {","      foreignKey: this.paired.otherKey,","      as: this.paired.through.model.name","    });","  }","","  Helpers.checkNamingCollision(this);","","  return this;","};","","BelongsToMany.prototype.get = function(instance, options) {","  options = Utils.cloneDeep(options) || {};","","  var association = this","    , through = association.through","    , scopeWhere","    , throughWhere;","","  if (association.scope) {","    scopeWhere = _.clone(association.scope);","  }","","  options.where = {","    $and: [","      scopeWhere,","      options.where","    ]","  };","","  if (Object(through.model) === through.model) {","    throughWhere = {};","    throughWhere[association.foreignKey] = instance.get(association.source.primaryKeyAttribute);","","    if (through.scope) {","      _.assign(throughWhere, through.scope);","    }","","    //If a user pass a where on the options through options, make an \"and\" with the current throughWhere","    if (options.through && options.through.where) {","      throughWhere = {","        $and: [throughWhere, options.through.where]","      };","    }","","    options.include = options.include || [];","    options.include.push({","      association: association.oneFromTarget,","      attributes: options.joinTableAttributes,","      required: true,","      where: throughWhere","    });","  }","","  var model = association.target;","  if (options.hasOwnProperty('scope')) {","    if (!options.scope) {","      model = model.unscoped();","    } else {","      model = model.scope(options.scope);","    }","  }","","  if (options.hasOwnProperty('schema')) {","    model = model.schema(options.schema, options.schemaDelimiter);","  }","","  return model.findAll(options);","};","","BelongsToMany.prototype.injectGetter = function(obj) {","  var association = this;","","  obj[this.accessors.get] = function(options) {","    return association.get(this, options);","  };","","  obj[this.accessors.count] = function(options) {","    var model = association.target","      , sequelize = model.sequelize;","","    options = Utils.cloneDeep(options);","    options.attributes = [","      [sequelize.fn('COUNT', sequelize.col([association.target.name, model.primaryKeyAttribute].join('.'))), 'count']","    ];","    options.joinTableAttributes = [];","    options.raw = true;","    options.plain = true;","","    return obj[association.accessors.get].call(this, options).then(function (result) {","      return parseInt(result.count, 10);","    });","  };","","  obj[this.accessors.hasSingle] = obj[this.accessors.hasAll] = function(instances, options) {","    var where = {};","","    if (!Array.isArray(instances)) {","      instances = [instances];","    }","","    options = _.assign({","      raw: true","    }, options, {","      scope: false","    });","","    where.$or = instances.map(function (instance) {","      if (instance instanceof association.target.Instance) {","        return instance.where();","      } else {","        var $where = {};","        $where[association.target.primaryKeyAttribute] = instance;","        return $where;","      }","    });","","    options.where = {","      $and: [","        where,","        options.where","      ]","    };","","    return this[association.accessors.get](options).then(function(associatedObjects) {","      return associatedObjects.length === instances.length;","    });","  };","","  return this;","};","","BelongsToMany.prototype.injectSetter = function(obj) {","  var association = this;","","  obj[this.accessors.set] = function(newAssociatedObjects, options) {","    options = options || {};","    var instance = this","      , sourceKey = association.source.primaryKeyAttribute","      , targetKey = association.target.primaryKeyAttribute","      , identifier = association.identifier","      , foreignIdentifier = association.foreignIdentifier","      , where = {};","","    if (newAssociatedObjects === null) {","      newAssociatedObjects = [];","    } else {","      newAssociatedObjects = association.toInstanceArray(newAssociatedObjects);","    }","","    where[identifier] = this.get(sourceKey);","    _.assign(where, association.through.scope);","    ","    return association.through.model.findAll(_.defaults({","      where: where,","      raw: true,","    }, options)).then(function (currentRows) {","      var obsoleteAssociations = []","        , defaultAttributes = options","        , promises = []","        , unassociatedObjects;","","      // Don't try to insert the transaction as an attribute in the through table","      defaultAttributes = _.omit(defaultAttributes, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging']);","","      unassociatedObjects = newAssociatedObjects.filter(function(obj) {","        return !_.find(currentRows, function(currentRow) {","          return currentRow[foreignIdentifier] === obj.get(targetKey);","        });","      });","","      currentRows.forEach(function(currentRow) {","        var newObj = _.find(newAssociatedObjects, function(obj) {","          return currentRow[foreignIdentifier] === obj.get(targetKey);","        });","","        if (!newObj) {","          obsoleteAssociations.push(currentRow);","        } else {","          var throughAttributes = newObj[association.through.model.name];","          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)","          if (throughAttributes instanceof association.through.model.Instance) {","            throughAttributes = {};","          }","","          var where = {}","            , attributes = _.defaults({}, throughAttributes, defaultAttributes);","","          where[identifier] = instance.get(sourceKey);","          where[foreignIdentifier] = newObj.get(targetKey);","","          if (Object.keys(attributes).length) {","            promises.push(association.through.model.update(attributes, _.extend(options, {","              where: where","            })));","          }","        }","      });","","      if (obsoleteAssociations.length > 0) {","        var where = {};","        where[identifier] = instance.get(sourceKey);","        where[foreignIdentifier] = obsoleteAssociations.map(function(obsoleteAssociation) {","          return obsoleteAssociation[foreignIdentifier];","        });","","        promises.push(association.through.model.destroy(_.defaults({","          where: where","        }, options)));","      }","","      if (unassociatedObjects.length > 0) {","        var bulk = unassociatedObjects.map(function(unassociatedObject) {","          var attributes = {};","","          attributes[identifier] = instance.get(sourceKey);","          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);","","          attributes = _.defaults(attributes, unassociatedObject[association.through.model.name], defaultAttributes);","","          _.assign(attributes, association.through.scope);","","          return attributes;","        }.bind(this));","","        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));","      }","","      return Utils.Promise.all(promises);","    });","  };","","  obj[this.accessors.addMultiple] = obj[this.accessors.add] = function(newInstances, additionalAttributes) {","    // If newInstances is null or undefined, no-op","    if (!newInstances) return Utils.Promise.resolve();","","    additionalAttributes = _.clone(additionalAttributes) || {};","","    var instance = this","      , defaultAttributes = _.omit(additionalAttributes, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging'])","      , sourceKey = association.source.primaryKeyAttribute","      , targetKey = association.target.primaryKeyAttribute","      , identifier = association.identifier","      , foreignIdentifier = association.foreignIdentifier","      , options = additionalAttributes;","","    newInstances = association.toInstanceArray(newInstances);","","    var where = {};","    where[identifier] = instance.get(sourceKey);","    where[foreignIdentifier] = newInstances.map(function (newInstance) { return newInstance.get(targetKey); });","","    _.assign(where, association.through.scope);","","    return association.through.model.findAll(_.defaults({","      where: where,","      raw: true,","    }, options)).then(function (currentRows) {","      var promises = [];","","      var unassociatedObjects = [], changedAssociations = [];","      newInstances.forEach(function(obj) {","        var existingAssociation = _.find(currentRows, function(current) {","          return current[foreignIdentifier] === obj.get(targetKey);","        });","","        if (!existingAssociation) {","          unassociatedObjects.push(obj);","        } else {","          var throughAttributes = obj[association.through.model.name]","            , attributes = _.defaults({}, throughAttributes, defaultAttributes);","","          if (_.some(Object.keys(attributes), function (attribute) {","            return attributes[attribute] !== existingAssociation[attribute];","          })) {","            changedAssociations.push(obj);","          }","        }","      });","","      if (unassociatedObjects.length > 0) {","        var bulk = unassociatedObjects.map(function(unassociatedObject) {","          var throughAttributes = unassociatedObject[association.through.model.name]","            , attributes = _.defaults({}, throughAttributes, defaultAttributes);","","          attributes[identifier] = instance.get(sourceKey);","          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);","","          _.assign(attributes, association.through.scope);","","          return attributes;","        }.bind(this));","","        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));","      }","","      changedAssociations.forEach(function(assoc) {","        var throughAttributes = assoc[association.through.model.name]","          , attributes = _.defaults({}, throughAttributes, defaultAttributes)","          , where = {};","        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)","        if (throughAttributes instanceof association.through.model.Instance) {","          throughAttributes = {};","        }","","        where[identifier] = instance.get(sourceKey);","        where[foreignIdentifier] = assoc.get(targetKey);","","        promises.push(association.through.model.update(attributes, _.extend(options, {","          where: where","        })));","      });","","      return Utils.Promise.all(promises);","    });","  };","","  obj[this.accessors.removeMultiple] = obj[this.accessors.remove] = function(oldAssociatedObjects, options) {","    options = options || {};","","    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);","","    var where = {};","    where[association.identifier] = this.get(association.source.primaryKeyAttribute);","    where[association.foreignIdentifier] = oldAssociatedObjects.map(function (newInstance) { return newInstance.get(association.target.primaryKeyAttribute); });","","    return association.through.model.destroy(_.defaults({","      where: where","    }, options));","  };","","  return this;","};","","BelongsToMany.prototype.injectCreator = function(obj) {","  var association = this;","","  obj[this.accessors.create] = function(values, options) {","    var instance = this;","    options = options || {};","    values = values || {};","","    if (Array.isArray(options)) {","      options = {","        fields: options","      };","    }","","    if (association.scope) {","      _.assign(values, association.scope);","      if (options.fields) {","        options.fields = options.fields.concat(Object.keys(association.scope));","      }","    }","","    // Create the related model instance","    return association.target.create(values, options).then(function(newAssociatedObject) {","      return instance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields'])).return(newAssociatedObject);","    });","  };","","  return this;","};","","module.exports = BelongsToMany;","module.exports.BelongsToMany = BelongsToMany;","module.exports.default = BelongsToMany;",""],"l":{"3":1,"41":1,"42":0,"44":0,"46":0,"47":0,"50":0,"51":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"73":0,"74":0,"76":0,"77":0,"78":0,"80":0,"86":0,"87":0,"90":0,"98":0,"99":0,"105":0,"106":0,"107":0,"109":0,"110":0,"113":0,"114":0,"123":0,"124":0,"125":0,"127":0,"128":0,"131":0,"132":0,"149":0,"150":0,"151":0,"153":0,"154":0,"155":0,"159":0,"160":0,"161":0,"168":0,"172":0,"176":0,"177":0,"178":0,"180":0,"182":0,"183":0,"185":0,"186":0,"187":0,"191":0,"192":0,"195":0,"197":0,"200":0,"203":0,"302":0,"303":0,"307":1,"311":1,"312":0,"314":0,"315":0,"319":0,"320":0,"321":0,"324":0,"327":0,"329":0,"333":0,"342":0,"343":0,"344":0,"345":0,"346":0,"349":0,"350":0,"355":0,"356":0,"361":0,"362":0,"367":0,"368":0,"370":0,"371":0,"373":0,"378":0,"379":0,"381":0,"382":0,"385":0,"386":0,"388":0,"389":0,"391":0,"392":0,"395":0,"397":0,"400":0,"403":0,"408":0,"411":0,"414":0,"419":0,"420":0,"424":0,"430":0,"432":0,"435":1,"436":0,"438":0,"443":0,"444":0,"447":0,"454":0,"455":0,"456":0,"458":0,"459":0,"463":0,"464":0,"469":0,"470":0,"478":0,"479":0,"480":0,"481":0,"483":0,"487":0,"488":0,"491":0,"494":1,"495":0,"497":0,"498":0,"501":0,"502":0,"505":0,"506":0,"509":0,"510":0,"511":0,"513":0,"514":0,"518":0,"519":0,"521":0,"522":0,"525":0,"531":0,"532":0,"533":0,"535":0,"536":0,"537":0,"541":0,"548":0,"549":0,"553":0,"556":1,"557":0,"559":0,"560":0,"561":0,"568":0,"569":0,"571":0,"574":0,"575":0,"577":0,"581":0,"587":0,"589":0,"590":0,"591":0,"595":0,"596":0,"597":0,"600":0,"601":0,"603":0,"605":0,"606":0,"609":0,"612":0,"613":0,"615":0,"616":0,"623":0,"624":0,"625":0,"626":0,"627":0,"630":0,"635":0,"636":0,"637":0,"639":0,"640":0,"642":0,"644":0,"646":0,"649":0,"652":0,"656":0,"658":0,"660":0,"662":0,"670":0,"672":0,"673":0,"674":0,"676":0,"678":0,"682":0,"684":0,"685":0,"686":0,"687":0,"690":0,"691":0,"693":0,"696":0,"697":0,"699":0,"704":0,"705":0,"706":0,"709":0,"710":0,"712":0,"714":0,"717":0,"720":0,"721":0,"725":0,"726":0,"729":0,"730":0,"732":0,"737":0,"741":0,"742":0,"744":0,"746":0,"747":0,"748":0,"750":0,"755":0,"758":1,"759":0,"761":0,"762":0,"763":0,"764":0,"766":0,"767":0,"772":0,"773":0,"774":0,"775":0,"780":0,"781":0,"785":0,"788":1,"789":1,"790":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/has-many.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/has-many.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":1,"206":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":48}}},"2":{"name":"(anonymous_2)","line":215,"loc":{"start":{"line":215,"column":37},"end":{"line":215,"column":48}}},"3":{"name":"(anonymous_3)","line":242,"loc":{"start":{"line":242,"column":26},"end":{"line":242,"column":40}}},"4":{"name":"(anonymous_4)","line":245,"loc":{"start":{"line":245,"column":28},"end":{"line":245,"column":46}}},"5":{"name":"(anonymous_5)","line":250,"loc":{"start":{"line":250,"column":32},"end":{"line":250,"column":50}}},"6":{"name":"(anonymous_6)","line":255,"loc":{"start":{"line":255,"column":63},"end":{"line":255,"column":92}}},"7":{"name":"(anonymous_7)","line":259,"loc":{"start":{"line":259,"column":28},"end":{"line":259,"column":57}}},"8":{"name":"(anonymous_8)","line":263,"loc":{"start":{"line":263,"column":62},"end":{"line":263,"column":91}}},"9":{"name":"(anonymous_9)","line":267,"loc":{"start":{"line":267,"column":68},"end":{"line":267,"column":97}}},"10":{"name":"(anonymous_10)","line":271,"loc":{"start":{"line":271,"column":31},"end":{"line":271,"column":57}}},"11":{"name":"(anonymous_11)","line":276,"loc":{"start":{"line":276,"column":24},"end":{"line":276,"column":53}}},"12":{"name":"(anonymous_12)","line":295,"loc":{"start":{"line":295,"column":27},"end":{"line":295,"column":47}}},"13":{"name":"(anonymous_13)","line":335,"loc":{"start":{"line":335,"column":37},"end":{"line":335,"column":56}}},"14":{"name":"(anonymous_14)","line":339,"loc":{"start":{"line":339,"column":22},"end":{"line":339,"column":42}}},"15":{"name":"(anonymous_15)","line":343,"loc":{"start":{"line":343,"column":20},"end":{"line":343,"column":40}}},"16":{"name":"(anonymous_16)","line":351,"loc":{"start":{"line":351,"column":26},"end":{"line":351,"column":54}}},"17":{"name":"(anonymous_17)","line":363,"loc":{"start":{"line":363,"column":42},"end":{"line":363,"column":60}}},"18":{"name":"(anonymous_18)","line":368,"loc":{"start":{"line":368,"column":24},"end":{"line":368,"column":75}}},"19":{"name":"(anonymous_19)","line":381,"loc":{"start":{"line":381,"column":34},"end":{"line":381,"column":54}}},"20":{"name":"(anonymous_20)","line":401,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":37}}},"21":{"name":"(anonymous_21)","line":406,"loc":{"start":{"line":406,"column":24},"end":{"line":406,"column":75}}},"22":{"name":"(anonymous_22)","line":418,"loc":{"start":{"line":418,"column":20},"end":{"line":418,"column":46}}},"23":{"name":"(anonymous_23)","line":420,"loc":{"start":{"line":420,"column":54},"end":{"line":420,"column":68}}},"24":{"name":"(anonymous_24)","line":421,"loc":{"start":{"line":421,"column":42},"end":{"line":421,"column":56}}},"25":{"name":"(anonymous_25)","line":425,"loc":{"start":{"line":425,"column":53},"end":{"line":425,"column":67}}},"26":{"name":"(anonymous_26)","line":426,"loc":{"start":{"line":426,"column":42},"end":{"line":426,"column":56}}},"27":{"name":"(anonymous_27)","line":439,"loc":{"start":{"line":439,"column":85},"end":{"line":439,"column":112}}},"28":{"name":"(anonymous_28)","line":458,"loc":{"start":{"line":458,"column":84},"end":{"line":458,"column":113}}},"29":{"name":"(anonymous_29)","line":474,"loc":{"start":{"line":474,"column":24},"end":{"line":474,"column":75}}},"30":{"name":"(anonymous_30)","line":488,"loc":{"start":{"line":488,"column":70},"end":{"line":488,"column":100}}},"31":{"name":"(anonymous_31)","line":500,"loc":{"start":{"line":500,"column":27},"end":{"line":500,"column":78}}},"32":{"name":"(anonymous_32)","line":511,"loc":{"start":{"line":511,"column":70},"end":{"line":511,"column":96}}},"33":{"name":"(anonymous_33)","line":523,"loc":{"start":{"line":523,"column":27},"end":{"line":523,"column":69}}},"34":{"name":"(anonymous_34)","line":539,"loc":{"start":{"line":539,"column":43},"end":{"line":539,"column":64}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":209,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":35}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":32}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":49}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":29}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":55}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":28}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}},"16":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":98}},"18":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"20":{"start":{"line":45,"column":2},"end":{"line":60,"column":3}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":26}},"22":{"start":{"line":48,"column":4},"end":{"line":56,"column":5}},"23":{"start":{"line":49,"column":6},"end":{"line":49,"column":34}},"24":{"start":{"line":50,"column":6},"end":{"line":50,"column":31}},"25":{"start":{"line":52,"column":6},"end":{"line":55,"column":8}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":46}},"27":{"start":{"line":59,"column":4},"end":{"line":59,"column":49}},"28":{"start":{"line":65,"column":2},"end":{"line":70,"column":3}},"29":{"start":{"line":66,"column":4},"end":{"line":66,"column":55}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":90}},"31":{"start":{"line":68,"column":9},"end":{"line":70,"column":3}},"32":{"start":{"line":69,"column":4},"end":{"line":69,"column":46}},"33":{"start":{"line":72,"column":2},"end":{"line":80,"column":3}},"34":{"start":{"line":73,"column":4},"end":{"line":79,"column":6}},"35":{"start":{"line":82,"column":2},"end":{"line":85,"column":3}},"36":{"start":{"line":83,"column":4},"end":{"line":83,"column":95}},"37":{"start":{"line":84,"column":4},"end":{"line":84,"column":95}},"38":{"start":{"line":87,"column":2},"end":{"line":87,"column":77}},"39":{"start":{"line":88,"column":2},"end":{"line":92,"column":3}},"40":{"start":{"line":89,"column":4},"end":{"line":89,"column":92}},"41":{"start":{"line":91,"column":4},"end":{"line":91,"column":41}},"42":{"start":{"line":94,"column":2},"end":{"line":98,"column":3}},"43":{"start":{"line":95,"column":4},"end":{"line":95,"column":90}},"44":{"start":{"line":97,"column":4},"end":{"line":97,"column":62}},"45":{"start":{"line":99,"column":2},"end":{"line":99,"column":41}},"46":{"start":{"line":100,"column":2},"end":{"line":100,"column":37}},"47":{"start":{"line":103,"column":2},"end":{"line":104,"column":66}},"48":{"start":{"line":106,"column":2},"end":{"line":203,"column":4}},"49":{"start":{"line":205,"column":2},"end":{"line":208,"column":3}},"50":{"start":{"line":206,"column":4},"end":{"line":206,"column":96}},"51":{"start":{"line":207,"column":4},"end":{"line":207,"column":32}},"52":{"start":{"line":211,"column":0},"end":{"line":211,"column":36}},"53":{"start":{"line":215,"column":0},"end":{"line":240,"column":2}},"54":{"start":{"line":216,"column":2},"end":{"line":216,"column":25}},"55":{"start":{"line":217,"column":2},"end":{"line":217,"column":48}},"56":{"start":{"line":218,"column":2},"end":{"line":221,"column":5}},"57":{"start":{"line":223,"column":2},"end":{"line":227,"column":3}},"58":{"start":{"line":224,"column":4},"end":{"line":224,"column":94}},"59":{"start":{"line":225,"column":4},"end":{"line":225,"column":107}},"60":{"start":{"line":226,"column":4},"end":{"line":226,"column":73}},"61":{"start":{"line":228,"column":2},"end":{"line":228,"column":133}},"62":{"start":{"line":229,"column":2},"end":{"line":229,"column":64}},"63":{"start":{"line":231,"column":2},"end":{"line":231,"column":93}},"64":{"start":{"line":232,"column":2},"end":{"line":232,"column":93}},"65":{"start":{"line":234,"column":2},"end":{"line":234,"column":34}},"66":{"start":{"line":235,"column":2},"end":{"line":235,"column":34}},"67":{"start":{"line":237,"column":2},"end":{"line":237,"column":37}},"68":{"start":{"line":239,"column":2},"end":{"line":239,"column":14}},"69":{"start":{"line":242,"column":0},"end":{"line":274,"column":2}},"70":{"start":{"line":243,"column":2},"end":{"line":243,"column":25}},"71":{"start":{"line":245,"column":2},"end":{"line":247,"column":4}},"72":{"start":{"line":246,"column":4},"end":{"line":246,"column":42}},"73":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"74":{"start":{"line":250,"column":4},"end":{"line":252,"column":6}},"75":{"start":{"line":251,"column":6},"end":{"line":251,"column":46}},"76":{"start":{"line":255,"column":2},"end":{"line":257,"column":4}},"77":{"start":{"line":256,"column":4},"end":{"line":256,"column":53}},"78":{"start":{"line":259,"column":2},"end":{"line":261,"column":4}},"79":{"start":{"line":260,"column":4},"end":{"line":260,"column":53}},"80":{"start":{"line":263,"column":2},"end":{"line":265,"column":4}},"81":{"start":{"line":264,"column":4},"end":{"line":264,"column":53}},"82":{"start":{"line":267,"column":2},"end":{"line":269,"column":4}},"83":{"start":{"line":268,"column":4},"end":{"line":268,"column":56}},"84":{"start":{"line":271,"column":2},"end":{"line":273,"column":4}},"85":{"start":{"line":272,"column":4},"end":{"line":272,"column":53}},"86":{"start":{"line":276,"column":0},"end":{"line":349,"column":2}},"87":{"start":{"line":277,"column":2},"end":{"line":281,"column":13}},"88":{"start":{"line":283,"column":2},"end":{"line":286,"column":3}},"89":{"start":{"line":284,"column":4},"end":{"line":284,"column":25}},"90":{"start":{"line":285,"column":4},"end":{"line":285,"column":26}},"91":{"start":{"line":288,"column":2},"end":{"line":288,"column":43}},"92":{"start":{"line":290,"column":2},"end":{"line":292,"column":3}},"93":{"start":{"line":291,"column":4},"end":{"line":291,"column":39}},"94":{"start":{"line":294,"column":2},"end":{"line":315,"column":3}},"95":{"start":{"line":295,"column":4},"end":{"line":297,"column":7}},"96":{"start":{"line":296,"column":6},"end":{"line":296,"column":62}},"97":{"start":{"line":299,"column":4},"end":{"line":312,"column":5}},"98":{"start":{"line":300,"column":6},"end":{"line":304,"column":8}},"99":{"start":{"line":306,"column":6},"end":{"line":306,"column":27}},"100":{"start":{"line":308,"column":6},"end":{"line":310,"column":8}},"101":{"start":{"line":311,"column":6},"end":{"line":311,"column":34}},"102":{"start":{"line":314,"column":4},"end":{"line":314,"column":85}},"103":{"start":{"line":318,"column":2},"end":{"line":320,"column":24}},"104":{"start":{"line":322,"column":2},"end":{"line":328,"column":3}},"105":{"start":{"line":323,"column":4},"end":{"line":327,"column":5}},"106":{"start":{"line":324,"column":6},"end":{"line":324,"column":31}},"107":{"start":{"line":326,"column":6},"end":{"line":326,"column":41}},"108":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"109":{"start":{"line":331,"column":4},"end":{"line":331,"column":66}},"110":{"start":{"line":335,"column":2},"end":{"line":348,"column":5}},"111":{"start":{"line":336,"column":4},"end":{"line":336,"column":33}},"112":{"start":{"line":336,"column":18},"end":{"line":336,"column":33}},"113":{"start":{"line":338,"column":4},"end":{"line":338,"column":20}},"114":{"start":{"line":339,"column":4},"end":{"line":341,"column":7}},"115":{"start":{"line":340,"column":6},"end":{"line":340,"column":68}},"116":{"start":{"line":343,"column":4},"end":{"line":345,"column":7}},"117":{"start":{"line":344,"column":6},"end":{"line":344,"column":79}},"118":{"start":{"line":347,"column":4},"end":{"line":347,"column":18}},"119":{"start":{"line":351,"column":0},"end":{"line":366,"column":2}},"120":{"start":{"line":352,"column":2},"end":{"line":354,"column":34}},"121":{"start":{"line":356,"column":2},"end":{"line":356,"column":37}},"122":{"start":{"line":357,"column":2},"end":{"line":359,"column":4}},"123":{"start":{"line":360,"column":2},"end":{"line":360,"column":21}},"124":{"start":{"line":361,"column":2},"end":{"line":361,"column":23}},"125":{"start":{"line":363,"column":2},"end":{"line":365,"column":5}},"126":{"start":{"line":364,"column":4},"end":{"line":364,"column":38}},"127":{"start":{"line":368,"column":0},"end":{"line":404,"column":2}},"128":{"start":{"line":369,"column":2},"end":{"line":370,"column":17}},"129":{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},"130":{"start":{"line":373,"column":4},"end":{"line":373,"column":40}},"131":{"start":{"line":376,"column":2},"end":{"line":379,"column":5}},"132":{"start":{"line":381,"column":2},"end":{"line":389,"column":5}},"133":{"start":{"line":382,"column":4},"end":{"line":388,"column":5}},"134":{"start":{"line":383,"column":6},"end":{"line":383,"column":30}},"135":{"start":{"line":385,"column":6},"end":{"line":385,"column":22}},"136":{"start":{"line":386,"column":6},"end":{"line":386,"column":64}},"137":{"start":{"line":387,"column":6},"end":{"line":387,"column":20}},"138":{"start":{"line":391,"column":2},"end":{"line":396,"column":4}},"139":{"start":{"line":398,"column":2},"end":{"line":403,"column":5}},"140":{"start":{"line":402,"column":4},"end":{"line":402,"column":63}},"141":{"start":{"line":406,"column":0},"end":{"line":472,"column":2}},"142":{"start":{"line":407,"column":2},"end":{"line":407,"column":25}},"143":{"start":{"line":409,"column":2},"end":{"line":413,"column":3}},"144":{"start":{"line":410,"column":4},"end":{"line":410,"column":25}},"145":{"start":{"line":412,"column":4},"end":{"line":412,"column":67}},"146":{"start":{"line":415,"column":2},"end":{"line":471,"column":5}},"147":{"start":{"line":419,"column":4},"end":{"line":431,"column":15}},"148":{"start":{"line":421,"column":10},"end":{"line":423,"column":13}},"149":{"start":{"line":422,"column":12},"end":{"line":422,"column":111}},"150":{"start":{"line":426,"column":10},"end":{"line":428,"column":13}},"151":{"start":{"line":427,"column":12},"end":{"line":427,"column":111}},"152":{"start":{"line":433,"column":4},"end":{"line":449,"column":5}},"153":{"start":{"line":434,"column":6},"end":{"line":434,"column":18}},"154":{"start":{"line":435,"column":6},"end":{"line":435,"column":44}},"155":{"start":{"line":437,"column":6},"end":{"line":437,"column":23}},"156":{"start":{"line":439,"column":6},"end":{"line":441,"column":9}},"157":{"start":{"line":440,"column":8},"end":{"line":440,"column":72}},"158":{"start":{"line":443,"column":6},"end":{"line":448,"column":9}},"159":{"start":{"line":451,"column":4},"end":{"line":468,"column":5}},"160":{"start":{"line":452,"column":6},"end":{"line":452,"column":23}},"161":{"start":{"line":454,"column":6},"end":{"line":454,"column":18}},"162":{"start":{"line":455,"column":6},"end":{"line":455,"column":81}},"163":{"start":{"line":457,"column":6},"end":{"line":457,"column":42}},"164":{"start":{"line":458,"column":6},"end":{"line":460,"column":9}},"165":{"start":{"line":459,"column":8},"end":{"line":459,"column":74}},"166":{"start":{"line":462,"column":6},"end":{"line":467,"column":9}},"167":{"start":{"line":470,"column":4},"end":{"line":470,"column":62}},"168":{"start":{"line":474,"column":0},"end":{"line":498,"column":2}},"169":{"start":{"line":475,"column":2},"end":{"line":475,"column":55}},"170":{"start":{"line":475,"column":24},"end":{"line":475,"column":55}},"171":{"start":{"line":477,"column":2},"end":{"line":479,"column":17}},"172":{"start":{"line":481,"column":2},"end":{"line":481,"column":26}},"173":{"start":{"line":483,"column":2},"end":{"line":483,"column":65}},"174":{"start":{"line":485,"column":2},"end":{"line":485,"column":77}},"175":{"start":{"line":486,"column":2},"end":{"line":486,"column":38}},"176":{"start":{"line":488,"column":2},"end":{"line":490,"column":5}},"177":{"start":{"line":489,"column":4},"end":{"line":489,"column":74}},"178":{"start":{"line":492,"column":2},"end":{"line":497,"column":27}},"179":{"start":{"line":500,"column":0},"end":{"line":521,"column":2}},"180":{"start":{"line":501,"column":2},"end":{"line":503,"column":17}},"181":{"start":{"line":505,"column":2},"end":{"line":505,"column":26}},"182":{"start":{"line":506,"column":2},"end":{"line":506,"column":65}},"183":{"start":{"line":508,"column":2},"end":{"line":508,"column":40}},"184":{"start":{"line":510,"column":2},"end":{"line":510,"column":76}},"185":{"start":{"line":511,"column":2},"end":{"line":513,"column":5}},"186":{"start":{"line":512,"column":4},"end":{"line":512,"column":70}},"187":{"start":{"line":515,"column":2},"end":{"line":520,"column":17}},"188":{"start":{"line":523,"column":0},"end":{"line":548,"column":2}},"189":{"start":{"line":524,"column":2},"end":{"line":524,"column":25}},"190":{"start":{"line":526,"column":2},"end":{"line":526,"column":26}},"191":{"start":{"line":528,"column":2},"end":{"line":532,"column":3}},"192":{"start":{"line":529,"column":4},"end":{"line":531,"column":6}},"193":{"start":{"line":534,"column":2},"end":{"line":536,"column":3}},"194":{"start":{"line":535,"column":4},"end":{"line":535,"column":16}},"195":{"start":{"line":538,"column":2},"end":{"line":543,"column":3}},"196":{"start":{"line":539,"column":4},"end":{"line":542,"column":7}},"197":{"start":{"line":540,"column":6},"end":{"line":540,"column":55}},"198":{"start":{"line":541,"column":6},"end":{"line":541,"column":57}},"199":{"start":{"line":541,"column":26},"end":{"line":541,"column":57}},"200":{"start":{"line":545,"column":2},"end":{"line":545,"column":77}},"201":{"start":{"line":546,"column":2},"end":{"line":546,"column":66}},"202":{"start":{"line":546,"column":22},"end":{"line":546,"column":66}},"203":{"start":{"line":547,"column":2},"end":{"line":547,"column":52}},"204":{"start":{"line":550,"column":0},"end":{"line":550,"column":25}},"205":{"start":{"line":551,"column":0},"end":{"line":551,"column":33}},"206":{"start":{"line":552,"column":0},"end":{"line":552,"column":33}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":24}},{"start":{"line":24,"column":28},"end":{"line":24,"column":30}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"7":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":22},"end":{"line":67,"column":51}},{"start":{"line":67,"column":55},"end":{"line":67,"column":89}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":9},"end":{"line":68,"column":9}},{"start":{"line":68,"column":9},"end":{"line":68,"column":9}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":27},"end":{"line":83,"column":75}},{"start":{"line":83,"column":79},"end":{"line":83,"column":94}}]},"12":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":27},"end":{"line":84,"column":75}},{"start":{"line":84,"column":79},"end":{"line":84,"column":94}}]},"13":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":19},"end":{"line":87,"column":41}},{"start":{"line":87,"column":45},"end":{"line":87,"column":76}}]},"14":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"15":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":26},"end":{"line":89,"column":73}},{"start":{"line":89,"column":77},"end":{"line":89,"column":91}}]},"16":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"17":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"18":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":64},"end":{"line":206,"column":89}},{"start":{"line":206,"column":92},"end":{"line":206,"column":94}}]},"19":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":10},"end":{"line":219,"column":30}},{"start":{"line":219,"column":34},"end":{"line":219,"column":89}}]},"20":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"21":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":17},"end":{"line":224,"column":59}},{"start":{"line":224,"column":63},"end":{"line":224,"column":93}}]},"22":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":33},"end":{"line":225,"column":59}},{"start":{"line":225,"column":64},"end":{"line":225,"column":105}}]},"23":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":83},"end":{"line":225,"column":93}},{"start":{"line":225,"column":96},"end":{"line":225,"column":105}}]},"24":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":33},"end":{"line":226,"column":59}},{"start":{"line":226,"column":63},"end":{"line":226,"column":72}}]},"25":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":25},"end":{"line":231,"column":73}},{"start":{"line":231,"column":77},"end":{"line":231,"column":92}}]},"26":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":25},"end":{"line":232,"column":73}},{"start":{"line":232,"column":77},"end":{"line":232,"column":92}}]},"27":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"28":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"29":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":36}},{"start":{"line":288,"column":40},"end":{"line":288,"column":42}}]},"30":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"31":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"32":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"33":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":21}},{"start":{"line":299,"column":25},"end":{"line":299,"column":45}}]},"34":{"line":318,"type":"cond-expr","locations":[{"start":{"line":319,"column":18},"end":{"line":319,"column":48}},{"start":{"line":320,"column":18},"end":{"line":320,"column":23}}]},"35":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"36":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"37":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"38":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"39":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"40":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"41":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"42":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"43":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":451,"column":4}},{"start":{"line":451,"column":4},"end":{"line":451,"column":4}}]},"44":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"45":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":12},"end":{"line":481,"column":19}},{"start":{"line":481,"column":23},"end":{"line":481,"column":25}}]},"46":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":12},"end":{"line":505,"column":19}},{"start":{"line":505,"column":23},"end":{"line":505,"column":25}}]},"47":{"line":526,"type":"binary-expr","locations":[{"start":{"line":526,"column":12},"end":{"line":526,"column":19}},{"start":{"line":526,"column":23},"end":{"line":526,"column":25}}]},"48":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"49":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":2}},{"start":{"line":534,"column":2},"end":{"line":534,"column":2}}]},"50":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":2},"end":{"line":538,"column":2}},{"start":{"line":538,"column":2},"end":{"line":538,"column":2}}]},"51":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":6},"end":{"line":541,"column":6}},{"start":{"line":541,"column":6},"end":{"line":541,"column":6}}]},"52":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":2},"end":{"line":546,"column":2}},{"start":{"line":546,"column":2},"end":{"line":546,"column":2}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , Helpers = require('./helpers')","  , _ = require('lodash')","  , Association = require('./base')","  , CounterCache = require('../plugins/counter-cache')","  , util = require('util');","","/**"," * One-to-many association"," *"," * In the API reference below, replace `Association(s)` with the actual name of your association, e.g. for `User.hasMany(Project)` the getter will be `user.getProjects()`."," *"," * @mixin HasMany"," */","var HasMany = function(source, target, options) {","  Association.call(this);","","  this.associationType = 'HasMany';","  this.source = source;","  this.target = target;","  this.targetAssociation = null;","  this.options = options || {};","  this.sequelize = source.modelManager.sequelize;","  this.through = options.through;","  this.scope = options.scope;","  this.isMultiAssociation = true;","  this.isSelfAssociation = this.source === this.target;","  this.as = this.options.as;","  this.foreignKeyAttribute = {};","","  if (this.options.through) {","    throw new Error('N:M associations are not supported with hasMany. Use belongsToMany instead');","  }","","","  /*","   * If self association, this is the target association","   */","  if (this.isSelfAssociation) {","    this.targetAssociation = this;","  }","","  if (this.as) {","    this.isAliased = true;","","    if (_.isPlainObject(this.as)) {","      this.options.name = this.as;","      this.as = this.as.plural;","    } else {","      this.options.name = {","        plural: this.as,","        singular: Utils.singularize(this.as)","      };","    }","  } else {","    this.as = this.target.options.name.plural;","    this.options.name = this.target.options.name;","  }","","  /*","   * Foreign key setup","   */","  if (_.isObject(this.options.foreignKey)) {","    this.foreignKeyAttribute = this.options.foreignKey;","    this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;","  } else if (this.options.foreignKey) {","    this.foreignKey = this.options.foreignKey;","  }","","  if (!this.foreignKey) {","    this.foreignKey = Utils.camelizeIf(","      [","        Utils.underscoredIf(this.source.options.name.singular, this.source.options.underscored),","        this.source.primaryKeyAttribute","      ].join('_'),","      !this.source.options.underscored","    );","  }","","  if (this.target.rawAttributes[this.foreignKey]) {","    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","    this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","  }","","  this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;","  if (this.target.rawAttributes[this.sourceKey]) {","    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;","  } else {","    this.sourceKeyField = this.sourceKey;","  }","","  if (this.source.fieldRawAttributesMap[this.sourceKey]) {","    this.sourceKeyAttribute = this.source.fieldRawAttributesMap[this.sourceKey].fieldName;","  } else {","    this.sourceKeyAttribute = this.source.primaryKeyAttribute;","  }","  this.sourceIdentifier = this.sourceKey;","  this.associationAccessor = this.as;","","  // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it","  var plural = Utils.uppercaseFirst(this.options.name.plural)","    , singular = Utils.uppercaseFirst(this.options.name.singular);","","  this.accessors = {","    /**","     * Get everything currently associated with this, using an optional where clause.","     *","     * @param {Object} [options]","     * @param {Object} [options.where] An optional where clause to limit the associated models","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false","     * @param {String} [options.schema] Apply a schema on the related model","     * @return {Promise<Array<Instance>>}","     * @method getAssociations","     */","    get: 'get' + plural,","    /**","     * Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated","     *","     * @param {Array<Instance|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.","     * @param {Object} [options] Options passed to `target.findAll` and `update`.","     * @param {Object} [options.validate] Run validation for the join model","     * @return {Promise}","     * @method setAssociations","     */","    set: 'set' + plural,","    /**","     * Associate several persisted instances with this.","     *","     * @param {Array<Instance|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this.","     * @param {Object} [options] Options passed to `target.update`.","     * @param {Object} [options.validate] Run validation for the join model.","     * @return {Promise}","     * @method addAssociations","     */","    addMultiple: 'add' + plural,","    /**","     * Associate a persisted instance with this.","     *","     * @param {Instance|String|Number} [newAssociation] A persisted instance or primary key of instance to associate with this.","     * @param {Object} [options] Options passed to `target.update`.","     * @param {Object} [options.validate] Run validation for the join model.","     * @return {Promise}","     * @method addAssociation","     */","    add: 'add' + singular,","    /**","     * Create a new instance of the associated model and associate it with this.","     *","     * @param {Object} [values]","     * @param {Object} [options] Options passed to `target.create`.","     * @return {Promise}","     * @method createAssociation","     */","    create: 'create' + singular,","    /**","     * Un-associate the instance.","     *","     * @param {Instance|String|Number} [oldAssociated] Can be an Instance or its primary key","     * @param {Object} [options] Options passed to `target.update`","     * @return {Promise}","     * @method removeAssociation","     */","    remove: 'remove' + singular,","    /**","     * Un-associate several instances.","     *","     * @param {Array<Instance|String|Number>} [oldAssociatedArray] Can be an array of instances or their primary keys","     * @param {Object} [options] Options passed to `through.destroy`","     * @return {Promise}","     * @method removeAssociations","     */","    removeMultiple: 'remove' + plural,","    /**","     * Check if an instance is associated with this.","     *","     * @param {Instance|String|Number} [instance] Can be an Instance or its primary key","     * @param {Object} [options] Options passed to getAssociations","     * @return {Promise}","     * @method hasAssociation","     */","    hasSingle: 'has' + singular,","    /**","     * Check if all instances are associated with this.","     *","     * @param {Array<Instance|String|Number>} [instances] Can be an array of instances or their primary keys","     * @param {Object} [options] Options passed to getAssociations","     * @return {Promise}","     * @method hasAssociations","     */","    hasAll: 'has' + plural,","    /**","     * Count everything currently associated with this, using an optional where clause.","     *","     * @param {Object} [options]","     * @param {Object} [options.where] An optional where clause to limit the associated models","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false","     * @return {Promise<Int>}","     * @method countAssociations","     */","    count: 'count' + plural","  };","","  if (this.options.counterCache) {","    new CounterCache(this, this.options.counterCache !== true ? this.options.counterCache : {});","    delete this.accessors.count;","  }","};","","util.inherits(HasMany, Association);","","// the id is in the target table","// or in an extra table which connects two tables","HasMany.prototype.injectAttributes = function() {","  var newAttributes = {};","  var constraintOptions = _.clone(this.options); // Create a new options object for use with addForeignKeyConstraints, to avoid polluting this.options in case it is later used for a n:m","  newAttributes[this.foreignKey] = _.defaults({}, this.foreignKeyAttribute, {","    type: this.options.keyType || this.source.rawAttributes[this.sourceKeyAttribute].type,","    allowNull : true","  });","","  if (this.options.constraints !== false) {","    var target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];","    constraintOptions.onDelete = constraintOptions.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');","    constraintOptions.onUpdate = constraintOptions.onUpdate || 'CASCADE';","  }","  Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, constraintOptions, this.sourceKeyField);","  Utils.mergeDefaults(this.target.rawAttributes, newAttributes);","","  this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","  this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","","  this.target.refreshAttributes();","  this.source.refreshAttributes();","","  Helpers.checkNamingCollision(this);","","  return this;","};","","HasMany.prototype.mixin = function(obj) {","  var association = this;","","  obj[this.accessors.get] = function(options) {","    return association.get(this, options);","  };","","  if (this.accessors.count) {","    obj[this.accessors.count] = function(options) {","      return association.count(this, options);","    };","  }","","  obj[this.accessors.hasSingle] = obj[this.accessors.hasAll] = function(instances, options) {","    return association.has(this, instances, options);","  };","","  obj[this.accessors.set] = function(instances, options) {","    return association.set(this, instances, options);","  };","","  obj[this.accessors.add] = obj[this.accessors.addMultiple] = function(instances, options) {","    return association.add(this, instances, options);","  };","","  obj[this.accessors.remove] = obj[this.accessors.removeMultiple] = function(instances, options) {","    return association.remove(this, instances, options);","  };","","  obj[this.accessors.create] = function(values, options) {","    return association.create(this, values, options);","  };","};","","HasMany.prototype.get = function(instances, options) {","  var association = this","    , where = {}","    , Model = association.target","    , instance","    , values;","","  if (!Array.isArray(instances)) {","    instance = instances;","    instances = undefined;","  }","","  options = Utils.cloneDeep(options) || {};","","  if (association.scope) {","    _.assign(where, association.scope);","  }","","  if (instances) {","    values = instances.map(function (instance) {","      return instance.get(association.sourceKey, {raw: true});","    });","","    if (options.limit && instances.length > 1) {","      options.groupedLimit = {","        limit: options.limit,","        on: association.foreignKeyField,","        values: values","      };","","      delete options.limit;","    } else {","      where[association.foreignKey] = {","        $in: values","      };","      delete options.groupedLimit;","    }","  } else {","    where[association.foreignKey] = instance.get(association.sourceKey, {raw: true});","  }","","","  options.where = options.where ?","                  {$and: [where, options.where]} :","                  where;","","  if (options.hasOwnProperty('scope')) {","    if (!options.scope) {","      Model = Model.unscoped();","    } else {","      Model = Model.scope(options.scope);","    }","  }","","  if (options.hasOwnProperty('schema')) {","    Model = Model.schema(options.schema, options.schemaDelimiter);","  }","","","  return Model.findAll(options).then(function (results) {","    if (instance) return results;","","    var result = {};","    instances.forEach(function (instance) {","      result[instance.get(association.sourceKey, {raw: true})] = [];","    });","","    results.forEach(function (instance) {","      result[instance.get(association.foreignKey, {raw: true})].push(instance);","    });","","    return result;","  });","};","","HasMany.prototype.count = function(instance, options) {","  var association = this","    , model = association.target","    , sequelize = model.sequelize;","","  options = Utils.cloneDeep(options);","  options.attributes = [","    [sequelize.fn('COUNT', sequelize.col(model.primaryKeyField)), 'count']","  ];","  options.raw = true;","  options.plain = true;","","  return this.get(instance, options).then(function (result) {","    return parseInt(result.count, 10);","  });","};","","HasMany.prototype.has = function(sourceInstance, targetInstances, options) {","  var association = this","    , where = {};","","  if (!Array.isArray(targetInstances)) {","    targetInstances = [targetInstances];","  }","","  options = _.assign({}, options, {","    scope: false,","    raw: true","  });","","  where.$or = targetInstances.map(function (instance) {","    if (instance instanceof association.target.Instance) {","      return instance.where();","    } else {","      var _where = {};","      _where[association.target.primaryKeyAttribute] = instance;","      return _where;","    }","  });","","  options.where = {","    $and: [","      where,","      options.where","    ]","  };","","  return this.get(","    sourceInstance,","    options","  ).then(function(associatedObjects) {","    return associatedObjects.length === targetInstances.length;","  });","};","","HasMany.prototype.set = function(sourceInstance, targetInstances, options) {","  var association = this;","","  if (targetInstances === null) {","    targetInstances = [];","  } else {","    targetInstances = association.toInstanceArray(targetInstances);","  }","","  return association.get(sourceInstance, _.defaults({","    scope: false,","    raw: true","  }, options)).then(function(oldAssociations) {","    var promises = []","      , obsoleteAssociations = oldAssociations.filter(function(old) {","          return !_.find(targetInstances, function(obj) {","            return obj[association.target.primaryKeyAttribute] === old[association.target.primaryKeyAttribute];","          });","        })","      , unassociatedObjects = targetInstances.filter(function(obj) {","          return !_.find(oldAssociations, function(old) {","            return obj[association.target.primaryKeyAttribute] === old[association.target.primaryKeyAttribute];","          });","        })","      , updateWhere","      , update;","","    if (obsoleteAssociations.length > 0) {","      update = {};","      update[association.foreignKey] = null;","","      updateWhere = {};","","      updateWhere[association.target.primaryKeyAttribute] = obsoleteAssociations.map(function(associatedObject) {","        return associatedObject[association.target.primaryKeyAttribute];","      });","","      promises.push(association.target.unscoped().update(","        update,","        _.defaults({","          where: updateWhere","        }, options)","      ));","    }","","    if (unassociatedObjects.length > 0) {","      updateWhere = {};","","      update = {};","      update[association.foreignKey] = sourceInstance.get(association.sourceKey);","","      _.assign(update, association.scope);","      updateWhere[association.target.primaryKeyAttribute] = unassociatedObjects.map(function(unassociatedObject) {","        return unassociatedObject[association.target.primaryKeyAttribute];","      });","","      promises.push(association.target.unscoped().update(","        update,","        _.defaults({","          where: updateWhere","        }, options)","      ));","    }","","    return Utils.Promise.all(promises).return(sourceInstance);","  });","};","","HasMany.prototype.add = function(sourceInstance, targetInstances, options) {","  if (!targetInstances) return Utils.Promise.resolve();","","  var association = this","    , update = {}","    , where = {};","","  options = options || {};","","  targetInstances = association.toInstanceArray(targetInstances);","","  update[association.foreignKey] = sourceInstance.get(association.sourceKey);","  _.assign(update, association.scope);","","  where[association.target.primaryKeyAttribute] = targetInstances.map(function (unassociatedObject) {","    return unassociatedObject.get(association.target.primaryKeyAttribute);","  });","","  return association.target.unscoped().update(","    update,","    _.defaults({","      where: where","    }, options)","  ).return(sourceInstance);","};","","HasMany.prototype.remove = function(sourceInstance, targetInstances, options) {","  var association = this","    , update = {}","    , where = {};","","  options = options || {};","  targetInstances = association.toInstanceArray(targetInstances);","","  update[association.foreignKey] = null;","","  where[association.foreignKey] = sourceInstance.get(association.sourceKey);","  where[association.target.primaryKeyAttribute] = targetInstances.map(function (targetInstance) {","    return targetInstance.get(association.target.primaryKeyAttribute);","  });","","  return association.target.unscoped().update(","    update,","    _.defaults({","      where: where","    }, options)","  ).return(this);","};","","HasMany.prototype.create = function(sourceInstance, values, options) {","  var association = this;","","  options = options || {};","","  if (Array.isArray(options)) {","    options = {","      fields: options","    };","  }","","  if (values === undefined) {","    values = {};","  }","","  if (association.scope) {","    Object.keys(association.scope).forEach(function (attribute) {","      values[attribute] = association.scope[attribute];","      if (options.fields) options.fields.push(attribute);","    });","  }","","  values[association.foreignKey] = sourceInstance.get(association.sourceKey);","  if (options.fields) options.fields.push(association.foreignKey);","  return association.target.create(values, options);","};","","module.exports = HasMany;","module.exports.HasMany = HasMany;","module.exports.default = HasMany;",""],"l":{"3":1,"17":1,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"41":0,"42":0,"45":0,"46":0,"48":0,"49":0,"50":0,"52":0,"58":0,"59":0,"65":0,"66":0,"67":0,"68":0,"69":0,"72":0,"73":0,"82":0,"83":0,"84":0,"87":0,"88":0,"89":0,"91":0,"94":0,"95":0,"97":0,"99":0,"100":0,"103":0,"106":0,"205":0,"206":0,"207":0,"211":1,"215":1,"216":0,"217":0,"218":0,"223":0,"224":0,"225":0,"226":0,"228":0,"229":0,"231":0,"232":0,"234":0,"235":0,"237":0,"239":0,"242":1,"243":0,"245":0,"246":0,"249":0,"250":0,"251":0,"255":0,"256":0,"259":0,"260":0,"263":0,"264":0,"267":0,"268":0,"271":0,"272":0,"276":1,"277":0,"283":0,"284":0,"285":0,"288":0,"290":0,"291":0,"294":0,"295":0,"296":0,"299":0,"300":0,"306":0,"308":0,"311":0,"314":0,"318":0,"322":0,"323":0,"324":0,"326":0,"330":0,"331":0,"335":0,"336":0,"338":0,"339":0,"340":0,"343":0,"344":0,"347":0,"351":1,"352":0,"356":0,"357":0,"360":0,"361":0,"363":0,"364":0,"368":1,"369":0,"372":0,"373":0,"376":0,"381":0,"382":0,"383":0,"385":0,"386":0,"387":0,"391":0,"398":0,"402":0,"406":1,"407":0,"409":0,"410":0,"412":0,"415":0,"419":0,"421":0,"422":0,"426":0,"427":0,"433":0,"434":0,"435":0,"437":0,"439":0,"440":0,"443":0,"451":0,"452":0,"454":0,"455":0,"457":0,"458":0,"459":0,"462":0,"470":0,"474":1,"475":0,"477":0,"481":0,"483":0,"485":0,"486":0,"488":0,"489":0,"492":0,"500":1,"501":0,"505":0,"506":0,"508":0,"510":0,"511":0,"512":0,"515":0,"523":1,"524":0,"526":0,"528":0,"529":0,"534":0,"535":0,"538":0,"539":0,"540":0,"541":0,"545":0,"546":0,"547":0,"550":1,"551":1,"552":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/plugins/counter-cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/plugins/counter-cache.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":19},"end":{"line":8,"column":50}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":42},"end":{"line":37,"column":53}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":37},"end":{"line":59,"column":48}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":41}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":98},"end":{"line":71,"column":115}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":15},"end":{"line":81,"column":44}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":97},"end":{"line":84,"column":117}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":44}}},"9":{"name":"(anonymous_9)","line":91,"loc":{"start":{"line":91,"column":97},"end":{"line":91,"column":117}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":18},"end":{"line":96,"column":32}}},"11":{"name":"(anonymous_11)","line":103,"loc":{"start":{"line":103,"column":18},"end":{"line":103,"column":32}}},"12":{"name":"(anonymous_12)","line":112,"loc":{"start":{"line":112,"column":19},"end":{"line":112,"column":46}}},"13":{"name":"(anonymous_13)","line":128,"loc":{"start":{"line":128,"column":12},"end":{"line":128,"column":39}}},"14":{"name":"(anonymous_14)","line":135,"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":39}}},"15":{"name":"(anonymous_15)","line":152,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":40}}},"16":{"name":"(anonymous_16)","line":162,"loc":{"start":{"line":162,"column":45},"end":{"line":162,"column":63}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":8,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":33}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":35}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":35}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":54}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":28}},"9":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":73}},"11":{"start":{"line":21,"column":2},"end":{"line":30,"column":3}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":26}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":57}},"15":{"start":{"line":26,"column":4},"end":{"line":29,"column":6}},"16":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},"18":{"start":{"line":37,"column":0},"end":{"line":56,"column":2}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":37}},"20":{"start":{"line":41,"column":2},"end":{"line":41,"column":25}},"21":{"start":{"line":43,"column":2},"end":{"line":50,"column":4}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":64}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":34}},"24":{"start":{"line":59,"column":0},"end":{"line":175,"column":2}},"25":{"start":{"line":60,"column":2},"end":{"line":65,"column":21}},"26":{"start":{"line":67,"column":2},"end":{"line":110,"column":4}},"27":{"start":{"line":69,"column":6},"end":{"line":69,"column":53}},"28":{"start":{"line":71,"column":6},"end":{"line":79,"column":9}},"29":{"start":{"line":72,"column":8},"end":{"line":72,"column":27}},"30":{"start":{"line":74,"column":8},"end":{"line":74,"column":51}},"31":{"start":{"line":76,"column":8},"end":{"line":76,"column":59}},"32":{"start":{"line":78,"column":8},"end":{"line":78,"column":107}},"33":{"start":{"line":82,"column":6},"end":{"line":82,"column":53}},"34":{"start":{"line":84,"column":6},"end":{"line":86,"column":9}},"35":{"start":{"line":85,"column":8},"end":{"line":85,"column":115}},"36":{"start":{"line":89,"column":6},"end":{"line":89,"column":53}},"37":{"start":{"line":91,"column":6},"end":{"line":93,"column":9}},"38":{"start":{"line":92,"column":8},"end":{"line":92,"column":115}},"39":{"start":{"line":97,"column":6},"end":{"line":97,"column":21}},"40":{"start":{"line":99,"column":6},"end":{"line":99,"column":41}},"41":{"start":{"line":101,"column":6},"end":{"line":101,"column":19}},"42":{"start":{"line":104,"column":6},"end":{"line":104,"column":21}},"43":{"start":{"line":106,"column":6},"end":{"line":106,"column":57}},"44":{"start":{"line":108,"column":6},"end":{"line":108,"column":19}},"45":{"start":{"line":112,"column":2},"end":{"line":125,"column":4}},"46":{"start":{"line":113,"column":4},"end":{"line":114,"column":22}},"47":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"48":{"start":{"line":117,"column":6},"end":{"line":117,"column":59}},"49":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"50":{"start":{"line":121,"column":6},"end":{"line":121,"column":67}},"51":{"start":{"line":124,"column":4},"end":{"line":124,"column":51}},"52":{"start":{"line":127,"column":2},"end":{"line":159,"column":4}},"53":{"start":{"line":129,"column":6},"end":{"line":129,"column":56}},"54":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"55":{"start":{"line":132,"column":8},"end":{"line":132,"column":56}},"56":{"start":{"line":136,"column":6},"end":{"line":137,"column":24}},"57":{"start":{"line":139,"column":6},"end":{"line":141,"column":7}},"58":{"start":{"line":140,"column":8},"end":{"line":140,"column":64}},"59":{"start":{"line":142,"column":6},"end":{"line":144,"column":7}},"60":{"start":{"line":143,"column":8},"end":{"line":143,"column":64}},"61":{"start":{"line":145,"column":6},"end":{"line":148,"column":7}},"62":{"start":{"line":146,"column":8},"end":{"line":146,"column":64}},"63":{"start":{"line":147,"column":8},"end":{"line":147,"column":72}},"64":{"start":{"line":150,"column":6},"end":{"line":150,"column":35}},"65":{"start":{"line":153,"column":6},"end":{"line":153,"column":56}},"66":{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},"67":{"start":{"line":156,"column":8},"end":{"line":156,"column":56}},"68":{"start":{"line":162,"column":2},"end":{"line":164,"column":5}},"69":{"start":{"line":163,"column":4},"end":{"line":163,"column":63}},"70":{"start":{"line":166,"column":2},"end":{"line":174,"column":3}},"71":{"start":{"line":167,"column":4},"end":{"line":167,"column":62}},"72":{"start":{"line":168,"column":4},"end":{"line":168,"column":62}},"73":{"start":{"line":169,"column":4},"end":{"line":169,"column":63}},"74":{"start":{"line":171,"column":4},"end":{"line":171,"column":66}},"75":{"start":{"line":172,"column":4},"end":{"line":172,"column":66}},"76":{"start":{"line":173,"column":4},"end":{"line":173,"column":68}},"77":{"start":{"line":177,"column":0},"end":{"line":177,"column":30}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":24}},{"start":{"line":12,"column":28},"end":{"line":12,"column":30}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":63},"end":{"line":71,"column":70}},{"start":{"line":71,"column":74},"end":{"line":71,"column":89}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":77},"end":{"line":78,"column":84}},{"start":{"line":78,"column":88},"end":{"line":78,"column":103}}]},"6":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":62},"end":{"line":84,"column":69}},{"start":{"line":84,"column":73},"end":{"line":84,"column":88}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":85},"end":{"line":85,"column":92}},{"start":{"line":85,"column":96},"end":{"line":85,"column":111}}]},"8":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":62},"end":{"line":91,"column":69}},{"start":{"line":91,"column":73},"end":{"line":91,"column":88}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":85},"end":{"line":92,"column":92}},{"start":{"line":92,"column":96},"end":{"line":92,"column":111}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"11":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"12":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":24}},{"start":{"line":120,"column":28},"end":{"line":120,"column":57}}]},"13":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"14":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"15":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":10},"end":{"line":139,"column":18}},{"start":{"line":139,"column":22},"end":{"line":139,"column":39}}]},"16":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"17":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":10},"end":{"line":142,"column":19}},{"start":{"line":142,"column":23},"end":{"line":142,"column":39}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"19":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":26}},{"start":{"line":145,"column":30},"end":{"line":145,"column":38}},{"start":{"line":145,"column":42},"end":{"line":145,"column":71}}]},"20":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"21":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , Helpers = require('../associations/helpers')","  , DataTypes = require('../data-types')","  , Promise = require('bluebird');","","var CounterCache = function(association, options) {","  this.association = association;","  this.source = association.source;","  this.target = association.target;","  this.options = options || {};","","  this.sequelize = this.source.modelManager.sequelize;","  this.as = this.options.as;","","  if (association.associationType !== 'HasMany') {","    throw new Error('Can only have CounterCache on HasMany association');","  }","","  if (this.as) {","    this.isAliased = true;","    this.columnName = this.as;","  } else {","    this.as = 'count_' + this.target.options.name.plural;","    this.columnName = Utils.camelizeIf(","      this.as,","      !this.source.options.underscored","    );","  }","","  this.injectAttributes();","  this.injectHooks();","};","","// Add countAssociation attribute to source model","CounterCache.prototype.injectAttributes = function() {","  // Do not try to use a column that's already taken","  Helpers.checkNamingCollision(this);","","  var newAttributes = {};","","  newAttributes[this.columnName] = {","    type: DataTypes.INTEGER,","    allowNull: false,","    defaultValue: Utils._.partial(","      Utils.toDefaultValue,","      0","    )","  };","","  Utils.mergeDefaults(this.source.rawAttributes, newAttributes);","","  // Sync attributes and setters/getters to DAO prototype","  this.source.refreshAttributes();","};","","// Add setAssociaton method to the prototype of the model instance","CounterCache.prototype.injectHooks = function() {","  var association = this.association,","    counterCacheInstance = this,","    CounterUtil,","    fullUpdateHook,","    atomicHooks,","    previousTargetId;","","  CounterUtil = {","    update: function (targetId, options) {","      var query = CounterUtil._targetQuery(targetId);","","      return association.target.count({ where: query, logging: options && options.logging }).then(function (count) {","        var newValues = {};","","        query = CounterUtil._sourceQuery(targetId);","","        newValues[counterCacheInstance.columnName] = count;","","        return association.source.update(newValues, { where: query, logging: options && options.logging });","      });","    },","    increment: function (targetId, options) {","      var query = CounterUtil._sourceQuery(targetId);","","      return association.source.find({ where: query, logging: options && options.logging }).then(function (instance) {","        return instance.increment(counterCacheInstance.columnName, { by: 1, logging: options && options.logging });","      });","    },","    decrement: function (targetId, options) {","      var query = CounterUtil._sourceQuery(targetId);","","      return association.source.find({ where: query, logging: options && options.logging }).then(function (instance) {","        return instance.decrement(counterCacheInstance.columnName, { by: 1, logging: options && options.logging });","      });","    },","    // helpers","    _targetQuery: function (id) {","      var query = {};","","      query[association.foreignKey] = id;","","      return query;","    },","    _sourceQuery: function (id) {","      var query = {};","","      query[association.source.primaryKeyAttribute] = id;","","      return query;","    }","  };","","  fullUpdateHook = function (target, options) {","    var targetId = target.get(association.foreignKey)","      , promises = [];","","    if (targetId) {","      promises.push(CounterUtil.update(targetId, options));","    }","","    if (previousTargetId && previousTargetId !== targetId) {","      promises.push(CounterUtil.update(previousTargetId, options));","    }","","    return Promise.all(promises).return(undefined);","  };","","  atomicHooks = {","    create: function (target, options) {","      var targetId = target.get(association.foreignKey);","","      if (targetId) {","        return CounterUtil.increment(targetId, options);","      }","    },","    update: function (target, options) {","      var targetId = target.get(association.foreignKey)","        , promises = [];","","      if (targetId && !previousTargetId) {","        promises.push(CounterUtil.increment(targetId, options));","      }","      if (!targetId && previousTargetId) {","        promises.push(CounterUtil.decrement(targetId, options));","      }","      if (previousTargetId && targetId && previousTargetId !== targetId) {","        promises.push(CounterUtil.increment(targetId, options));","        promises.push(CounterUtil.decrement(previousTargetId, options));","      }","","      return Promise.all(promises);","    },","    destroy: function (target, options) {","      var targetId = target.get(association.foreignKey);","","      if (targetId) {","        return CounterUtil.decrement(targetId, options);","      }","    }","  };","","  // previousDataValues are cleared before afterUpdate, so we need to save this here","  association.target.addHook('beforeUpdate', function (target) {","    previousTargetId = target.previous(association.foreignKey);","  });","","  if (this.options.atomic === false) {","    association.target.addHook('afterCreate', fullUpdateHook);","    association.target.addHook('afterUpdate', fullUpdateHook);","    association.target.addHook('afterDestroy', fullUpdateHook);","  } else {","    association.target.addHook('afterCreate', atomicHooks.create);","    association.target.addHook('afterUpdate', atomicHooks.update);","    association.target.addHook('afterDestroy', atomicHooks.destroy);","  }","};","","module.exports = CounterCache;",""],"l":{"3":1,"8":1,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"17":0,"18":0,"21":0,"22":0,"23":0,"25":0,"26":0,"32":0,"33":0,"37":1,"39":0,"41":0,"43":0,"52":0,"55":0,"59":1,"60":0,"67":0,"69":0,"71":0,"72":0,"74":0,"76":0,"78":0,"82":0,"84":0,"85":0,"89":0,"91":0,"92":0,"97":0,"99":0,"101":0,"104":0,"106":0,"108":0,"112":0,"113":0,"116":0,"117":0,"120":0,"121":0,"124":0,"127":0,"129":0,"131":0,"132":0,"136":0,"139":0,"140":0,"142":0,"143":0,"145":0,"146":0,"147":0,"150":0,"153":0,"155":0,"156":0,"162":0,"163":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/has-one.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/has-one.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":1,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":54}}},"2":{"name":"(anonymous_2)","line":106,"loc":{"start":{"line":106,"column":36},"end":{"line":106,"column":47}}},"3":{"name":"(anonymous_3)","line":134,"loc":{"start":{"line":134,"column":25},"end":{"line":134,"column":39}}},"4":{"name":"(anonymous_4)","line":137,"loc":{"start":{"line":137,"column":28},"end":{"line":137,"column":46}}},"5":{"name":"(anonymous_5)","line":145,"loc":{"start":{"line":145,"column":23},"end":{"line":145,"column":52}}},"6":{"name":"(anonymous_6)","line":172,"loc":{"start":{"line":172,"column":25},"end":{"line":172,"column":45}}},"7":{"name":"(anonymous_7)","line":189,"loc":{"start":{"line":189,"column":40},"end":{"line":189,"column":59}}},"8":{"name":"(anonymous_8)","line":191,"loc":{"start":{"line":191,"column":24},"end":{"line":191,"column":44}}},"9":{"name":"(anonymous_9)","line":195,"loc":{"start":{"line":195,"column":22},"end":{"line":195,"column":42}}},"10":{"name":"(anonymous_10)","line":205,"loc":{"start":{"line":205,"column":32},"end":{"line":205,"column":60}}},"11":{"name":"(anonymous_11)","line":208,"loc":{"start":{"line":208,"column":42},"end":{"line":208,"column":80}}},"12":{"name":"(anonymous_12)","line":215,"loc":{"start":{"line":215,"column":61},"end":{"line":215,"column":83}}},"13":{"name":"(anonymous_13)","line":217,"loc":{"start":{"line":217,"column":112},"end":{"line":217,"column":132}}},"14":{"name":"(anonymous_14)","line":229,"loc":{"start":{"line":229,"column":12},"end":{"line":229,"column":23}}},"15":{"name":"(anonymous_15)","line":251,"loc":{"start":{"line":251,"column":33},"end":{"line":251,"column":61}}},"16":{"name":"(anonymous_16)","line":254,"loc":{"start":{"line":254,"column":45},"end":{"line":254,"column":71}}},"17":{"name":"(anonymous_17)","line":260,"loc":{"start":{"line":260,"column":45},"end":{"line":260,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":101,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":34}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":57}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}},"13":{"start":{"line":30,"column":2},"end":{"line":38,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"15":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":48}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"18":{"start":{"line":40,"column":2},"end":{"line":45,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":55}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":90}},"21":{"start":{"line":43,"column":9},"end":{"line":45,"column":3}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"23":{"start":{"line":47,"column":2},"end":{"line":55,"column":3}},"24":{"start":{"line":48,"column":4},"end":{"line":54,"column":6}},"25":{"start":{"line":57,"column":2},"end":{"line":57,"column":58}},"26":{"start":{"line":58,"column":2},"end":{"line":58,"column":51}},"27":{"start":{"line":59,"column":2},"end":{"line":59,"column":79}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":37}},"29":{"start":{"line":62,"column":2},"end":{"line":62,"column":43}},"30":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"31":{"start":{"line":65,"column":4},"end":{"line":65,"column":95}},"32":{"start":{"line":69,"column":2},"end":{"line":69,"column":66}},"33":{"start":{"line":71,"column":2},"end":{"line":100,"column":4}},"34":{"start":{"line":103,"column":0},"end":{"line":103,"column":35}},"35":{"start":{"line":106,"column":0},"end":{"line":132,"column":2}},"36":{"start":{"line":107,"column":2},"end":{"line":108,"column":80}},"37":{"start":{"line":110,"column":2},"end":{"line":113,"column":5}},"38":{"start":{"line":114,"column":2},"end":{"line":114,"column":64}},"39":{"start":{"line":116,"column":2},"end":{"line":116,"column":93}},"40":{"start":{"line":118,"column":2},"end":{"line":122,"column":3}},"41":{"start":{"line":119,"column":4},"end":{"line":119,"column":94}},"42":{"start":{"line":120,"column":4},"end":{"line":120,"column":97}},"43":{"start":{"line":121,"column":4},"end":{"line":121,"column":63}},"44":{"start":{"line":124,"column":2},"end":{"line":124,"column":119}},"45":{"start":{"line":127,"column":2},"end":{"line":127,"column":34}},"46":{"start":{"line":129,"column":2},"end":{"line":129,"column":37}},"47":{"start":{"line":131,"column":2},"end":{"line":131,"column":14}},"48":{"start":{"line":134,"column":0},"end":{"line":143,"column":2}},"49":{"start":{"line":135,"column":2},"end":{"line":135,"column":25}},"50":{"start":{"line":137,"column":2},"end":{"line":139,"column":4}},"51":{"start":{"line":138,"column":4},"end":{"line":138,"column":42}},"52":{"start":{"line":141,"column":2},"end":{"line":141,"column":32}},"53":{"start":{"line":142,"column":2},"end":{"line":142,"column":33}},"54":{"start":{"line":145,"column":0},"end":{"line":203,"column":2}},"55":{"start":{"line":146,"column":2},"end":{"line":149,"column":17}},"56":{"start":{"line":151,"column":2},"end":{"line":151,"column":37}},"57":{"start":{"line":153,"column":2},"end":{"line":159,"column":3}},"58":{"start":{"line":154,"column":4},"end":{"line":158,"column":5}},"59":{"start":{"line":155,"column":6},"end":{"line":155,"column":33}},"60":{"start":{"line":157,"column":6},"end":{"line":157,"column":43}},"61":{"start":{"line":161,"column":2},"end":{"line":163,"column":3}},"62":{"start":{"line":162,"column":4},"end":{"line":162,"column":68}},"63":{"start":{"line":165,"column":2},"end":{"line":168,"column":3}},"64":{"start":{"line":166,"column":4},"end":{"line":166,"column":25}},"65":{"start":{"line":167,"column":4},"end":{"line":167,"column":26}},"66":{"start":{"line":170,"column":2},"end":{"line":178,"column":3}},"67":{"start":{"line":171,"column":4},"end":{"line":175,"column":6}},"68":{"start":{"line":173,"column":8},"end":{"line":173,"column":51}},"69":{"start":{"line":177,"column":4},"end":{"line":177,"column":72}},"70":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"71":{"start":{"line":181,"column":4},"end":{"line":181,"column":39}},"72":{"start":{"line":184,"column":2},"end":{"line":186,"column":24}},"73":{"start":{"line":188,"column":2},"end":{"line":201,"column":3}},"74":{"start":{"line":189,"column":4},"end":{"line":200,"column":7}},"75":{"start":{"line":190,"column":6},"end":{"line":190,"column":22}},"76":{"start":{"line":191,"column":6},"end":{"line":193,"column":9}},"77":{"start":{"line":192,"column":8},"end":{"line":192,"column":72}},"78":{"start":{"line":195,"column":6},"end":{"line":197,"column":9}},"79":{"start":{"line":196,"column":8},"end":{"line":196,"column":77}},"80":{"start":{"line":199,"column":6},"end":{"line":199,"column":20}},"81":{"start":{"line":202,"column":2},"end":{"line":202,"column":33}},"82":{"start":{"line":205,"column":0},"end":{"line":249,"column":2}},"83":{"start":{"line":206,"column":2},"end":{"line":206,"column":25}},"84":{"start":{"line":208,"column":2},"end":{"line":246,"column":4}},"85":{"start":{"line":209,"column":4},"end":{"line":210,"column":24}},"86":{"start":{"line":212,"column":4},"end":{"line":214,"column":7}},"87":{"start":{"line":215,"column":4},"end":{"line":245,"column":7}},"88":{"start":{"line":217,"column":6},"end":{"line":219,"column":9}},"89":{"start":{"line":218,"column":8},"end":{"line":218,"column":106}},"90":{"start":{"line":221,"column":6},"end":{"line":228,"column":7}},"91":{"start":{"line":222,"column":8},"end":{"line":222,"column":51}},"92":{"start":{"line":223,"column":8},"end":{"line":227,"column":12}},"93":{"start":{"line":230,"column":6},"end":{"line":243,"column":7}},"94":{"start":{"line":231,"column":8},"end":{"line":237,"column":9}},"95":{"start":{"line":232,"column":10},"end":{"line":232,"column":31}},"96":{"start":{"line":233,"column":10},"end":{"line":233,"column":83}},"97":{"start":{"line":234,"column":10},"end":{"line":236,"column":13}},"98":{"start":{"line":239,"column":8},"end":{"line":239,"column":56}},"99":{"start":{"line":240,"column":8},"end":{"line":240,"column":99}},"100":{"start":{"line":242,"column":8},"end":{"line":242,"column":48}},"101":{"start":{"line":244,"column":6},"end":{"line":244,"column":18}},"102":{"start":{"line":248,"column":2},"end":{"line":248,"column":14}},"103":{"start":{"line":251,"column":0},"end":{"line":272,"column":2}},"104":{"start":{"line":252,"column":2},"end":{"line":252,"column":25}},"105":{"start":{"line":254,"column":2},"end":{"line":269,"column":4}},"106":{"start":{"line":255,"column":4},"end":{"line":255,"column":24}},"107":{"start":{"line":256,"column":4},"end":{"line":256,"column":26}},"108":{"start":{"line":257,"column":4},"end":{"line":257,"column":28}},"109":{"start":{"line":259,"column":4},"end":{"line":264,"column":5}},"110":{"start":{"line":260,"column":6},"end":{"line":263,"column":9}},"111":{"start":{"line":261,"column":8},"end":{"line":261,"column":57}},"112":{"start":{"line":262,"column":8},"end":{"line":262,"column":59}},"113":{"start":{"line":262,"column":28},"end":{"line":262,"column":59}},"114":{"start":{"line":266,"column":4},"end":{"line":266,"column":80}},"115":{"start":{"line":267,"column":4},"end":{"line":267,"column":68}},"116":{"start":{"line":267,"column":24},"end":{"line":267,"column":68}},"117":{"start":{"line":268,"column":4},"end":{"line":268,"column":54}},"118":{"start":{"line":271,"column":2},"end":{"line":271,"column":14}},"119":{"start":{"line":274,"column":0},"end":{"line":274,"column":24}},"120":{"start":{"line":275,"column":0},"end":{"line":275,"column":31}},"121":{"start":{"line":276,"column":0},"end":{"line":276,"column":32}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":22},"end":{"line":42,"column":51}},{"start":{"line":42,"column":55},"end":{"line":42,"column":89}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":9},"end":{"line":43,"column":9}},{"start":{"line":43,"column":9},"end":{"line":43,"column":9}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":27},"end":{"line":65,"column":75}},{"start":{"line":65,"column":79},"end":{"line":65,"column":94}}]},"8":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":30}},{"start":{"line":111,"column":34},"end":{"line":111,"column":41}}]},"9":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":25},"end":{"line":116,"column":73}},{"start":{"line":116,"column":77},"end":{"line":116,"column":92}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"11":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":59}},{"start":{"line":119,"column":63},"end":{"line":119,"column":93}}]},"12":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":28},"end":{"line":120,"column":49}},{"start":{"line":120,"column":54},"end":{"line":120,"column":95}}]},"13":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":73},"end":{"line":120,"column":83}},{"start":{"line":120,"column":86},"end":{"line":120,"column":95}}]},"14":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":28},"end":{"line":121,"column":49}},{"start":{"line":121,"column":53},"end":{"line":121,"column":62}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"17":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"18":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"19":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"20":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"21":{"line":184,"type":"cond-expr","locations":[{"start":{"line":185,"column":18},"end":{"line":185,"column":48}},{"start":{"line":186,"column":18},"end":{"line":186,"column":23}}]},"22":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"23":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":26},"end":{"line":217,"column":37}},{"start":{"line":217,"column":41},"end":{"line":217,"column":59}},{"start":{"line":217,"column":63},"end":{"line":219,"column":8}}]},"24":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]},"25":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":10},"end":{"line":221,"column":21}},{"start":{"line":221,"column":25},"end":{"line":221,"column":43}}]},"26":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":6}},{"start":{"line":230,"column":6},"end":{"line":230,"column":6}}]},"27":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":10},"end":{"line":230,"column":28}},{"start":{"line":230,"column":32},"end":{"line":230,"column":50}}]},"28":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":8}},{"start":{"line":231,"column":8},"end":{"line":231,"column":8}}]},"29":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":13},"end":{"line":256,"column":19}},{"start":{"line":256,"column":23},"end":{"line":256,"column":25}}]},"30":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":14},"end":{"line":257,"column":21}},{"start":{"line":257,"column":25},"end":{"line":257,"column":27}}]},"31":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"32":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":8}},{"start":{"line":262,"column":8},"end":{"line":262,"column":8}}]},"33":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , Helpers = require('./helpers')","  , _ = require('lodash')","  , Association = require('./base')","  , util = require('util');","","/**"," * One-to-one association"," *"," * In the API reference below, replace `Association` with the actual name of your association, e.g. for `User.hasOne(Project)` the getter will be `user.getProject()`."," * This is almost the same as `belongsTo` with one exception. The foreign key will be defined on the target model."," *"," * @mixin HasOne"," */","var HasOne = function(srcModel, targetModel, options) {","  Association.call(this);","","  this.associationType = 'HasOne';","  this.source = srcModel;","  this.target = targetModel;","  this.options = options;","  this.scope = options.scope;","  this.isSingleAssociation = true;","  this.isSelfAssociation = (this.source === this.target);","  this.as = this.options.as;","  this.foreignKeyAttribute = {};","","  if (this.as) {","    this.isAliased = true;","    this.options.name = {","      singular: this.as","    };","  } else {","    this.as = this.target.options.name.singular;","    this.options.name = this.target.options.name;","  }","","  if (_.isObject(this.options.foreignKey)) {","    this.foreignKeyAttribute = this.options.foreignKey;","    this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;","  } else if (this.options.foreignKey) {","    this.foreignKey = this.options.foreignKey;","  }","","  if (!this.foreignKey) {","    this.foreignKey = Utils.camelizeIf(","      [","        Utils.underscoredIf(Utils.singularize(this.source.name), this.target.options.underscored),","        this.source.primaryKeyAttribute","      ].join('_'),","      !this.source.options.underscored","    );","  }","","  this.sourceIdentifier = this.source.primaryKeyAttribute;","  this.sourceKey = this.source.primaryKeyAttribute;","  this.sourceKeyIsPrimary = this.sourceKey === this.source.primaryKeyAttribute;","","  this.associationAccessor = this.as;","  this.options.useHooks = options.useHooks;","","  if (this.target.rawAttributes[this.foreignKey]) {","    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","  }","","  // Get singular name, trying to uppercase the first letter, unless the model forbids it","  var singular = Utils.uppercaseFirst(this.options.name.singular);","","  this.accessors = {","    /**","     * Get the associated instance.","     *","     * @param {Object} [options]","     * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false","     * @param {String} [options.schema] Apply a schema on the related model","     * @return {Promise<Instance>}","     * @method getAssociation","     */","    get: 'get' + singular,","    /**","     * Set the associated model.","     *","     * @param {Instance|String|Number} [newAssociation] An persisted instance or the primary key of a persisted instance to associate with this. Pass `null` or `undefined` to remove the association.","     * @param {Object} [options] Options passed to getAssociation and `target.save`","     * @return {Promise}","     * @method setAssociation","     */","    set: 'set' + singular,","    /**","     * Create a new instance of the associated model and associate it with this.","     *","     * @param {Object} [values]","     * @param {Object} [options] Options passed to `target.create` and setAssociation.","     * @return {Promise}","     * @method createAssociation","     */","    create: 'create' + singular","  };","};","","util.inherits(HasOne, Association);","","// the id is in the target table","HasOne.prototype.injectAttributes = function() {","  var newAttributes = {}","    , keyType = this.source.rawAttributes[this.source.primaryKeyAttribute].type;","","  newAttributes[this.foreignKey] = _.defaults({}, this.foreignKeyAttribute, {","    type: this.options.keyType || keyType,","    allowNull : true","  });","  Utils.mergeDefaults(this.target.rawAttributes, newAttributes);","","  this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;","","  if (this.options.constraints !== false) {","    var target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];","    this.options.onDelete = this.options.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');","    this.options.onUpdate = this.options.onUpdate || 'CASCADE';","  }","","  Helpers.addForeignKeyConstraints(this.target.rawAttributes[this.foreignKey], this.source, this.target, this.options);","","  // Sync attributes and setters/getters to Model prototype","  this.target.refreshAttributes();","","  Helpers.checkNamingCollision(this);","","  return this;","};","","HasOne.prototype.mixin = function(obj) {","  var association = this;","","  obj[this.accessors.get] = function(options) {","    return association.get(this, options);","  };","","  association.injectSetter(obj);","  association.injectCreator(obj);","};","","HasOne.prototype.get = function(instances, options) {","  var association = this","    , Target = association.target","    , instance","    , where = {};","","  options = Utils.cloneDeep(options);","","  if (options.hasOwnProperty('scope')) {","    if (!options.scope) {","      Target = Target.unscoped();","    } else {","      Target = Target.scope(options.scope);","    }","  }","","  if (options.hasOwnProperty('schema')) {","    Target = Target.schema(options.schema, options.schemaDelimiter);","  }","","  if (!Array.isArray(instances)) {","    instance = instances;","    instances = undefined;","  }","","  if (instances) {","    where[association.foreignKey] = {","      $in: instances.map(function (instance) {","        return instance.get(association.sourceKey);","      })","    };","  } else {","    where[association.foreignKey] = instance.get(association.sourceKey);","  }","","  if (association.scope) {","    _.assign(where, association.scope);","  }","","  options.where = options.where ?","                  {$and: [where, options.where]} :","                  where;","","  if (instances) {","    return Target.findAll(options).then(function (results) {","      var result = {};","      instances.forEach(function (instance) {","        result[instance.get(association.sourceKey, {raw: true})] = null;","      });","","      results.forEach(function (instance) {","        result[instance.get(association.foreignKey, {raw: true})] = instance;","      });","","      return result;","    });","  }","  return Target.findOne(options);","};","","HasOne.prototype.injectSetter = function(instancePrototype) {","  var association = this;","","  instancePrototype[this.accessors.set] = function(associatedInstance, options) {","    var instance = this,","      alreadyAssociated;","","    options = _.assign({}, options, {","      scope: false","    });","    return instance[association.accessors.get](options).then(function(oldInstance) {","      // TODO Use equals method once #5605 is resolved","      alreadyAssociated = oldInstance && associatedInstance && _.every(association.target.primaryKeyAttributes, function(attribute) {","        return oldInstance.get(attribute, {raw: true}) === associatedInstance.get(attribute, {raw: true});","      });","","      if (oldInstance && !alreadyAssociated) {","        oldInstance[association.foreignKey] = null;","        return oldInstance.save(_.extend({}, options, {","          fields: [association.foreignKey],","          allowNull: [association.foreignKey],","          association: true","        }));","      }","    }).then(function() {","      if (associatedInstance && !alreadyAssociated) {","        if (!(associatedInstance instanceof association.target.Instance)) {","          var tmpInstance = {};","          tmpInstance[association.target.primaryKeyAttribute] = associatedInstance;","          associatedInstance = association.target.build(tmpInstance, {","            isNewRecord: false","          });","        }","","        _.assign(associatedInstance, association.scope);","        associatedInstance.set(association.foreignKey, instance.get(association.sourceIdentifier));","","        return associatedInstance.save(options);","      }","      return null;","    });","  };","","  return this;","};","","HasOne.prototype.injectCreator = function(instancePrototype) {","  var association = this;","","  instancePrototype[this.accessors.create] = function(values, options) {","    var instance = this;","    values = values || {};","    options = options || {};","","    if (association.scope) {","      Object.keys(association.scope).forEach(function (attribute) {","        values[attribute] = association.scope[attribute];","        if (options.fields) options.fields.push(attribute);","      });","    }","","    values[association.foreignKey] = instance.get(association.sourceIdentifier);","    if (options.fields) options.fields.push(association.foreignKey);","    return association.target.create(values, options);","  };","","  return this;","};","","module.exports = HasOne;","module.exports.HasOne = HasOne;","module.exports.default = HasOne;",""],"l":{"3":1,"17":1,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"36":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"48":0,"57":0,"58":0,"59":0,"61":0,"62":0,"64":0,"65":0,"69":0,"71":0,"103":1,"106":1,"107":0,"110":0,"114":0,"116":0,"118":0,"119":0,"120":0,"121":0,"124":0,"127":0,"129":0,"131":0,"134":1,"135":0,"137":0,"138":0,"141":0,"142":0,"145":1,"146":0,"151":0,"153":0,"154":0,"155":0,"157":0,"161":0,"162":0,"165":0,"166":0,"167":0,"170":0,"171":0,"173":0,"177":0,"180":0,"181":0,"184":0,"188":0,"189":0,"190":0,"191":0,"192":0,"195":0,"196":0,"199":0,"202":0,"205":1,"206":0,"208":0,"209":0,"212":0,"215":0,"217":0,"218":0,"221":0,"222":0,"223":0,"230":0,"231":0,"232":0,"233":0,"234":0,"239":0,"240":0,"242":0,"244":0,"248":0,"251":1,"252":0,"254":0,"255":0,"256":0,"257":0,"259":0,"260":0,"261":0,"262":0,"266":0,"267":0,"268":0,"271":0,"274":1,"275":1,"276":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/instance-validator.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/instance-validator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":1,"128":1,"129":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0,0,0],"37":[0,0],"38":[0,0,0,0],"39":[0,0],"40":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"InstanceValidator","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":39},"end":{"line":60,"column":50}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":8},"end":{"line":70,"column":26}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":11},"end":{"line":72,"column":22}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":43},"end":{"line":90,"column":54}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":100},"end":{"line":92,"column":111}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":32},"end":{"line":93,"column":48}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":115},"end":{"line":95,"column":134}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":10},"end":{"line":100,"column":21}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":49},"end":{"line":111,"column":60}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":50},"end":{"line":116,"column":80}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":48},"end":{"line":142,"column":59}}},"13":{"name":"(anonymous_13)","line":145,"loc":{"start":{"line":145,"column":58},"end":{"line":145,"column":93}}},"14":{"name":"(anonymous_14)","line":152,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":24}}},"15":{"name":"(anonymous_15)","line":170,"loc":{"start":{"line":170,"column":51},"end":{"line":170,"column":74}}},"16":{"name":"(anonymous_16)","line":179,"loc":{"start":{"line":179,"column":54},"end":{"line":180,"column":19}}},"17":{"name":"(anonymous_17)","line":200,"loc":{"start":{"line":200,"column":27},"end":{"line":200,"column":38}}},"18":{"name":"(anonymous_18)","line":217,"loc":{"start":{"line":217,"column":68},"end":{"line":217,"column":139}}},"19":{"name":"(anonymous_19)","line":257,"loc":{"start":{"line":257,"column":69},"end":{"line":257,"column":113}}},"20":{"name":"(anonymous_20)","line":280,"loc":{"start":{"line":280,"column":52},"end":{"line":280,"column":89}}},"21":{"name":"(anonymous_21)","line":306,"loc":{"start":{"line":306,"column":46},"end":{"line":306,"column":83}}},"22":{"name":"(anonymous_22)","line":332,"loc":{"start":{"line":332,"column":53},"end":{"line":332,"column":89}}},"23":{"name":"(anonymous_23)","line":334,"loc":{"start":{"line":334,"column":29},"end":{"line":334,"column":57}}},"24":{"name":"(anonymous_24)","line":350,"loc":{"start":{"line":350,"column":41},"end":{"line":350,"column":81}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":26}},"2":{"start":{"line":18,"column":0},"end":{"line":50,"column":1}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":35}},"4":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":99}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":37}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"9":{"start":{"line":44,"column":2},"end":{"line":44,"column":19}},"10":{"start":{"line":47,"column":2},"end":{"line":47,"column":26}},"11":{"start":{"line":49,"column":2},"end":{"line":49,"column":40}},"12":{"start":{"line":53,"column":0},"end":{"line":53,"column":41}},"13":{"start":{"line":60,"column":0},"end":{"line":79,"column":2}},"14":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":56}},"16":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"17":{"start":{"line":66,"column":2},"end":{"line":66,"column":18}},"18":{"start":{"line":67,"column":2},"end":{"line":78,"column":5}},"19":{"start":{"line":71,"column":4},"end":{"line":71,"column":29}},"20":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"21":{"start":{"line":74,"column":6},"end":{"line":74,"column":67}},"22":{"start":{"line":76,"column":6},"end":{"line":76,"column":18}},"23":{"start":{"line":90,"column":0},"end":{"line":103,"column":2}},"24":{"start":{"line":91,"column":2},"end":{"line":91,"column":18}},"25":{"start":{"line":92,"column":2},"end":{"line":102,"column":32}},"26":{"start":{"line":93,"column":4},"end":{"line":99,"column":7}},"27":{"start":{"line":94,"column":6},"end":{"line":98,"column":7}},"28":{"start":{"line":95,"column":8},"end":{"line":97,"column":11}},"29":{"start":{"line":96,"column":10},"end":{"line":96,"column":34}},"30":{"start":{"line":101,"column":4},"end":{"line":101,"column":96}},"31":{"start":{"line":111,"column":0},"end":{"line":134,"column":2}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":18}},"33":{"start":{"line":115,"column":2},"end":{"line":115,"column":22}},"34":{"start":{"line":116,"column":2},"end":{"line":131,"column":5}},"35":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"36":{"start":{"line":118,"column":6},"end":{"line":118,"column":13}},"37":{"start":{"line":121,"column":4},"end":{"line":121,"column":53}},"38":{"start":{"line":123,"column":4},"end":{"line":126,"column":5}},"39":{"start":{"line":125,"column":6},"end":{"line":125,"column":55}},"40":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"41":{"start":{"line":129,"column":6},"end":{"line":129,"column":84}},"42":{"start":{"line":133,"column":2},"end":{"line":133,"column":33}},"43":{"start":{"line":142,"column":0},"end":{"line":159,"column":2}},"44":{"start":{"line":143,"column":2},"end":{"line":143,"column":22}},"45":{"start":{"line":144,"column":2},"end":{"line":144,"column":18}},"46":{"start":{"line":145,"column":2},"end":{"line":156,"column":5}},"47":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"48":{"start":{"line":147,"column":6},"end":{"line":147,"column":13}},"49":{"start":{"line":150,"column":4},"end":{"line":153,"column":17}},"50":{"start":{"line":155,"column":4},"end":{"line":155,"column":29}},"51":{"start":{"line":158,"column":2},"end":{"line":158,"column":33}},"52":{"start":{"line":170,"column":0},"end":{"line":205,"column":2}},"53":{"start":{"line":171,"column":2},"end":{"line":171,"column":18}},"54":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"55":{"start":{"line":174,"column":4},"end":{"line":174,"column":29}},"56":{"start":{"line":178,"column":2},"end":{"line":178,"column":22}},"57":{"start":{"line":179,"column":2},"end":{"line":202,"column":5}},"58":{"start":{"line":182,"column":4},"end":{"line":191,"column":5}},"59":{"start":{"line":184,"column":6},"end":{"line":190,"column":7}},"60":{"start":{"line":185,"column":8},"end":{"line":187,"column":10}},"61":{"start":{"line":188,"column":13},"end":{"line":190,"column":7}},"62":{"start":{"line":189,"column":8},"end":{"line":189,"column":18}},"63":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"64":{"start":{"line":195,"column":6},"end":{"line":195,"column":109}},"65":{"start":{"line":198,"column":4},"end":{"line":198,"column":91}},"66":{"start":{"line":200,"column":4},"end":{"line":200,"column":42}},"67":{"start":{"line":201,"column":4},"end":{"line":201,"column":48}},"68":{"start":{"line":204,"column":2},"end":{"line":204,"column":85}},"69":{"start":{"line":217,"column":0},"end":{"line":245,"column":3}},"70":{"start":{"line":218,"column":2},"end":{"line":218,"column":31}},"71":{"start":{"line":219,"column":2},"end":{"line":219,"column":22}},"72":{"start":{"line":221,"column":2},"end":{"line":221,"column":40}},"73":{"start":{"line":223,"column":2},"end":{"line":223,"column":21}},"74":{"start":{"line":224,"column":2},"end":{"line":224,"column":31}},"75":{"start":{"line":225,"column":2},"end":{"line":225,"column":17}},"76":{"start":{"line":226,"column":2},"end":{"line":230,"column":3}},"77":{"start":{"line":227,"column":4},"end":{"line":227,"column":19}},"78":{"start":{"line":228,"column":4},"end":{"line":228,"column":26}},"79":{"start":{"line":229,"column":4},"end":{"line":229,"column":24}},"80":{"start":{"line":231,"column":2},"end":{"line":233,"column":3}},"81":{"start":{"line":232,"column":4},"end":{"line":232,"column":19}},"82":{"start":{"line":235,"column":2},"end":{"line":244,"column":3}},"83":{"start":{"line":236,"column":4},"end":{"line":240,"column":5}},"84":{"start":{"line":237,"column":6},"end":{"line":237,"column":92}},"85":{"start":{"line":239,"column":6},"end":{"line":239,"column":80}},"86":{"start":{"line":241,"column":4},"end":{"line":241,"column":82}},"87":{"start":{"line":243,"column":4},"end":{"line":243,"column":122}},"88":{"start":{"line":257,"column":0},"end":{"line":270,"column":3}},"89":{"start":{"line":258,"column":2},"end":{"line":258,"column":18}},"90":{"start":{"line":260,"column":2},"end":{"line":260,"column":34}},"91":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"92":{"start":{"line":263,"column":4},"end":{"line":263,"column":68}},"93":{"start":{"line":265,"column":2},"end":{"line":265,"column":77}},"94":{"start":{"line":266,"column":2},"end":{"line":269,"column":3}},"95":{"start":{"line":268,"column":4},"end":{"line":268,"column":75}},"96":{"start":{"line":280,"column":0},"end":{"line":296,"column":2}},"97":{"start":{"line":281,"column":2},"end":{"line":281,"column":40}},"98":{"start":{"line":282,"column":2},"end":{"line":282,"column":172}},"99":{"start":{"line":284,"column":2},"end":{"line":294,"column":3}},"100":{"start":{"line":285,"column":4},"end":{"line":291,"column":5}},"101":{"start":{"line":286,"column":6},"end":{"line":286,"column":45}},"102":{"start":{"line":287,"column":11},"end":{"line":291,"column":5}},"103":{"start":{"line":288,"column":6},"end":{"line":288,"column":25}},"104":{"start":{"line":290,"column":6},"end":{"line":290,"column":38}},"105":{"start":{"line":293,"column":4},"end":{"line":293,"column":43}},"106":{"start":{"line":295,"column":2},"end":{"line":295,"column":23}},"107":{"start":{"line":306,"column":0},"end":{"line":320,"column":2}},"108":{"start":{"line":307,"column":2},"end":{"line":307,"column":12}},"109":{"start":{"line":309,"column":2},"end":{"line":312,"column":3}},"110":{"start":{"line":310,"column":4},"end":{"line":310,"column":113}},"111":{"start":{"line":311,"column":4},"end":{"line":311,"column":28}},"112":{"start":{"line":314,"column":2},"end":{"line":319,"column":3}},"113":{"start":{"line":315,"column":4},"end":{"line":318,"column":5}},"114":{"start":{"line":316,"column":6},"end":{"line":316,"column":131}},"115":{"start":{"line":317,"column":6},"end":{"line":317,"column":30}},"116":{"start":{"line":332,"column":0},"end":{"line":340,"column":2}},"117":{"start":{"line":333,"column":2},"end":{"line":333,"column":18}},"118":{"start":{"line":334,"column":2},"end":{"line":339,"column":5}},"119":{"start":{"line":335,"column":4},"end":{"line":338,"column":5}},"120":{"start":{"line":336,"column":6},"end":{"line":336,"column":48}},"121":{"start":{"line":337,"column":6},"end":{"line":337,"column":46}},"122":{"start":{"line":350,"column":0},"end":{"line":356,"column":2}},"123":{"start":{"line":351,"column":2},"end":{"line":351,"column":67}},"124":{"start":{"line":352,"column":2},"end":{"line":352,"column":102}},"125":{"start":{"line":353,"column":2},"end":{"line":353,"column":51}},"126":{"start":{"line":355,"column":2},"end":{"line":355,"column":26}},"127":{"start":{"line":358,"column":0},"end":{"line":358,"column":35}},"128":{"start":{"line":359,"column":0},"end":{"line":359,"column":53}},"129":{"start":{"line":360,"column":0},"end":{"line":360,"column":43}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":34}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":37}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]},"7":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":24}},{"start":{"line":96,"column":28},"end":{"line":96,"column":33}}]},"8":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"10":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":36}},{"start":{"line":123,"column":40},"end":{"line":123,"column":67}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"12":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"13":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"14":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":20}},{"start":{"line":173,"column":24},"end":{"line":173,"column":52}}]},"15":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"16":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"17":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":10},"end":{"line":184,"column":34}},{"start":{"line":184,"column":38},"end":{"line":184,"column":51}},{"start":{"line":184,"column":55},"end":{"line":184,"column":63}}]},"18":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":13},"end":{"line":188,"column":13}},{"start":{"line":188,"column":13},"end":{"line":188,"column":13}}]},"19":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"20":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"21":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"22":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"23":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"24":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"25":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"26":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":20},"end":{"line":268,"column":28}},{"start":{"line":268,"column":32},"end":{"line":268,"column":73}}]},"27":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":22},"end":{"line":281,"column":31}},{"start":{"line":281,"column":35},"end":{"line":281,"column":39}}]},"28":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":29},"end":{"line":282,"column":63}},{"start":{"line":282,"column":68},"end":{"line":282,"column":95}},{"start":{"line":282,"column":99},"end":{"line":282,"column":133}},{"start":{"line":282,"column":137},"end":{"line":282,"column":170}}]},"29":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"30":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"31":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":11},"end":{"line":287,"column":11}},{"start":{"line":287,"column":11},"end":{"line":287,"column":11}}]},"32":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":15},"end":{"line":287,"column":35}},{"start":{"line":287,"column":39},"end":{"line":287,"column":63}}]},"33":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"34":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":38}},{"start":{"line":309,"column":44},"end":{"line":309,"column":58}},{"start":{"line":309,"column":64},"end":{"line":309,"column":83}}]},"35":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"36":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":6},"end":{"line":314,"column":44}},{"start":{"line":314,"column":48},"end":{"line":314,"column":93}},{"start":{"line":314,"column":97},"end":{"line":314,"column":133}},{"start":{"line":314,"column":137},"end":{"line":314,"column":180}}]},"37":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"38":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":8},"end":{"line":315,"column":28}},{"start":{"line":315,"column":33},"end":{"line":315,"column":50}},{"start":{"line":315,"column":54},"end":{"line":315,"column":79}},{"start":{"line":315,"column":84},"end":{"line":315,"column":107}}]},"39":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":335,"column":4}},{"start":{"line":335,"column":4},"end":{"line":335,"column":4}}]},"40":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":16},"end":{"line":351,"column":32}},{"start":{"line":351,"column":36},"end":{"line":351,"column":44}},{"start":{"line":351,"column":48},"end":{"line":351,"column":66}}]}},"code":["'use strict';","","var validator = require('./utils/validator-extras').validator","  , extendModelValidations = require('./utils/validator-extras').extendModelValidations","  , Utils = require('./utils')","  , sequelizeError = require('./errors')","  , Promise = require('./promise')","  , DataTypes = require('./data-types')","  , _ = require('lodash');","","/**"," * The Main Instance Validator."," *"," * @param {Instance} modelInstance The model instance."," * @param {Object} options A dict with options."," * @constructor"," */","function InstanceValidator(modelInstance, options) {","  options = _.clone(options) || {};","","  if (options.fields && !options.skip) {","    options.skip = Utils._.difference(Object.keys(modelInstance.Model.attributes), options.fields);","  }","","  // assign defined and default options","  this.options = Utils._.defaults(options, {","    skip: []","  });","","  this.modelInstance = modelInstance;","","  /**","   * Exposes a reference to validator.js. This allows you to add custom validations using `validator.extend`","   * @name validator","   */","  this.validator = validator;","","  /**","   *  All errors will be stored here from the validations.","   *","   * @type {Array} Will contain keys that correspond to attributes which will","   *   be Arrays of Errors.","   */","  this.errors = [];","","  /** @type {boolean} Indicates if validations are in progress */","  this.inProgress = false;","","  extendModelValidations(modelInstance);","}","","/** @define {string} The error key for arguments as passed by custom validators */","InstanceValidator.RAW_KEY_NAME = '__raw';","","/**"," * The main entry point for the Validation module, invoke to start the dance."," *"," * @return {Promise}"," */","InstanceValidator.prototype.validate = function() {","  if (this.inProgress) {","    throw new Error('Validations already in progress.');","  }","  this.inProgress = true;","","  var self = this;","  return Promise.all([","    self._builtinValidators(),","    self._customValidators()","  ].map(function(promise) {","    return promise.reflect();","  })).then(function() {","    if (self.errors.length) {","      return new sequelizeError.ValidationError(null, self.errors);","    } else {","      return null;","    }","  });","};","","/**"," * Invoke the Validation sequence:"," *   - Before Validation Model Hooks"," *   - Validation"," *   - On validation success: After Validation Model Hooks"," *   - On validation failure: Validation Failed Model Hooks"," *"," * @return {Promise}"," */","InstanceValidator.prototype.hookValidate = function() {","  var self = this;","  return self.modelInstance.Model.runHooks('beforeValidate', self.modelInstance, self.options).then(function() {","    return self.validate().then(function(error) {","      if (error) {","        return self.modelInstance.Model.runHooks('validationFailed', self.modelInstance, self.options, error).then(function(newError) {","          throw newError || error;","        });","      }","    });","  }).then(function() {","    return self.modelInstance.Model.runHooks('afterValidate', self.modelInstance, self.options);","  }).return(self.modelInstance);","};","","/**"," * Will run all the built-in validators."," *"," * @return {Promise(Array.<Promise.PromiseInspection>)} A promise from .reflect()."," * @private"," */","InstanceValidator.prototype._builtinValidators = function() {","  var self = this;","","  // promisify all attribute invocations","  var validators = [];","  Utils._.forIn(this.modelInstance.rawAttributes, function(rawAttribute, field) {","    if (self.options.skip.indexOf(field) >= 0) {","      return;","    }","","    var value = self.modelInstance.dataValues[field];","","    if (!rawAttribute._autoGenerated && !rawAttribute.autoIncrement) {","      // perform validations based on schema","      self._validateSchema(rawAttribute, field, value);","    }","","    if (self.modelInstance.validators.hasOwnProperty(field)) {","      validators.push(self._builtinAttrValidate.call(self, value, field).reflect());","    }","  });","","  return Promise.all(validators);","};","","/**"," * Will run all the custom validators."," *"," * @return {Promise(Array.<Promise.PromiseInspection>)} A promise from .reflect()."," * @private"," */","InstanceValidator.prototype._customValidators = function() {","  var validators = [];","  var self = this;","  Utils._.each(this.modelInstance.$modelOptions.validate, function(validator, validatorType) {","    if (self.options.skip.indexOf(validatorType) >= 0) {","      return;","    }","","    var valprom = self._invokeCustomValidator(validator, validatorType)","      // errors are handled in settling, stub this","      .catch(function() {})","      .reflect();","","    validators.push(valprom);","  });","","  return Promise.all(validators);","};","","/**"," * Validate a single attribute with all the defined built-in validators."," *"," * @param {*} value Anything."," * @param {string} field The field name."," * @return {Promise} A promise, will always resolve,"," *   auto populates error on this.error local object."," * @private"," */","InstanceValidator.prototype._builtinAttrValidate = function(value, field) {","  var self = this;","  // check if value is null (if null not allowed the Schema pass will capture it)","  if (value === null || typeof value === 'undefined') {","    return Promise.resolve();","  }","","  // Promisify each validator","  var validators = [];","  Utils._.forIn(this.modelInstance.validators[field], function(test,","    validatorType) {","","    if (['isUrl', 'isURL', 'isEmail'].indexOf(validatorType) !== -1) {","      // Preserve backwards compat. Validator.js now expects the second param to isURL and isEmail to be an object","      if (typeof test === 'object' && test !== null && test.msg) {","        test = {","          msg: test.msg","        };","      } else if (test === true) {","        test = {};","      }","    }","","    // Check for custom validator.","    if (typeof test === 'function') {","      return validators.push(self._invokeCustomValidator(test, validatorType, true, value, field).reflect());","    }","","    var validatorPromise = self._invokeBuiltinValidator(value, test, validatorType, field);","    // errors are handled in settling, stub this","    validatorPromise.catch(function() {});","    validators.push(validatorPromise.reflect());","  });","","  return Promise.all(validators).then(this._handleReflectedResult.bind(this, field));","};","","/**"," * Prepare and invoke a custom validator."," *"," * @param {Function} validator The custom validator."," * @param {string} validatorType the custom validator type (name)."," * @param {boolean=} optAttrDefined Set to true if custom validator was defined"," *   from the Attribute"," * @return {Promise} A promise."," * @private"," */","InstanceValidator.prototype._invokeCustomValidator = Promise.method(function(validator, validatorType, optAttrDefined, optValue, optField) {","  var validatorFunction = null;  // the validation function to call","  var isAsync = false;","","  var validatorArity = validator.length;","  // check if validator is async and requires a callback","  var asyncArity = 1;","  var errorKey = validatorType;","  var invokeArgs;","  if (optAttrDefined) {","    asyncArity = 2;","    invokeArgs = optValue;","    errorKey = optField;","  }","  if (validatorArity === asyncArity) {","    isAsync = true;","  }","","  if (isAsync) {","    if (optAttrDefined) {","      validatorFunction = Promise.promisify(validator.bind(this.modelInstance, invokeArgs));","    } else {","      validatorFunction = Promise.promisify(validator.bind(this.modelInstance));","    }","    return validatorFunction().catch(this._pushError.bind(this, false, errorKey));","  } else {","    return Promise.try(validator.bind(this.modelInstance, invokeArgs)).catch(this._pushError.bind(this, false, errorKey));","  }","});","","/**"," * Prepare and invoke a build-in validator."," *"," * @param {*} value Anything."," * @param {*} test The test case."," * @param {string} validatorType One of known to Sequelize validators."," * @param {string} field The field that is being validated"," * @return {Object} An object with specific keys to invoke the validator."," * @private"," */","InstanceValidator.prototype._invokeBuiltinValidator = Promise.method(function(value, test, validatorType, field) {","  var self = this;","  // Cast value as string to pass new Validator.js string requirement","  var valueString = String(value);","  // check if Validator knows that kind of validation test","  if (typeof validator[validatorType] !== 'function') {","    throw new Error('Invalid validator function: ' + validatorType);","  }","  var validatorArgs = self._extractValidatorArgs(test, validatorType, field);","  if (!validator[validatorType].apply(validator, [valueString].concat(validatorArgs))) {","  // extract the error msg","    throw new Error(test.msg || 'Validation ' + validatorType + ' failed');","  }","});","","/**"," * Will extract arguments for the validator."," *"," * @param {*} test The test case."," * @param {string} validatorType One of known to Sequelize validators."," * @param {string} field The field that is being validated."," * @private"," */","InstanceValidator.prototype._extractValidatorArgs = function(test, validatorType, field) {","  var validatorArgs = test.args || test;","  var isLocalizedValidator = typeof(validatorArgs) !== 'string' && (validatorType === 'isAlpha' || validatorType === 'isAlphanumeric' || validatorType === 'isMobilePhone');","","  if (!Array.isArray(validatorArgs)) {","    if (validatorType === 'isImmutable') {","      validatorArgs = [validatorArgs, field];","    } else if (isLocalizedValidator || validatorType === 'isIP') {","      validatorArgs = [];","    } else {","      validatorArgs = [validatorArgs];","    }","  } else {","    validatorArgs = validatorArgs.slice(0);","  }","  return validatorArgs;","};","","/**"," * Will validate a single field against its schema definition (isnull)."," *"," * @param {Object} rawAttribute As defined in the Schema."," * @param {string} field The field name."," * @param {*} value anything."," * @private"," */","InstanceValidator.prototype._validateSchema = function(rawAttribute, field, value) {","  var error;","","  if (rawAttribute.allowNull === false && ((value === null) || (value === undefined))) {","    error = new sequelizeError.ValidationErrorItem(field + ' cannot be null', 'notNull Violation', field, value);","    this.errors.push(error);","  }","","  if (rawAttribute.type === DataTypes.STRING || rawAttribute.type instanceof DataTypes.STRING || rawAttribute.type === DataTypes.TEXT || rawAttribute.type instanceof DataTypes.TEXT) {","    if (Array.isArray(value) || (_.isObject(value) && !value._isSequelizeMethod) && !Buffer.isBuffer(value)) {","      error = new sequelizeError.ValidationErrorItem(field + ' cannot be an array or an object', 'string violation', field, value);","      this.errors.push(error);","    }","  }","};","","","/**"," * Handles the returned result of a Promise.reflect."," *"," * If errors are found it populates this.error."," *"," * @param {string} field The attribute name."," * @param {Array.<Promise.PromiseInspection>} Promise inspection objects."," * @private"," */","InstanceValidator.prototype._handleReflectedResult = function(field, promiseInspections) {","  var self = this;","  promiseInspections.forEach(function(promiseInspection) {","    if (promiseInspection.isRejected()) {","      var rejection = promiseInspection.error();","      self._pushError(true, field, rejection);","    }","  });","};","","/**"," * Signs all errors retaining the original."," *"," * @param {boolean} isBuiltin Determines if error is from builtin validator."," * @param {string} errorKey The error key to assign on this.errors object."," * @param {Error|string} rawError The original error."," * @private"," */","InstanceValidator.prototype._pushError = function(isBuiltin, errorKey, rawError) {","  var message = rawError.message || rawError || 'Validation error';","  var error = new sequelizeError.ValidationErrorItem(message, 'Validation error', errorKey, rawError);","  error[InstanceValidator.RAW_KEY_NAME] = rawError;","","  this.errors.push(error);","};","","module.exports = InstanceValidator;","module.exports.InstanceValidator = InstanceValidator;","module.exports.default = InstanceValidator;",""],"l":{"3":1,"18":1,"19":0,"21":0,"22":0,"26":0,"30":0,"36":0,"44":0,"47":0,"49":0,"53":1,"60":1,"61":0,"62":0,"64":0,"66":0,"67":0,"71":0,"73":0,"74":0,"76":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"101":0,"111":1,"112":0,"115":0,"116":0,"117":0,"118":0,"121":0,"123":0,"125":0,"128":0,"129":0,"133":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"150":0,"155":0,"158":0,"170":1,"171":0,"173":0,"174":0,"178":0,"179":0,"182":0,"184":0,"185":0,"188":0,"189":0,"194":0,"195":0,"198":0,"200":0,"201":0,"204":0,"217":1,"218":0,"219":0,"221":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"231":0,"232":0,"235":0,"236":0,"237":0,"239":0,"241":0,"243":0,"257":1,"258":0,"260":0,"262":0,"263":0,"265":0,"266":0,"268":0,"280":1,"281":0,"282":0,"284":0,"285":0,"286":0,"287":0,"288":0,"290":0,"293":0,"295":0,"306":1,"307":0,"309":0,"310":0,"311":0,"314":0,"315":0,"316":0,"317":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"350":1,"351":0,"352":0,"353":0,"355":0,"358":1,"359":1,"360":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils/validator-extras.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/utils/validator-extras.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":16,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":16},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":10},"end":{"line":7,"column":29}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":26}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":31}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":9},"end":{"line":18,"column":23}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":24}}},"6":{"name":"(anonymous_6)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":24}}},"7":{"name":"(anonymous_7)","line":27,"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":31}}},"8":{"name":"(anonymous_8)","line":30,"loc":{"start":{"line":30,"column":9},"end":{"line":30,"column":43}}},"9":{"name":"(anonymous_9)","line":37,"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":46}}},"10":{"name":"(anonymous_10)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":27}}},"11":{"name":"(anonymous_11)","line":43,"loc":{"start":{"line":43,"column":7},"end":{"line":43,"column":26}}},"12":{"name":"(anonymous_12)","line":47,"loc":{"start":{"line":47,"column":7},"end":{"line":47,"column":26}}},"13":{"name":"(anonymous_13)","line":51,"loc":{"start":{"line":51,"column":7},"end":{"line":51,"column":41}}},"14":{"name":"(anonymous_14)","line":54,"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":32}}},"15":{"name":"(anonymous_15)","line":57,"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":35}}},"16":{"name":"(anonymous_16)","line":60,"loc":{"start":{"line":60,"column":6},"end":{"line":60,"column":40}}},"17":{"name":"(anonymous_17)","line":64,"loc":{"start":{"line":64,"column":29},"end":{"line":64,"column":53}}},"18":{"name":"(anonymous_18)","line":66,"loc":{"start":{"line":66,"column":21},"end":{"line":66,"column":49}}},"19":{"name":"(anonymous_19)","line":71,"loc":{"start":{"line":71,"column":24},"end":{"line":71,"column":46}}},"20":{"name":"(anonymous_20)","line":77,"loc":{"start":{"line":77,"column":20},"end":{"line":77,"column":31}}},"21":{"name":"(anonymous_21)","line":82,"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":63,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":40}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":35}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},"12":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":47}},"14":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":48}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":97}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":33}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":33}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":42}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":50}},"22":{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":37}},"24":{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},"25":{"start":{"line":64,"column":0},"end":{"line":74,"column":2}},"26":{"start":{"line":65,"column":2},"end":{"line":69,"column":8}},"27":{"start":{"line":67,"column":10},"end":{"line":67,"column":125}},"28":{"start":{"line":71,"column":2},"end":{"line":73,"column":5}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"30":{"start":{"line":77,"column":0},"end":{"line":79,"column":2}},"31":{"start":{"line":78,"column":2},"end":{"line":78,"column":107}},"32":{"start":{"line":82,"column":0},"end":{"line":84,"column":3}},"33":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"34":{"start":{"line":86,"column":0},"end":{"line":90,"column":2}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":96}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":24}},{"start":{"line":45,"column":28},"end":{"line":45,"column":41}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":11},"end":{"line":49,"column":24}},{"start":{"line":49,"column":28},"end":{"line":49,"column":41}}]},"5":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":11},"end":{"line":55,"column":33}},{"start":{"line":55,"column":37},"end":{"line":55,"column":43}}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":18},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":123}}]}},"code":["'use strict';","","var validator = require('validator')","  , _ = require('lodash');","","var extensions = {","  extend: function(name, fn) {","    this[name] = fn;","","    return this;","  },","  notEmpty: function(str) {","    return !str.match(/^[\\s\\t\\r\\n]*$/);","  },","  len: function(str, min, max) {","    return this.isLength(str, min, max);","  },","  isUrl: function(str) {","    return this.isURL(str);","  },","  isIPv6: function(str) {","    return this.isIP(str, 6);","  },","  isIPv4: function(str) {","    return this.isIP(str, 4);","  },","  notIn: function(str, values) {","    return !this.isIn(str, values);","  },","  regex: function(str, pattern, modifiers) {","    str += '';","    if (Object.prototype.toString.call(pattern).slice(8, -1) !== 'RegExp') {","      pattern = new RegExp(pattern, modifiers);","    }","    return str.match(pattern);","  },","  notRegex: function(str, pattern, modifiers) {","    return !this.regex(str, pattern, modifiers);","  },","  isDecimal: function(str) {","    return str !== '' && str.match(/^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/);","  },","  min: function(str, val) {","    var number = parseFloat(str);","    return isNaN(number) || number >= val;","  },","  max: function(str, val) {","    var number = parseFloat(str);","    return isNaN(number) || number <= val;","  },","  not: function(str, pattern, modifiers) {","    return this.notRegex(str, pattern, modifiers);","  },","  contains: function(str, elem) {","    return str.indexOf(elem) >= 0 && !!elem;","  },","  notContains: function(str, elem) {","    return !this.contains(str, elem);","  },","  is: function(str, pattern, modifiers) {","    return this.regex(str, pattern, modifiers);","  },","};","var extendModelValidations = function(modelInstance) {","  var extensions = {","        isImmutable: function(str, param, field) {","          return (modelInstance.isNewRecord || modelInstance.dataValues[field] === modelInstance._previousDataValues[field]);","        },","      };","","  _.forEach(extensions, function(extend, key) {","    validator[key] = extend;","  });","};","","// Deprecate this.","validator.notNull = function() {","  throw new Error('Warning \"notNull\" validation has been deprecated in favor of Schema based \"allowNull\"');","};","","// https://github.com/chriso/validator.js/blob/1.5.0/lib/validators.js","_.forEach(extensions, function(extend, key) {","  validator[key] = extend;","});","","module.exports = {","  extensions: extensions,","  extendModelValidations: extendModelValidations,","  validator: validator,","};",""],"l":{"3":1,"6":1,"8":0,"10":0,"13":0,"16":0,"19":0,"22":0,"25":0,"28":0,"31":0,"32":0,"33":0,"35":0,"38":0,"41":0,"44":0,"45":0,"48":0,"49":0,"52":0,"55":0,"58":0,"61":0,"64":1,"65":0,"67":0,"71":0,"72":0,"77":1,"78":0,"82":1,"83":16,"86":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/query-types.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/query-types.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":17,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","  SELECT: 'SELECT',","  INSERT: 'INSERT',","  UPDATE: 'UPDATE',","  BULKUPDATE: 'BULKUPDATE',","  BULKDELETE: 'BULKDELETE',","  DELETE: 'DELETE',","  UPSERT: 'UPSERT',","  VERSION: 'VERSION',","  SHOWTABLES: 'SHOWTABLES',","  SHOWINDEXES: 'SHOWINDEXES',","  DESCRIBE: 'DESCRIBE',","  RAW: 'RAW',","  FOREIGNKEYS: 'FOREIGNKEYS',","};",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/hooks.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/hooks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":2,"58":2,"59":2,"60":2,"61":78,"62":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":2,"12":78,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":85,"loc":{"start":{"line":85,"column":22},"end":{"line":85,"column":38}}},"2":{"name":"(anonymous_2)","line":88,"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":51}}},"3":{"name":"(anonymous_3)","line":102,"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":28}}},"4":{"name":"(anonymous_4)","line":125,"loc":{"start":{"line":125,"column":20},"end":{"line":125,"column":35}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":38},"end":{"line":133,"column":54}}},"6":{"name":"(anonymous_6)","line":152,"loc":{"start":{"line":152,"column":8},"end":{"line":152,"column":19}}},"7":{"name":"(anonymous_7)","line":165,"loc":{"start":{"line":165,"column":11},"end":{"line":165,"column":40}}},"8":{"name":"(anonymous_8)","line":184,"loc":{"start":{"line":184,"column":14},"end":{"line":184,"column":39}}},"9":{"name":"(anonymous_9)","line":191,"loc":{"start":{"line":191,"column":71},"end":{"line":191,"column":87}}},"10":{"name":"(anonymous_10)","line":210,"loc":{"start":{"line":210,"column":11},"end":{"line":210,"column":30}}},"11":{"name":"(anonymous_11)","line":490,"loc":{"start":{"line":490,"column":11},"end":{"line":490,"column":27}}},"12":{"name":"(anonymous_12)","line":495,"loc":{"start":{"line":495,"column":21},"end":{"line":495,"column":36}}},"13":{"name":"(anonymous_13)","line":496,"loc":{"start":{"line":496,"column":30},"end":{"line":496,"column":55}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":35}},"2":{"start":{"line":39,"column":0},"end":{"line":74,"column":2}},"3":{"start":{"line":76,"column":0},"end":{"line":82,"column":2}},"4":{"start":{"line":84,"column":0},"end":{"line":213,"column":2}},"5":{"start":{"line":86,"column":4},"end":{"line":86,"column":21}},"6":{"start":{"line":88,"column":4},"end":{"line":97,"column":7}},"7":{"start":{"line":90,"column":6},"end":{"line":96,"column":7}},"8":{"start":{"line":92,"column":8},"end":{"line":92,"column":77}},"9":{"start":{"line":95,"column":8},"end":{"line":95,"column":27}},"10":{"start":{"line":99,"column":4},"end":{"line":99,"column":17}},"11":{"start":{"line":103,"column":4},"end":{"line":106,"column":17}},"12":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"13":{"start":{"line":109,"column":6},"end":{"line":109,"column":24}},"14":{"start":{"line":112,"column":4},"end":{"line":117,"column":5}},"15":{"start":{"line":113,"column":6},"end":{"line":113,"column":23}},"16":{"start":{"line":114,"column":6},"end":{"line":114,"column":49}},"17":{"start":{"line":115,"column":6},"end":{"line":115,"column":76}},"18":{"start":{"line":115,"column":33},"end":{"line":115,"column":76}},"19":{"start":{"line":116,"column":6},"end":{"line":116,"column":93}},"20":{"start":{"line":116,"column":26},"end":{"line":116,"column":93}},"21":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"22":{"start":{"line":120,"column":6},"end":{"line":120,"column":49}},"23":{"start":{"line":124,"column":4},"end":{"line":130,"column":5}},"24":{"start":{"line":125,"column":6},"end":{"line":128,"column":9}},"25":{"start":{"line":126,"column":8},"end":{"line":126,"column":53}},"26":{"start":{"line":126,"column":38},"end":{"line":126,"column":53}},"27":{"start":{"line":127,"column":8},"end":{"line":127,"column":40}},"28":{"start":{"line":129,"column":6},"end":{"line":129,"column":13}},"29":{"start":{"line":133,"column":4},"end":{"line":143,"column":16}},"30":{"start":{"line":134,"column":6},"end":{"line":136,"column":7}},"31":{"start":{"line":135,"column":8},"end":{"line":135,"column":23}},"32":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"33":{"start":{"line":139,"column":8},"end":{"line":139,"column":45}},"34":{"start":{"line":142,"column":6},"end":{"line":142,"column":38}},"35":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"36":{"start":{"line":146,"column":6},"end":{"line":146,"column":33}},"37":{"start":{"line":149,"column":4},"end":{"line":149,"column":19}},"38":{"start":{"line":153,"column":4},"end":{"line":153,"column":48}},"39":{"start":{"line":166,"column":4},"end":{"line":169,"column":5}},"40":{"start":{"line":167,"column":6},"end":{"line":167,"column":16}},"41":{"start":{"line":168,"column":6},"end":{"line":168,"column":18}},"42":{"start":{"line":171,"column":4},"end":{"line":171,"column":49}},"43":{"start":{"line":173,"column":4},"end":{"line":173,"column":70}},"44":{"start":{"line":174,"column":4},"end":{"line":174,"column":74}},"45":{"start":{"line":175,"column":4},"end":{"line":175,"column":16}},"46":{"start":{"line":185,"column":4},"end":{"line":185,"column":49}},"47":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"48":{"start":{"line":188,"column":6},"end":{"line":188,"column":18}},"49":{"start":{"line":191,"column":4},"end":{"line":198,"column":7}},"50":{"start":{"line":193,"column":6},"end":{"line":195,"column":7}},"51":{"start":{"line":194,"column":8},"end":{"line":194,"column":20}},"52":{"start":{"line":197,"column":6},"end":{"line":197,"column":60}},"53":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"54":{"start":{"line":211,"column":4},"end":{"line":211,"column":81}},"55":{"start":{"line":215,"column":0},"end":{"line":215,"column":31}},"56":{"start":{"line":486,"column":0},"end":{"line":501,"column":2}},"57":{"start":{"line":491,"column":4},"end":{"line":491,"column":32}},"58":{"start":{"line":492,"column":4},"end":{"line":492,"column":42}},"59":{"start":{"line":494,"column":4},"end":{"line":494,"column":75}},"60":{"start":{"line":495,"column":4},"end":{"line":499,"column":7}},"61":{"start":{"line":496,"column":6},"end":{"line":498,"column":8}},"62":{"start":{"line":497,"column":8},"end":{"line":497,"column":50}}},"branchMap":{"1":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"2":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":31},"end":{"line":92,"column":50}},{"start":{"line":92,"column":54},"end":{"line":92,"column":56}}]},"3":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"5":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":14},"end":{"line":114,"column":42}},{"start":{"line":114,"column":46},"end":{"line":114,"column":48}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"7":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":63},"end":{"line":115,"column":65}},{"start":{"line":115,"column":68},"end":{"line":115,"column":75}}]},"8":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":6}},{"start":{"line":116,"column":6},"end":{"line":116,"column":6}}]},"9":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":47},"end":{"line":116,"column":85}},{"start":{"line":116,"column":89},"end":{"line":116,"column":91}}]},"10":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"11":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":36},"end":{"line":120,"column":38}},{"start":{"line":120,"column":41},"end":{"line":120,"column":48}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"13":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":27}},{"start":{"line":124,"column":31},"end":{"line":124,"column":55}}]},"14":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":8}},{"start":{"line":126,"column":8},"end":{"line":126,"column":8}}]},"15":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"16":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"17":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":18}},{"start":{"line":138,"column":22},"end":{"line":138,"column":62}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"19":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"20":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":15},"end":{"line":171,"column":36}},{"start":{"line":171,"column":40},"end":{"line":171,"column":48}}]},"21":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":35},"end":{"line":173,"column":63}},{"start":{"line":173,"column":67},"end":{"line":173,"column":69}}]},"22":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":47},"end":{"line":174,"column":67}},{"start":{"line":174,"column":70},"end":{"line":174,"column":72}}]},"23":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":36}},{"start":{"line":185,"column":40},"end":{"line":185,"column":48}}]},"24":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"25":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"26":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":13},"end":{"line":197,"column":37}},{"start":{"line":197,"column":41},"end":{"line":197,"column":59}}]},"27":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":11},"end":{"line":211,"column":39}},{"start":{"line":211,"column":43},"end":{"line":211,"column":80}}]}},"code":["'use strict';","","var Utils = require('./utils')","  , Promise = require('./promise');","","/**"," * Hooks are function that are called before and after  (bulk-) creation/updating/deletion and validation. Hooks can be added to you models in three ways:"," *"," * 1. By specifying them as options in `sequelize.define`"," * 2. By calling `hook()` with a string and your hook handler function"," * 3. By calling the function with the same name as the hook you want",""," * ```js"," * // Method 1"," * sequelize.define(name, { attributes }, {"," *   hooks: {"," *     beforeBulkCreate: function () {"," *       // can be a single function"," *     },"," *     beforeValidate: ["," *       function () {},"," *       function() {} // Or an array of several"," *     ]"," *   }"," * })"," *"," * // Method 2"," * Model.hook('afterDestroy', function () {})"," *"," * // Method 3"," * Model.afterBulkUpdate(function () {})"," * ```"," *"," * @see {Sequelize#define}"," * @mixin Hooks"," * @name Hooks"," */","","var hookTypes = {","  beforeValidate: {params: 2},","  afterValidate: {params: 2},","  validationFailed: {params: 3},","  beforeCreate: {params: 2},","  afterCreate: {params: 2},","  beforeDestroy: {params: 2},","  afterDestroy: {params: 2},","  beforeRestore: {params: 2},","  afterRestore: {params: 2},","  beforeUpdate: {params: 2},","  afterUpdate: {params: 2},","  beforeBulkCreate: {params: 2},","  afterBulkCreate: {params: 2},","  beforeBulkDestroy: {params: 1},","  afterBulkDestroy: {params: 1},","  beforeBulkRestore: {params: 1},","  afterBulkRestore: {params: 1},","  beforeBulkUpdate: {params: 1},","  afterBulkUpdate: {params: 1},","  beforeFind: {params: 1},","  beforeFindAfterExpandIncludeAll: {params: 1},","  beforeFindAfterOptions: {params: 1},","  afterFind: {params: 2},","  beforeCount: {params: 1},","  beforeDefine: {params: 2, sync: true},","  afterDefine: {params: 1, sync: true},","  beforeInit: {params: 2, sync: true},","  afterInit: {params: 1, sync: true},","  beforeConnect: {params: 1},","  afterConnect: {params: 2},","  beforeSync: {params: 1},","  afterSync: {params: 1},","  beforeBulkSync: {params: 1},","  afterBulkSync: {params: 1}","};","","var hookAliases = {","  beforeDelete: 'beforeDestroy',","  afterDelete: 'afterDestroy',","  beforeBulkDelete: 'beforeBulkDestroy',","  afterBulkDelete: 'afterBulkDestroy',","  beforeConnection: 'beforeConnect'","};","","var Hooks = {","  replaceHookAliases: function(hooks) {","    var realHookName;","","    Utils._.each(hooks, function(hooksArray, name) {","      // Does an alias for this hook name exist?","      if (realHookName = hookAliases[name]) {","        // Add the hooks to the actual hook","        hooks[realHookName] = (hooks[realHookName] || []).concat(hooksArray);","","        // Delete the alias","        delete hooks[name];","      }","    });","","    return hooks;","  },","","  runHooks: function(hooks) {","    var self = this","      , fn","      , fnArgs = Utils.sliceArgs(arguments, 1)","      , hookType;","","    if (typeof fnArgs[fnArgs.length - 1] === 'function') {","      fn = fnArgs.pop();","    }","","    if (typeof hooks === 'string') {","      hookType = hooks;","      hooks = this.options.hooks[hookType] || [];","      if (!Array.isArray(hooks)) hooks = hooks === undefined ? [] : [hooks];","      if (this.sequelize) hooks = hooks.concat(this.sequelize.options.hooks[hookType] || []);","    }","","    if (!Array.isArray(hooks)) {","      hooks = hooks === undefined ? [] : [hooks];","    }","","    // run hooks as sync functions if flagged as sync","    if (hookTypes[hookType] && hookTypes[hookType].sync) {","      hooks.forEach(function(hook) {","        if (typeof hook === 'object') hook = hook.fn;","        return hook.apply(self, fnArgs);","      });","      return;","    }","","    // run hooks async","    var promise = Promise.each(hooks, function (hook) {","      if (typeof hook === 'object') {","        hook = hook.fn;","      }","","      if (hookType && hook.length > hookTypes[hookType].params) {","        hook = Promise.promisify(hook, self);","      }","","      return hook.apply(self, fnArgs);","    }).return();","","    if (fn) {","      return promise.nodeify(fn);","    }","","    return promise;","  },","","  hook: function() {","    return Hooks.addHook.apply(this, arguments);","  },","","  /**","   * Add a hook to the model","   *","   * @param {String}    hooktype","   * @param {String}    [name]    Provide a name for the hook function. It can be used to remove the hook later or to order hooks based on some sort of priority system in the future.","   * @param {Function}  fn        The hook function","   *","   * @alias hook","   */","  addHook: function(hookType, name, fn) {","    if (typeof name === 'function') {","      fn = name;","      name = null;","    }","","    hookType = hookAliases[hookType] || hookType;","","    this.options.hooks[hookType] = this.options.hooks[hookType] || [];","    this.options.hooks[hookType].push(!!name ? {name: name, fn: fn} : fn);","    return this;","  },","","  /**","   * Remove hook from the model","   *","   * @param {String} hookType","   * @param {String} name","   */","  removeHook: function(hookType, name) {","    hookType = hookAliases[hookType] || hookType;","","    if (!this.hasHook(hookType)) {","      return this;","    }","","    this.options.hooks[hookType] = this.options.hooks[hookType].filter(function (hook) {","      // don't remove unnamed hooks","      if (typeof hook === 'function') {","        return true;","      }","","      return typeof hook === 'object' && hook.name !== name;","    });","","    return this;","  },","","  /*","   * Check whether the mode has any hooks of this type","   *","   * @param {String}  hookType","   *","   * @alias hasHooks","   */","  hasHook: function(hookType) {","    return this.options.hooks[hookType] && !!this.options.hooks[hookType].length;","  },","};","","Hooks.hasHooks = Hooks.hasHook;","","/**"," * A hook that is run before validation"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," * @name beforeValidate"," */","","/**"," * A hook that is run after validation"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," * @name afterValidate"," */","","/**"," * A hook that is run when validation fails"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options, error. Error is the"," * SequelizeValidationError. If the callback throws an error, it will replace the original validation error."," * @name validationFailed"," */","","/**"," * A hook that is run before creating a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with attributes, options"," * @name beforeCreate"," */","","/**"," * A hook that is run after creating a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with attributes, options"," * @name afterCreate"," */","","/**"," * A hook that is run before destroying a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," *"," * @name beforeDestroy"," * @alias beforeDelete"," */","","/**"," * A hook that is run after destroying a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," *"," * @name afterDestroy"," * @alias afterDelete"," */","","/**"," * A hook that is run before restoring a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," *"," * @name beforeRestore"," */","","/**"," * A hook that is run after restoring a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," *"," * @name afterRestore"," */","","/**"," * A hook that is run before updating a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," * @name beforeUpdate"," */","","/**"," * A hook that is run after updating a single instance"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance, options"," * @name afterUpdate"," */","","/**"," * A hook that is run before creating instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instances, options"," * @name beforeBulkCreate"," */","","/**"," * A hook that is run after creating instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instances, options"," * @name afterBulkCreate"," */","","/**"," * A hook that is run before destroying instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," *"," * @name beforeBulkDestroy"," * @alias beforeBulkDelete"," */","","/**"," * A hook that is run after destroying instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," *"," * @name afterBulkDestroy"," * @alias afterBulkDelete"," */","","/**"," * A hook that is run before restoring instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," *"," * @name beforeBulkRestore"," */","","/**"," * A hook that is run after restoring instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," *"," * @name afterBulkRestore"," */","","/**"," * A hook that is run before updating instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name beforeBulkUpdate"," */","","/**"," * A hook that is run after updating instances in bulk"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name afterBulkUpdate"," */","","/**"," * A hook that is run before a find (select) query"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name beforeFind"," */","","/**"," * A hook that is run before a find (select) query, after any { include: {all: ...} } options are expanded"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name beforeFindAfterExpandIncludeAll"," */","","/**"," * A hook that is run before a find (select) query, after all option parsing is complete"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name beforeFindAfterOptions"," */","","/**"," * A hook that is run after a find (select) query"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with instance(s), options"," * @name afterFind"," */","","/**"," * A hook that is run before a count query"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options"," * @name beforeCount"," */","","/**"," * A hook that is run before a define call"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with attributes, options"," * @name beforeDefine"," */","","/**"," * A hook that is run after a define call"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with factory"," * @name afterDefine"," */","","/**"," * A hook that is run before Sequelize() call"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with config, options"," * @name beforeInit"," */","","/**"," * A hook that is run after Sequelize() call"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with sequelize"," * @name afterInit"," * @memberOf Sequelize"," */","","/**"," * A hook that is run before a connection is created"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with config passed to connection"," * @name beforeConnect"," * @memberOf Sequelize"," */","","/**"," * A hook that is run after a connection is created"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with the connection object and thye config passed to connection"," * @name afterConnect"," * @memberOf Sequelize"," */","","/**"," * A hook that is run before Model.sync call"," * @param {String}   name"," * @param {Function} fn   A callback function that is called with options passed to Model.sync"," * @name beforeSync"," * @memberOf Sequelize"," */",""," /**","  * A hook that is run before a connection is created","  * @param {String}   name","  * @param {Function} fn   A callback function that is called with config passed to connection","  * @name beforeConnect","  */",""," /**","  * A hook that is run before Model.sync call","  * @param {String}   name","  * @param {Function} fn   A callback function that is called with options passed to Model.sync","  * @name beforeSync","  */",""," /**","  * A hook that is run after Model.sync call","  * @param {String}   name","  * @param {Function} fn   A callback function that is called with options passed to Model.sync","  * @name afterSync","  */","","  /**","   * A hook that is run before sequelize.sync call","   * @param {String}   name","   * @param {Function} fn   A callback function that is called with options passed to sequelize.sync","   * @name beforeBulkSync","   */","","  /**","   * A hook that is run after sequelize.sync call","   * @param {String}   name","   * @param {Function} fn   A callback function that is called with options passed to sequelize.sync","   * @name afterBulkSync","   */","","module.exports = {","  hooks: hookTypes,","  hookAliases: hookAliases,","","  applyTo: function(Model) {","    Utils._.mixin(Model, Hooks);","    Utils._.mixin(Model.prototype, Hooks);","","    var allHooks = Object.keys(hookTypes).concat(Object.keys(hookAliases));","    allHooks.forEach(function(hook) {","      Model.prototype[hook] = function(name, callback) {","        return this.addHook(hook, name, callback);","      };","    });","  }","};",""],"l":{"3":1,"39":1,"76":1,"84":1,"86":0,"88":0,"90":0,"92":0,"95":0,"99":0,"103":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"116":0,"119":0,"120":0,"124":0,"125":0,"126":0,"127":0,"129":0,"133":0,"134":0,"135":0,"138":0,"139":0,"142":0,"145":0,"146":0,"149":0,"153":0,"166":0,"167":0,"168":0,"171":0,"173":0,"174":0,"175":0,"185":0,"187":0,"188":0,"191":0,"193":0,"194":0,"197":0,"200":0,"211":0,"215":1,"486":1,"491":2,"492":2,"494":2,"495":2,"496":78,"497":0}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/mixin.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/mixin.js","s":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":2,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":89,"loc":{"start":{"line":89,"column":29},"end":{"line":89,"column":40}}},"2":{"name":"(anonymous_2)","line":92,"loc":{"start":{"line":92,"column":19},"end":{"line":92,"column":35}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":9},"end":{"line":93,"column":35}}},"4":{"name":"(anonymous_4)","line":171,"loc":{"start":{"line":171,"column":16},"end":{"line":171,"column":42}}},"5":{"name":"(anonymous_5)","line":250,"loc":{"start":{"line":250,"column":22},"end":{"line":250,"column":53}}},"6":{"name":"(anonymous_6)","line":275,"loc":{"start":{"line":275,"column":23},"end":{"line":275,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":40}},"2":{"start":{"line":89,"column":0},"end":{"line":89,"column":43}},"3":{"start":{"line":92,"column":0},"end":{"line":119,"column":2}},"4":{"start":{"line":93,"column":2},"end":{"line":118,"column":4}},"5":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"6":{"start":{"line":95,"column":6},"end":{"line":95,"column":149}},"7":{"start":{"line":98,"column":4},"end":{"line":98,"column":22}},"8":{"start":{"line":101,"column":4},"end":{"line":101,"column":28}},"9":{"start":{"line":102,"column":4},"end":{"line":102,"column":81}},"10":{"start":{"line":103,"column":4},"end":{"line":103,"column":37}},"11":{"start":{"line":106,"column":4},"end":{"line":106,"column":82}},"12":{"start":{"line":107,"column":4},"end":{"line":107,"column":90}},"13":{"start":{"line":109,"column":4},"end":{"line":115,"column":5}},"14":{"start":{"line":110,"column":6},"end":{"line":110,"column":51}},"15":{"start":{"line":112,"column":6},"end":{"line":112,"column":58}},"16":{"start":{"line":113,"column":6},"end":{"line":113,"column":58}},"17":{"start":{"line":114,"column":6},"end":{"line":114,"column":59}},"18":{"start":{"line":117,"column":4},"end":{"line":117,"column":23}},"19":{"start":{"line":135,"column":0},"end":{"line":135,"column":36}},"20":{"start":{"line":153,"column":0},"end":{"line":153,"column":42}},"21":{"start":{"line":171,"column":0},"end":{"line":193,"column":2}},"22":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"23":{"start":{"line":173,"column":4},"end":{"line":173,"column":109}},"24":{"start":{"line":176,"column":2},"end":{"line":176,"column":20}},"25":{"start":{"line":179,"column":2},"end":{"line":179,"column":26}},"26":{"start":{"line":180,"column":2},"end":{"line":180,"column":79}},"27":{"start":{"line":181,"column":2},"end":{"line":181,"column":35}},"28":{"start":{"line":183,"column":2},"end":{"line":183,"column":65}},"29":{"start":{"line":186,"column":2},"end":{"line":186,"column":57}},"30":{"start":{"line":187,"column":2},"end":{"line":187,"column":69}},"31":{"start":{"line":189,"column":2},"end":{"line":189,"column":33}},"32":{"start":{"line":190,"column":2},"end":{"line":190,"column":47}},"33":{"start":{"line":192,"column":2},"end":{"line":192,"column":21}},"34":{"start":{"line":250,"column":0},"end":{"line":273,"column":2}},"35":{"start":{"line":251,"column":2},"end":{"line":253,"column":3}},"36":{"start":{"line":252,"column":4},"end":{"line":252,"column":115}},"37":{"start":{"line":255,"column":2},"end":{"line":255,"column":25}},"38":{"start":{"line":258,"column":2},"end":{"line":258,"column":26}},"39":{"start":{"line":259,"column":2},"end":{"line":259,"column":79}},"40":{"start":{"line":260,"column":2},"end":{"line":260,"column":35}},"41":{"start":{"line":261,"column":2},"end":{"line":261,"column":113}},"42":{"start":{"line":262,"column":2},"end":{"line":262,"column":110}},"43":{"start":{"line":265,"column":2},"end":{"line":265,"column":73}},"44":{"start":{"line":266,"column":2},"end":{"line":266,"column":93}},"45":{"start":{"line":268,"column":2},"end":{"line":268,"column":59}},"46":{"start":{"line":269,"column":2},"end":{"line":269,"column":59}},"47":{"start":{"line":270,"column":2},"end":{"line":270,"column":60}},"48":{"start":{"line":272,"column":2},"end":{"line":272,"column":21}},"49":{"start":{"line":275,"column":0},"end":{"line":287,"column":2}},"50":{"start":{"line":276,"column":2},"end":{"line":284,"column":3}},"51":{"start":{"line":277,"column":4},"end":{"line":283,"column":5}},"52":{"start":{"line":278,"column":6},"end":{"line":278,"column":59}},"53":{"start":{"line":280,"column":6},"end":{"line":282,"column":7}},"54":{"start":{"line":281,"column":8},"end":{"line":281,"column":27}},"55":{"start":{"line":286,"column":2},"end":{"line":286,"column":14}}},"branchMap":{"1":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"2":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":14},"end":{"line":101,"column":21}},{"start":{"line":101,"column":25},"end":{"line":101,"column":27}}]},"3":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":50},"end":{"line":102,"column":55}},{"start":{"line":102,"column":58},"end":{"line":102,"column":80}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"5":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"6":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":12},"end":{"line":179,"column":19}},{"start":{"line":179,"column":23},"end":{"line":179,"column":25}}]},"7":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":48},"end":{"line":180,"column":53}},{"start":{"line":180,"column":56},"end":{"line":180,"column":78}}]},"8":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"9":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":12},"end":{"line":258,"column":19}},{"start":{"line":258,"column":23},"end":{"line":258,"column":25}}]},"10":{"line":259,"type":"cond-expr","locations":[{"start":{"line":259,"column":48},"end":{"line":259,"column":53}},{"start":{"line":259,"column":56},"end":{"line":259,"column":78}}]},"11":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":58},"end":{"line":261,"column":91}},{"start":{"line":261,"column":94},"end":{"line":261,"column":112}}]},"12":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"13":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"14":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":10},"end":{"line":280,"column":49}},{"start":{"line":280,"column":54},"end":{"line":280,"column":125}}]},"15":{"line":280,"type":"cond-expr","locations":[{"start":{"line":280,"column":76},"end":{"line":280,"column":98}},{"start":{"line":280,"column":101},"end":{"line":280,"column":125}}]}},"code":["'use strict';","","var Utils = require('./../utils')","  , _ = require('lodash')","  , HasOne = require('./has-one')","  , HasMany = require('./has-many')","  , BelongsToMany = require('./belongs-to-many')","  , BelongsTo = require('./belongs-to');","","/**"," * Creating associations in sequelize is done by calling one of the belongsTo / hasOne / hasMany / belongsToMany functions on a model (the source), and providing another model as the first argument to the function (the target)."," *"," * * hasOne - adds a foreign key to the target and singular association mixins to the source."," * * belongsTo - add a foreign key and singular association mixins to the source."," * * hasMany - adds a foreign key to target and plural association mixins to the source."," * * belongsToMany - creates an N:M association with a join table and adds plural association mixins to the source. The junction table is created with sourceId and targetId."," *"," * Creating an association will add a foreign key constraint to the attributes. All associations use `CASCADE` on update and `SET NULL` on delete, except for n:m, which also uses `CASCADE` on delete."," *"," * When creating associations, you can provide an alias, via the `as` option. This is useful if the same model is associated twice, or you want your association to be called something other than the name of the target model."," *"," * As an example, consider the case where users have many pictures, one of which is their profile picture. All pictures have a `userId`, but in addition the user model also has a `profilePictureId`, to be able to easily load the user's profile picture."," *"," * ```js"," * User.hasMany(Picture)"," * User.belongsTo(Picture, { as: 'ProfilePicture', constraints: false })"," *"," * user.getPictures() // gets you all pictures"," * user.getProfilePicture() // gets you only the profile picture"," *"," * User.findAll({"," *   where: ...,"," *   include: ["," *     { model: Picture }, // load all pictures"," *     { model: Picture, as: 'ProfilePicture' }, // load the profile picture. Notice that the spelling must be the exact same as the one in the association"," *   ]"," * })"," * ```"," * To get full control over the foreign key column added by sequelize, you can use the `foreignKey` option. It can either be a string, that specifies the name, or and object type definition,"," * equivalent to those passed to `sequelize.define`."," *"," * ```js"," * User.hasMany(Picture, { foreignKey: 'uid' })"," * ```"," *"," * The foreign key column in Picture will now be called `uid` instead of the default `userId`."," *"," * ```js"," * User.hasMany(Picture, {"," *   foreignKey: {"," *     name: 'uid',"," *     allowNull: false"," *   }"," * })"," * ```"," *"," * This specifies that the `uid` column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see `constraints: false` below)."," *"," * When fetching associated models, you can limit your query to only load some models. These queries are written in the same way as queries to `find`/`findAll`. To only get pictures in JPG, you can do:"," *"," * ```js"," * user.getPictures({"," *   where: {"," *     format: 'jpg'"," *   }"," * })"," * ```"," *"," * There are several ways to update and add new associations. Continuing with our example of users and pictures:"," * ```js"," * user.addPicture(p) // Add a single picture"," * user.setPictures([p1, p2]) // Associate user with ONLY these two picture, all other associations will be deleted"," * user.addPictures([p1, p2]) // Associate user with these two pictures, but don't touch any current associations"," * ```"," *"," * You don't have to pass in a complete object to the association functions, if your associated model has a single primary key:"," *"," * ```js"," * user.addPicture(req.query.pid) // Here pid is just an integer, representing the primary key of the picture"," * ```"," *"," * In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it."," *"," * Note how we also specified `constraints: false` for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of `Error: Cyclic dependency found. 'users' is dependent of itself`. If you encounter this, you should either disable some constraints, or rethink your associations completely."," *"," * @mixin Associations"," * @name Associations"," */","var Mixin = module.exports = function() {};","","// The logic for hasOne and belongsTo is exactly the same","var singleLinked = function (Type) {","  return function(target, options) { // testhint options:none","    if (!(target instanceof this.sequelize.Model)) {","      throw new Error(this.name + '.' + Utils.lowercaseFirst(Type.toString()) + ' called with something that\\'s not an instance of Sequelize.Model');","    }","","    var source = this;","","    // Since this is a mixin, we'll need a unique variable name for hooks (since Model will override our hooks option)","    options = options || {};","    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);","    options.useHooks = options.hooks;","","    // the id is in the foreign table","    var association = new Type(source, target, _.extend(options, source.options));","    source.associations[association.associationAccessor] = association.injectAttributes();","","    if (association.mixin) {","      association.mixin(source.Instance.prototype);","    } else {","      association.injectGetter(source.Instance.prototype);","      association.injectSetter(source.Instance.prototype);","      association.injectCreator(source.Instance.prototype);","    }","","    return association;","  };","};","/**"," * Creates an association between this (the source) and the provided target. The foreign key is added on the target."," *"," * Example: `User.hasOne(Profile)`. This will add userId to the profile table."," *"," * @method hasOne"," * @param {Model}           target"," * @param {object}          [options]"," * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks"," * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target"," * @param {string|object}   [options.foreignKey] The name of the foreign key in the target table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source"," * @param {string}          [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise"," * @param {string}          [options.onUpdate='CASCADE']"," * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key."," */","Mixin.hasOne = singleLinked(HasOne);","","/**"," * Creates an association between this (the source) and the provided target. The foreign key is added on the source."," *"," * Example: `Profile.belongsTo(User)`. This will add userId to the profile table."," *"," * @method belongsTo"," * @param {Model}           target"," * @param {object}          [options]"," * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks"," * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target"," * @param {string|object}   [options.foreignKey] The name of the foreign key in the source table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target"," * @param {string}          [options.targetKey] The name of the field to use as the key for the association in the target table. Defaults to the primary key of the target table"," * @param {string}          [options.onDelete='SET&nbsp;NULL|NO&nbsp;ACTION'] SET NULL if foreignKey allows nulls, NO ACTION if otherwise"," * @param {string}          [options.onUpdate='CASCADE']"," * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key."," */","Mixin.belongsTo = singleLinked(BelongsTo);","","/**"," * Creates a 1:m association between this (the source) and the provided target. The foreign key is added on the target."," *"," * Example: `User.hasMany(Profile)`. This will add userId to the profile table."," *"," * @param {Model}               target"," * @param {object}              [options]"," * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks"," * @param {string|object}       [options.as] The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target"," * @param {string|object}       [options.foreignKey] The name of the foreign key in the target table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source"," * @param {string}              [options.sourceKey] The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table"," * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)"," * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise"," * @param {string}              [options.onUpdate='CASCADE']"," * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key."," */","Mixin.hasMany = function(target, options) { // testhint options:none","  if (!(target instanceof this.sequelize.Model)) {","    throw new Error(this.name + '.hasMany called with something that\\'s not an instance of Sequelize.Model');","  }","","  var source = this;","","  // Since this is a mixin, we'll need a unique variable name for hooks (since Model will override our hooks option)","  options = options || {};","  options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);","  options.useHooks = options.hooks;","","  options = _.extend(options, _.omit(source.options, ['hooks']));","","  // the id is in the foreign table or in a connecting table","  var association = new HasMany(source, target, options);","  source.associations[association.associationAccessor] = association;","","  association.injectAttributes();","  association.mixin(source.Instance.prototype);","","  return association;","};","","/**"," * Create an N:M association with a join table."," *"," * ```js"," * User.belongsToMany(Project, { through: 'UserProjects' })"," * Project.belongsToMany(User, { through: 'UserProjects' })"," * ```"," * Defining `through` is required. Sequelize would previously attempt to auto generate names but that would not always lead to the most logical setups."," *"," * If you define a through model with custom attributes, these attributes can be set when adding / setting new associations in two ways. Consider users and projects from before with a join table that stores whether the project has been started yet:"," * ```js"," * var UserProjects = sequelize.define('UserProjects', {"," *   started: Sequelize.BOOLEAN"," * })"," * User.belongsToMany(Project, { through: UserProjects })"," * Project.belongsToMany(User, { through: UserProjects })"," * ```"," * ```js"," * jan.addProject(homework, { started: false }) // The homework project is not started yet"," * jan.setProjects([makedinner, doshopping], { started: true}) // Both shopping and dinner has been started"," * ```"," *"," * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:"," *"," * ```js"," * p1.UserProjects = {"," *   started: true"," * }"," * user.setProjects([p1, p2], {started: false}) // The default value is false, but p1 overrides that."," * ```"," *"," * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model."," * ```js"," * user.getProjects().then(function (projects) {"," *   var p1 = projects[0]"," *   p1.UserProjects.started // Is this project started yet?"," * })"," * ```"," *"," * @param {Model}               target"," * @param {object}              [options]"," * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks"," * @param {Model|string|object} [options.through] The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it."," * @param {Model}               [options.through.model] The model used to join both sides of the N:M association."," * @param {object}              [options.through.scope] A key/value set that will be used for association create and find defaults on the through model. (Remember to add the attributes to the through model)"," * @param {boolean}             [options.through.unique=true] If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)"," * @param {string|object}       [options.as] The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target"," * @param {string|object}       [options.foreignKey] The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source"," * @param {string|object}       [options.otherKey] The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target"," * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)"," * @param {boolean}             [options.timestamps=sequelize.options.timestamps] Should the join model have timestamps"," * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] Cascade if this is a n:m, and set null if it is a 1:m"," * @param {string}              [options.onUpdate='CASCADE']"," * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key."," */","Mixin.belongsToMany = function(targetModel, options) { // testhint options:none","  if (!(targetModel instanceof this.sequelize.Model)) {","    throw new Error(this.name + '.belongsToMany called with something that\\'s not an instance of Sequelize.Model');","  }","","  var sourceModel = this;","","  // Since this is a mixin, we'll need a unique variable name for hooks (since Model will override our hooks option)","  options = options || {};","  options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);","  options.useHooks = options.hooks;","  options.timestamps = options.timestamps === undefined ? this.sequelize.options.timestamps : options.timestamps;","  options = _.extend(options, _.omit(sourceModel.options, ['hooks', 'timestamps', 'scopes', 'defaultScope']));","","  // the id is in the foreign table or in a connecting table","  var association = new BelongsToMany(sourceModel, targetModel, options);","  sourceModel.associations[association.associationAccessor] = association.injectAttributes();","","  association.injectGetter(sourceModel.Instance.prototype);","  association.injectSetter(sourceModel.Instance.prototype);","  association.injectCreator(sourceModel.Instance.prototype);","","  return association;","};","","Mixin.getAssociation = function(target, alias) {","  for (var associationName in this.associations) {","    if (this.associations.hasOwnProperty(associationName)) {","      var association = this.associations[associationName];","","      if (association.target.name === target.name && (alias === undefined ? !association.isAliased : association.as === alias)) {","        return association;","      }","    }","  }","","  return null;","};",""],"l":{"3":1,"89":1,"92":1,"93":2,"94":0,"95":0,"98":0,"101":0,"102":0,"103":0,"106":0,"107":0,"109":0,"110":0,"112":0,"113":0,"114":0,"117":0,"135":1,"153":1,"171":1,"172":0,"173":0,"176":0,"179":0,"180":0,"181":0,"183":0,"186":0,"187":0,"189":0,"190":0,"192":0,"250":1,"251":0,"252":0,"255":0,"258":0,"259":0,"260":0,"261":0,"262":0,"265":0,"266":0,"268":0,"269":0,"270":0,"272":0,"275":1,"276":0,"277":0,"278":0,"280":0,"281":0,"286":0}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/deferrable.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/deferrable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":1,"39":5,"40":5,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":5,"14":0},"fnMap":{"1":{"name":"ABSTRACT","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":21}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":30},"end":{"line":49,"column":42}}},"3":{"name":"INITIALLY_DEFERRED","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":31}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":37},"end":{"line":66,"column":49}}},"5":{"name":"INITIALLY_IMMEDIATE","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":32}}},"6":{"name":"(anonymous_6)","line":83,"loc":{"start":{"line":83,"column":38},"end":{"line":83,"column":50}}},"7":{"name":"NOT","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":16}}},"8":{"name":"(anonymous_8)","line":102,"loc":{"start":{"line":102,"column":22},"end":{"line":102,"column":34}}},"9":{"name":"SET_DEFERRED","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":36}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":31},"end":{"line":123,"column":57}}},"11":{"name":"SET_IMMEDIATE","line":135,"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":37}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":32},"end":{"line":144,"column":58}}},"13":{"name":"(anonymous_13)","line":148,"loc":{"start":{"line":148,"column":32},"end":{"line":148,"column":47}}},"14":{"name":"(anonymous_14)","line":151,"loc":{"start":{"line":151,"column":28},"end":{"line":151,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":39,"column":0},"end":{"line":45,"column":2}},"3":{"start":{"line":47,"column":0},"end":{"line":47,"column":23}},"4":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"5":{"start":{"line":50,"column":2},"end":{"line":50,"column":43}},"6":{"start":{"line":59,"column":0},"end":{"line":63,"column":1}},"7":{"start":{"line":60,"column":2},"end":{"line":62,"column":3}},"8":{"start":{"line":61,"column":4},"end":{"line":61,"column":36}},"9":{"start":{"line":64,"column":0},"end":{"line":64,"column":44}},"10":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"11":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"12":{"start":{"line":76,"column":0},"end":{"line":80,"column":1}},"13":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"14":{"start":{"line":78,"column":4},"end":{"line":78,"column":37}},"15":{"start":{"line":81,"column":0},"end":{"line":81,"column":45}},"16":{"start":{"line":83,"column":0},"end":{"line":85,"column":2}},"17":{"start":{"line":84,"column":2},"end":{"line":84,"column":42}},"18":{"start":{"line":95,"column":0},"end":{"line":99,"column":1}},"19":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"20":{"start":{"line":97,"column":4},"end":{"line":97,"column":21}},"21":{"start":{"line":100,"column":0},"end":{"line":100,"column":29}},"22":{"start":{"line":102,"column":0},"end":{"line":104,"column":2}},"23":{"start":{"line":103,"column":2},"end":{"line":103,"column":26}},"24":{"start":{"line":114,"column":0},"end":{"line":120,"column":1}},"25":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"26":{"start":{"line":116,"column":4},"end":{"line":116,"column":41}},"27":{"start":{"line":119,"column":2},"end":{"line":119,"column":33}},"28":{"start":{"line":121,"column":0},"end":{"line":121,"column":38}},"29":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"30":{"start":{"line":124,"column":2},"end":{"line":124,"column":59}},"31":{"start":{"line":135,"column":0},"end":{"line":141,"column":1}},"32":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"33":{"start":{"line":137,"column":4},"end":{"line":137,"column":42}},"34":{"start":{"line":140,"column":2},"end":{"line":140,"column":33}},"35":{"start":{"line":142,"column":0},"end":{"line":142,"column":39}},"36":{"start":{"line":144,"column":0},"end":{"line":146,"column":2}},"37":{"start":{"line":145,"column":2},"end":{"line":145,"column":60}},"38":{"start":{"line":148,"column":0},"end":{"line":155,"column":3}},"39":{"start":{"line":149,"column":2},"end":{"line":149,"column":39}},"40":{"start":{"line":151,"column":2},"end":{"line":154,"column":4}},"41":{"start":{"line":152,"column":4},"end":{"line":152,"column":40}},"42":{"start":{"line":153,"column":4},"end":{"line":153,"column":56}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"2":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"3":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"4":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"5":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]}},"code":["'use strict';","","var util = require('util');","","","/**"," * A collection of properties related to deferrable constraints. It can be used to"," * make foreign key constraints deferrable and to set the constraints within a"," * transaction. This is only supported in PostgreSQL."," *"," * The foreign keys can be configured like this. It will create a foreign key"," * that will check the constraints immediately when the data was inserted."," *"," * ```js"," * sequelize.define('Model', {"," *   foreign_id: {"," *     type: Sequelize.INTEGER,"," *     references: {"," *       model: OtherModel,"," *       key: 'id',"," *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE"," *     }"," *   }"," * });"," * ```"," *"," * The constraints can be configured in a transaction like this. It will"," * trigger a query once the transaction has been started and set the constraints"," * to be checked at the very end of the transaction."," *"," * ```js"," * sequelize.transaction({"," *   deferrable: Sequelize.Deferrable.SET_DEFERRED"," * });"," * ```"," *"," * @return {object}"," */","var Deferrable = module.exports = {","  INITIALLY_DEFERRED: INITIALLY_DEFERRED,","  INITIALLY_IMMEDIATE: INITIALLY_IMMEDIATE,","  NOT: NOT,","  SET_DEFERRED: SET_DEFERRED,","  SET_IMMEDIATE: SET_IMMEDIATE","};","","function ABSTRACT () {}","","ABSTRACT.prototype.toString = function () {","  return this.toSql.apply(this, arguments);","};","","","/**"," * A property that will defer constraints checks to the end of transactions."," *"," * @property INITIALLY_DEFERRED"," */","function INITIALLY_DEFERRED () {","  if (!(this instanceof INITIALLY_DEFERRED)) {","    return new INITIALLY_DEFERRED();","  }","}","util.inherits(INITIALLY_DEFERRED, ABSTRACT);","","INITIALLY_DEFERRED.prototype.toSql = function () {","  return 'DEFERRABLE INITIALLY DEFERRED';","};","","","/**"," * A property that will trigger the constraint checks immediately"," *"," * @property INITIALLY_IMMEDIATE"," */","function INITIALLY_IMMEDIATE () {","  if (!(this instanceof INITIALLY_IMMEDIATE)) {","    return new INITIALLY_IMMEDIATE();","  }","}","util.inherits(INITIALLY_IMMEDIATE, ABSTRACT);","","INITIALLY_IMMEDIATE.prototype.toSql = function () {","  return 'DEFERRABLE INITIALLY IMMEDIATE';","};","","","/**"," * A property that will set the constraints to not deferred. This is"," * the default in PostgreSQL and it make it impossible to dynamically"," * defer the constraints within a transaction."," *"," * @property NOT"," */","function NOT () {","  if (!(this instanceof NOT)) {","    return new NOT();","  }","}","util.inherits(NOT, ABSTRACT);","","NOT.prototype.toSql = function () {","  return 'NOT DEFERRABLE';","};","","","/**"," * A property that will trigger an additional query at the beginning of a"," * transaction which sets the constraints to deferred."," *"," * @param  {Array} constraints An array of constraint names. Will defer all constraints by default."," * @property SET_DEFERRED"," */","function SET_DEFERRED (constraints) {","  if (!(this instanceof SET_DEFERRED)) {","    return new SET_DEFERRED(constraints);","  }","","  this.constraints = constraints;","}","util.inherits(SET_DEFERRED, ABSTRACT);","","SET_DEFERRED.prototype.toSql = function (queryGenerator) {","  return queryGenerator.setDeferredQuery(this.constraints);","};","","","/**"," * A property that will trigger an additional query at the beginning of a"," * transaction which sets the constraints to immediately."," *"," * @param  {Array} constraints An array of constraint names. Will defer all constraints by default."," * @property SET_IMMEDIATE"," */","function SET_IMMEDIATE (constraints) {","  if (!(this instanceof SET_IMMEDIATE)) {","    return new SET_IMMEDIATE(constraints);","  }","","  this.constraints = constraints;","}","util.inherits(SET_IMMEDIATE, ABSTRACT);","","SET_IMMEDIATE.prototype.toSql = function (queryGenerator) {","  return queryGenerator.setImmediateQuery(this.constraints);","};","","Object.keys(Deferrable).forEach(function (key) {","  var DeferrableType = Deferrable[key];","","  DeferrableType.toString = function () {","    var instance = new DeferrableType();","    return instance.toString.apply(instance, arguments);","  };","});",""],"l":{"3":1,"39":1,"47":1,"49":1,"50":0,"59":1,"60":0,"61":0,"64":1,"66":1,"67":0,"76":1,"77":0,"78":0,"81":1,"83":1,"84":0,"95":1,"96":0,"97":0,"100":1,"102":1,"103":0,"114":1,"115":0,"116":0,"119":0,"121":1,"123":1,"124":0,"135":1,"136":0,"137":0,"140":0,"142":1,"144":1,"145":0,"148":1,"149":5,"151":5,"152":0,"153":0}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/model-manager.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/model-manager.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":39}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":34},"end":{"line":12,"column":50}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":37},"end":{"line":19,"column":53}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":52}}},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":34},"end":{"line":27,"column":61}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":33},"end":{"line":32,"column":49}}},"7":{"name":"(anonymous_7)","line":39,"loc":{"start":{"line":39,"column":47},"end":{"line":39,"column":58}}},"8":{"name":"(anonymous_8)","line":48,"loc":{"start":{"line":48,"column":38},"end":{"line":48,"column":66}}},"9":{"name":"(anonymous_9)","line":58,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":38}}},"10":{"name":"(anonymous_10)","line":85,"loc":{"start":{"line":85,"column":23},"end":{"line":85,"column":37}}},"11":{"name":"(anonymous_11)","line":96,"loc":{"start":{"line":96,"column":17},"end":{"line":96,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":19}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":29}},"5":{"start":{"line":12,"column":0},"end":{"line":17,"column":2}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":26}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":44}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"9":{"start":{"line":19,"column":0},"end":{"line":25,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":22,"column":5}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":38}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":43}},"13":{"start":{"line":27,"column":0},"end":{"line":37,"column":2}},"14":{"start":{"line":28,"column":2},"end":{"line":30,"column":5}},"15":{"start":{"line":32,"column":2},"end":{"line":34,"column":5}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":48}},"17":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}},"18":{"start":{"line":39,"column":0},"end":{"line":41,"column":3}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}},"20":{"start":{"line":48,"column":0},"end":{"line":99,"column":2}},"21":{"start":{"line":49,"column":2},"end":{"line":52,"column":10}},"22":{"start":{"line":54,"column":2},"end":{"line":56,"column":5}},"23":{"start":{"line":58,"column":2},"end":{"line":90,"column":5}},"24":{"start":{"line":59,"column":4},"end":{"line":60,"column":41}},"25":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"26":{"start":{"line":63,"column":6},"end":{"line":63,"column":63}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":30}},"28":{"start":{"line":68,"column":4},"end":{"line":83,"column":5}},"29":{"start":{"line":69,"column":6},"end":{"line":82,"column":7}},"30":{"start":{"line":70,"column":8},"end":{"line":70,"column":54}},"31":{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},"32":{"start":{"line":73,"column":10},"end":{"line":73,"column":56}},"33":{"start":{"line":74,"column":10},"end":{"line":74,"column":49}},"34":{"start":{"line":76,"column":10},"end":{"line":78,"column":11}},"35":{"start":{"line":77,"column":12},"end":{"line":77,"column":51}},"36":{"start":{"line":80,"column":10},"end":{"line":80,"column":25}},"37":{"start":{"line":85,"column":4},"end":{"line":87,"column":7}},"38":{"start":{"line":86,"column":6},"end":{"line":86,"column":31}},"39":{"start":{"line":89,"column":4},"end":{"line":89,"column":32}},"40":{"start":{"line":92,"column":2},"end":{"line":92,"column":25}},"41":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"42":{"start":{"line":94,"column":4},"end":{"line":94,"column":30}},"43":{"start":{"line":96,"column":2},"end":{"line":98,"column":5}},"44":{"start":{"line":97,"column":4},"end":{"line":97,"column":33}},"45":{"start":{"line":101,"column":0},"end":{"line":101,"column":30}},"46":{"start":{"line":102,"column":0},"end":{"line":102,"column":43}},"47":{"start":{"line":103,"column":0},"end":{"line":103,"column":38}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":30}},{"start":{"line":28,"column":34},"end":{"line":28,"column":36}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":19},"end":{"line":36,"column":27}},{"start":{"line":36,"column":30},"end":{"line":36,"column":34}}]},"3":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":23},"end":{"line":54,"column":30}},{"start":{"line":54,"column":34},"end":{"line":54,"column":36}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":10}},{"start":{"line":76,"column":10},"end":{"line":76,"column":10}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]}},"code":["'use strict';","","var Toposort = require('toposort-class')","  , Utils = require('./utils')","  , _ = require('lodash');","","var ModelManager = function(sequelize) {","  this.models = [];","  this.sequelize = sequelize;","};","","ModelManager.prototype.addModel = function(model) {","  this.models.push(model);","  this.sequelize.models[model.name] = model;","","  return model;","};","","ModelManager.prototype.removeModel = function(model) {","  this.models = this.models.filter(function($model) {","    return $model.name !== model.name;","  });","","  delete this.sequelize.models[model.name];","};","","ModelManager.prototype.getModel = function(against, options) {","  options = _.defaults(options || {}, {","    attribute: 'name'","  });","","  var model = this.models.filter(function(model) {","    return model[options.attribute] === against;","  });","","  return !!model ? model[0] : null;","};","","ModelManager.prototype.__defineGetter__('all', function() {","  return this.models;","});","","/**"," * Iterate over Models in an order suitable for e.g. creating tables. Will"," * take foreign key constraints into account so that dependencies are visited"," * before dependents."," */","ModelManager.prototype.forEachModel = function(iterator, options) {","  var models = {}","    , sorter = new Toposort()","    , sorted","    , dep;","","  options = _.defaults(options || {}, {","    reverse: true","  });","","  this.models.forEach(function(model) {","    var deps = []","      , tableName = model.getTableName();","","    if (_.isObject(tableName)) {","      tableName = tableName.schema + '.' + tableName.tableName;","    }","","    models[tableName] = model;","","    for (var attrName in model.rawAttributes) {","      if (model.rawAttributes.hasOwnProperty(attrName)) {","        var attribute = model.rawAttributes[attrName];","","        if (attribute.references) {","          attribute = Utils.formatReferences(attribute);","          dep       = attribute.references.model;","","          if (_.isObject(dep)) {","            dep = dep.schema + '.' + dep.tableName;","          }","","          deps.push(dep);","        }","      }","    }","","    deps = deps.filter(function(dep) {","      return tableName !== dep;","    });","","    sorter.add(tableName, deps);","  });","","  sorted = sorter.sort();","  if (options.reverse) {","    sorted = sorted.reverse();","  }","  sorted.forEach(function(name) {","    iterator(models[name], name);","  });","};","","module.exports = ModelManager;","module.exports.ModelManager = ModelManager;","module.exports.default = ModelManager;",""],"l":{"3":1,"7":1,"8":0,"9":0,"12":1,"13":0,"14":0,"16":0,"19":1,"20":0,"21":0,"24":0,"27":1,"28":0,"32":0,"33":0,"36":0,"39":1,"40":0,"48":1,"49":0,"54":0,"58":0,"59":0,"62":0,"63":0,"66":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"76":0,"77":0,"80":0,"85":0,"86":0,"89":0,"92":0,"93":0,"94":0,"96":0,"97":0,"101":1,"102":1,"103":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/query-interface.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/query-interface.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":1,"208":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":1,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":1,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":1,"350":0,"351":0,"352":0,"353":0,"354":0,"355":1,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":1,"386":0,"387":1,"388":0,"389":1,"390":0,"391":1,"392":0,"393":1,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":1,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":1,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":41}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":40},"end":{"line":22,"column":66}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":38},"end":{"line":28,"column":64}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":42},"end":{"line":34,"column":60}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":44},"end":{"line":41,"column":65}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":42},"end":{"line":47,"column":60}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":60},"end":{"line":57,"column":82}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":31},"end":{"line":59,"column":47}}},"9":{"name":"(anonymous_9)","line":66,"loc":{"start":{"line":66,"column":43},"end":{"line":66,"column":61}}},"10":{"name":"(anonymous_10)","line":73,"loc":{"start":{"line":73,"column":39},"end":{"line":73,"column":87}}},"11":{"name":"(anonymous_11)","line":82,"loc":{"start":{"line":82,"column":45},"end":{"line":82,"column":65}}},"12":{"name":"(anonymous_12)","line":106,"loc":{"start":{"line":106,"column":38},"end":{"line":106,"column":56}}},"13":{"name":"(anonymous_13)","line":123,"loc":{"start":{"line":123,"column":25},"end":{"line":123,"column":46}}},"14":{"name":"(anonymous_14)","line":158,"loc":{"start":{"line":158,"column":40},"end":{"line":158,"column":51}}},"15":{"name":"(anonymous_15)","line":180,"loc":{"start":{"line":180,"column":37},"end":{"line":180,"column":66}}},"16":{"name":"(anonymous_16)","line":188,"loc":{"start":{"line":188,"column":49},"end":{"line":188,"column":60}}},"17":{"name":"(anonymous_17)","line":217,"loc":{"start":{"line":217,"column":41},"end":{"line":217,"column":59}}},"18":{"name":"(anonymous_18)","line":224,"loc":{"start":{"line":224,"column":22},"end":{"line":224,"column":43}}},"19":{"name":"(anonymous_19)","line":225,"loc":{"start":{"line":225,"column":36},"end":{"line":225,"column":56}}},"20":{"name":"(anonymous_20)","line":233,"loc":{"start":{"line":233,"column":42},"end":{"line":233,"column":63}}},"21":{"name":"(anonymous_21)","line":235,"loc":{"start":{"line":235,"column":72},"end":{"line":235,"column":89}}},"22":{"name":"(anonymous_22)","line":239,"loc":{"start":{"line":239,"column":81},"end":{"line":239,"column":92}}},"23":{"name":"(anonymous_23)","line":240,"loc":{"start":{"line":240,"column":50},"end":{"line":240,"column":61}}},"24":{"name":"(anonymous_24)","line":249,"loc":{"start":{"line":249,"column":68},"end":{"line":249,"column":90}}},"25":{"name":"(anonymous_25)","line":252,"loc":{"start":{"line":252,"column":27},"end":{"line":252,"column":47}}},"26":{"name":"(anonymous_26)","line":258,"loc":{"start":{"line":258,"column":51},"end":{"line":258,"column":72}}},"27":{"name":"(anonymous_27)","line":264,"loc":{"start":{"line":264,"column":42},"end":{"line":264,"column":53}}},"28":{"name":"(anonymous_28)","line":272,"loc":{"start":{"line":272,"column":40},"end":{"line":272,"column":58}}},"29":{"name":"(anonymous_29)","line":281,"loc":{"start":{"line":281,"column":45},"end":{"line":281,"column":62}}},"30":{"name":"(anonymous_30)","line":289,"loc":{"start":{"line":289,"column":39},"end":{"line":289,"column":69}}},"31":{"name":"(anonymous_31)","line":295,"loc":{"start":{"line":295,"column":39},"end":{"line":295,"column":72}}},"32":{"name":"(anonymous_32)","line":301,"loc":{"start":{"line":301,"column":41},"end":{"line":301,"column":59}}},"33":{"name":"(anonymous_33)","line":309,"loc":{"start":{"line":309,"column":59},"end":{"line":309,"column":80}}},"34":{"name":"(anonymous_34)","line":314,"loc":{"start":{"line":314,"column":41},"end":{"line":314,"column":70}}},"35":{"name":"(anonymous_35)","line":335,"loc":{"start":{"line":335,"column":9},"end":{"line":335,"column":24}}},"36":{"name":"(anonymous_36)","line":347,"loc":{"start":{"line":347,"column":37},"end":{"line":347,"column":78}}},"37":{"name":"(anonymous_37)","line":357,"loc":{"start":{"line":357,"column":40},"end":{"line":357,"column":84}}},"38":{"name":"(anonymous_38)","line":376,"loc":{"start":{"line":376,"column":40},"end":{"line":376,"column":103}}},"39":{"name":"(anonymous_39)","line":399,"loc":{"start":{"line":399,"column":40},"end":{"line":399,"column":100}}},"40":{"name":"(anonymous_40)","line":401,"loc":{"start":{"line":401,"column":53},"end":{"line":401,"column":68}}},"41":{"name":"(anonymous_41)","line":432,"loc":{"start":{"line":432,"column":36},"end":{"line":432,"column":91}}},"42":{"name":"(anonymous_42)","line":452,"loc":{"start":{"line":452,"column":37},"end":{"line":452,"column":66}}},"43":{"name":"(anonymous_43)","line":457,"loc":{"start":{"line":457,"column":39},"end":{"line":457,"column":71}}},"44":{"name":"(anonymous_44)","line":461,"loc":{"start":{"line":461,"column":51},"end":{"line":461,"column":81}}},"45":{"name":"(anonymous_45)","line":469,"loc":{"start":{"line":469,"column":33},"end":{"line":469,"column":53}}},"46":{"name":"(anonymous_46)","line":471,"loc":{"start":{"line":471,"column":10},"end":{"line":471,"column":28}}},"47":{"name":"(anonymous_47)","line":474,"loc":{"start":{"line":474,"column":23},"end":{"line":474,"column":46}}},"48":{"name":"(anonymous_48)","line":479,"loc":{"start":{"line":479,"column":58},"end":{"line":479,"column":70}}},"49":{"name":"(anonymous_49)","line":488,"loc":{"start":{"line":488,"column":39},"end":{"line":488,"column":91}}},"50":{"name":"(anonymous_50)","line":494,"loc":{"start":{"line":494,"column":34},"end":{"line":494,"column":81}}},"51":{"name":"(anonymous_51)","line":502,"loc":{"start":{"line":502,"column":49},"end":{"line":502,"column":66}}},"52":{"name":"(anonymous_52)","line":508,"loc":{"start":{"line":508,"column":34},"end":{"line":508,"column":106}}},"53":{"name":"(anonymous_53)","line":521,"loc":{"start":{"line":521,"column":50},"end":{"line":521,"column":67}}},"54":{"name":"(anonymous_54)","line":525,"loc":{"start":{"line":525,"column":38},"end":{"line":525,"column":55}}},"55":{"name":"(anonymous_55)","line":528,"loc":{"start":{"line":528,"column":46},"end":{"line":528,"column":63}}},"56":{"name":"(anonymous_56)","line":538,"loc":{"start":{"line":538,"column":18},"end":{"line":538,"column":35}}},"57":{"name":"(anonymous_57)","line":541,"loc":{"start":{"line":541,"column":20},"end":{"line":541,"column":37}}},"58":{"name":"(anonymous_58)","line":554,"loc":{"start":{"line":554,"column":49},"end":{"line":554,"column":69}}},"59":{"name":"(anonymous_59)","line":565,"loc":{"start":{"line":565,"column":38},"end":{"line":565,"column":88}}},"60":{"name":"(anonymous_60)","line":572,"loc":{"start":{"line":572,"column":34},"end":{"line":572,"column":93}}},"61":{"name":"(anonymous_61)","line":600,"loc":{"start":{"line":600,"column":38},"end":{"line":600,"column":99}}},"62":{"name":"(anonymous_62)","line":612,"loc":{"start":{"line":612,"column":34},"end":{"line":612,"column":85}}},"63":{"name":"(anonymous_63)","line":635,"loc":{"start":{"line":635,"column":32},"end":{"line":635,"column":51}}},"64":{"name":"(anonymous_64)","line":636,"loc":{"start":{"line":636,"column":43},"end":{"line":636,"column":64}}},"65":{"name":"(anonymous_65)","line":644,"loc":{"start":{"line":644,"column":37},"end":{"line":644,"column":57}}},"66":{"name":"(anonymous_66)","line":648,"loc":{"start":{"line":648,"column":10},"end":{"line":648,"column":22}}},"67":{"name":"(anonymous_67)","line":654,"loc":{"start":{"line":654,"column":38},"end":{"line":654,"column":86}}},"68":{"name":"(anonymous_68)","line":663,"loc":{"start":{"line":663,"column":34},"end":{"line":663,"column":70}}},"69":{"name":"(anonymous_69)","line":674,"loc":{"start":{"line":674,"column":37},"end":{"line":674,"column":96}}},"70":{"name":"(anonymous_70)","line":684,"loc":{"start":{"line":684,"column":37},"end":{"line":684,"column":92}}},"71":{"name":"(anonymous_71)","line":705,"loc":{"start":{"line":705,"column":49},"end":{"line":705,"column":64}}},"72":{"name":"(anonymous_72)","line":732,"loc":{"start":{"line":732,"column":41},"end":{"line":732,"column":152}}},"73":{"name":"(anonymous_73)","line":742,"loc":{"start":{"line":742,"column":39},"end":{"line":742,"column":81}}},"74":{"name":"(anonymous_74)","line":753,"loc":{"start":{"line":753,"column":41},"end":{"line":753,"column":102}}},"75":{"name":"(anonymous_75)","line":764,"loc":{"start":{"line":764,"column":42},"end":{"line":764,"column":110}}},"76":{"name":"(anonymous_76)","line":775,"loc":{"start":{"line":775,"column":40},"end":{"line":775,"column":80}}},"77":{"name":"(anonymous_77)","line":786,"loc":{"start":{"line":786,"column":42},"end":{"line":786,"column":102}}},"78":{"name":"(anonymous_78)","line":804,"loc":{"start":{"line":804,"column":43},"end":{"line":804,"column":71}}},"79":{"name":"(anonymous_79)","line":808,"loc":{"start":{"line":808,"column":38},"end":{"line":808,"column":59}}},"80":{"name":"(anonymous_80)","line":817,"loc":{"start":{"line":817,"column":44},"end":{"line":817,"column":73}}},"81":{"name":"(anonymous_81)","line":824,"loc":{"start":{"line":824,"column":34},"end":{"line":824,"column":50}}},"82":{"name":"(anonymous_82)","line":828,"loc":{"start":{"line":828,"column":41},"end":{"line":828,"column":79}}},"83":{"name":"(anonymous_83)","line":850,"loc":{"start":{"line":850,"column":45},"end":{"line":850,"column":83}}},"84":{"name":"(anonymous_84)","line":872,"loc":{"start":{"line":872,"column":44},"end":{"line":872,"column":75}}},"85":{"name":"(anonymous_85)","line":886,"loc":{"start":{"line":886,"column":44},"end":{"line":886,"column":76}}},"86":{"name":"(anonymous_86)","line":900,"loc":{"start":{"line":900,"column":45},"end":{"line":900,"column":76}}},"87":{"name":"(anonymous_87)","line":922,"loc":{"start":{"line":922,"column":47},"end":{"line":922,"column":78}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":42}},"2":{"start":{"line":17,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":29}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":62}},"5":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":53}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":44}},"9":{"start":{"line":28,"column":0},"end":{"line":32,"column":2}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":26}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":51}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":44}},"13":{"start":{"line":34,"column":0},"end":{"line":45,"column":2}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":26}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":18}},"16":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":40}},"18":{"start":{"line":41,"column":4},"end":{"line":43,"column":7}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":50}},"20":{"start":{"line":47,"column":0},"end":{"line":64,"column":2}},"21":{"start":{"line":48,"column":2},"end":{"line":48,"column":18}},"22":{"start":{"line":50,"column":2},"end":{"line":53,"column":5}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":62}},"24":{"start":{"line":57,"column":2},"end":{"line":63,"column":5}},"25":{"start":{"line":58,"column":4},"end":{"line":62,"column":6}},"26":{"start":{"line":60,"column":8},"end":{"line":60,"column":65}},"27":{"start":{"line":66,"column":0},"end":{"line":71,"column":2}},"28":{"start":{"line":67,"column":2},"end":{"line":70,"column":4}},"29":{"start":{"line":73,"column":0},"end":{"line":178,"column":2}},"30":{"start":{"line":74,"column":2},"end":{"line":78,"column":12}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":35}},"32":{"start":{"line":82,"column":2},"end":{"line":90,"column":5}},"33":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"34":{"start":{"line":84,"column":6},"end":{"line":84,"column":55}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":61}},"36":{"start":{"line":89,"column":4},"end":{"line":89,"column":21}},"37":{"start":{"line":93,"column":2},"end":{"line":177,"column":3}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"39":{"start":{"line":96,"column":4},"end":{"line":104,"column":5}},"40":{"start":{"line":97,"column":6},"end":{"line":103,"column":7}},"41":{"start":{"line":98,"column":8},"end":{"line":98,"column":104}},"42":{"start":{"line":99,"column":8},"end":{"line":102,"column":11}},"43":{"start":{"line":106,"column":4},"end":{"line":161,"column":7}},"44":{"start":{"line":107,"column":6},"end":{"line":108,"column":22}},"45":{"start":{"line":110,"column":6},"end":{"line":143,"column":7}},"46":{"start":{"line":111,"column":8},"end":{"line":142,"column":9}},"47":{"start":{"line":113,"column":10},"end":{"line":141,"column":11}},"48":{"start":{"line":114,"column":12},"end":{"line":114,"column":124}},"49":{"start":{"line":115,"column":12},"end":{"line":118,"column":15}},"50":{"start":{"line":119,"column":17},"end":{"line":141,"column":11}},"51":{"start":{"line":120,"column":12},"end":{"line":121,"column":59}},"52":{"start":{"line":123,"column":12},"end":{"line":139,"column":15}},"53":{"start":{"line":125,"column":14},"end":{"line":125,"column":50}},"54":{"start":{"line":126,"column":14},"end":{"line":126,"column":41}},"55":{"start":{"line":127,"column":14},"end":{"line":127,"column":40}},"56":{"start":{"line":129,"column":14},"end":{"line":138,"column":15}},"57":{"start":{"line":130,"column":16},"end":{"line":135,"column":17}},"58":{"start":{"line":131,"column":18},"end":{"line":131,"column":54}},"59":{"start":{"line":133,"column":21},"end":{"line":135,"column":17}},"60":{"start":{"line":134,"column":18},"end":{"line":134,"column":53}},"61":{"start":{"line":136,"column":16},"end":{"line":136,"column":56}},"62":{"start":{"line":137,"column":16},"end":{"line":137,"column":138}},"63":{"start":{"line":140,"column":12},"end":{"line":140,"column":22}},"64":{"start":{"line":145,"column":6},"end":{"line":151,"column":7}},"65":{"start":{"line":147,"column":8},"end":{"line":150,"column":11}},"66":{"start":{"line":153,"column":6},"end":{"line":155,"column":9}},"67":{"start":{"line":156,"column":6},"end":{"line":156,"column":81}},"68":{"start":{"line":158,"column":6},"end":{"line":160,"column":9}},"69":{"start":{"line":159,"column":8},"end":{"line":159,"column":50}},"70":{"start":{"line":163,"column":4},"end":{"line":169,"column":5}},"71":{"start":{"line":165,"column":6},"end":{"line":168,"column":9}},"72":{"start":{"line":171,"column":4},"end":{"line":173,"column":7}},"73":{"start":{"line":174,"column":4},"end":{"line":174,"column":79}},"74":{"start":{"line":176,"column":4},"end":{"line":176,"column":46}},"75":{"start":{"line":180,"column":0},"end":{"line":215,"column":2}},"76":{"start":{"line":182,"column":2},"end":{"line":182,"column":35}},"77":{"start":{"line":183,"column":2},"end":{"line":183,"column":62}},"78":{"start":{"line":185,"column":2},"end":{"line":186,"column":18}},"79":{"start":{"line":188,"column":2},"end":{"line":214,"column":5}},"80":{"start":{"line":189,"column":4},"end":{"line":189,"column":22}},"81":{"start":{"line":193,"column":4},"end":{"line":211,"column":5}},"82":{"start":{"line":194,"column":6},"end":{"line":194,"column":102}},"83":{"start":{"line":196,"column":6},"end":{"line":210,"column":7}},"84":{"start":{"line":197,"column":8},"end":{"line":197,"column":128}},"85":{"start":{"line":199,"column":8},"end":{"line":201,"column":18}},"86":{"start":{"line":203,"column":8},"end":{"line":209,"column":9}},"87":{"start":{"line":204,"column":10},"end":{"line":208,"column":11}},"88":{"start":{"line":205,"column":12},"end":{"line":205,"column":72}},"89":{"start":{"line":206,"column":12},"end":{"line":206,"column":47}},"90":{"start":{"line":207,"column":12},"end":{"line":207,"column":91}},"91":{"start":{"line":213,"column":4},"end":{"line":213,"column":40}},"92":{"start":{"line":217,"column":0},"end":{"line":270,"column":2}},"93":{"start":{"line":218,"column":2},"end":{"line":219,"column":11}},"94":{"start":{"line":221,"column":2},"end":{"line":221,"column":26}},"95":{"start":{"line":222,"column":2},"end":{"line":222,"column":28}},"96":{"start":{"line":224,"column":2},"end":{"line":231,"column":4}},"97":{"start":{"line":225,"column":4},"end":{"line":230,"column":7}},"98":{"start":{"line":227,"column":6},"end":{"line":229,"column":7}},"99":{"start":{"line":228,"column":8},"end":{"line":228,"column":84}},"100":{"start":{"line":233,"column":2},"end":{"line":269,"column":5}},"101":{"start":{"line":234,"column":4},"end":{"line":268,"column":5}},"102":{"start":{"line":235,"column":6},"end":{"line":247,"column":9}},"103":{"start":{"line":236,"column":8},"end":{"line":236,"column":62}},"104":{"start":{"line":238,"column":8},"end":{"line":246,"column":9}},"105":{"start":{"line":239,"column":10},"end":{"line":243,"column":13}},"106":{"start":{"line":240,"column":12},"end":{"line":242,"column":15}},"107":{"start":{"line":241,"column":14},"end":{"line":241,"column":79}},"108":{"start":{"line":245,"column":10},"end":{"line":245,"column":43}},"109":{"start":{"line":249,"column":6},"end":{"line":267,"column":9}},"110":{"start":{"line":250,"column":8},"end":{"line":250,"column":26}},"111":{"start":{"line":252,"column":8},"end":{"line":262,"column":11}},"112":{"start":{"line":253,"column":10},"end":{"line":253,"column":46}},"113":{"start":{"line":254,"column":10},"end":{"line":256,"column":11}},"114":{"start":{"line":255,"column":13},"end":{"line":255,"column":80}},"115":{"start":{"line":258,"column":10},"end":{"line":261,"column":13}},"116":{"start":{"line":259,"column":12},"end":{"line":259,"column":85}},"117":{"start":{"line":260,"column":12},"end":{"line":260,"column":62}},"118":{"start":{"line":264,"column":8},"end":{"line":266,"column":11}},"119":{"start":{"line":265,"column":10},"end":{"line":265,"column":43}},"120":{"start":{"line":272,"column":0},"end":{"line":287,"column":2}},"121":{"start":{"line":273,"column":2},"end":{"line":275,"column":3}},"122":{"start":{"line":274,"column":4},"end":{"line":274,"column":29}},"123":{"start":{"line":277,"column":2},"end":{"line":277,"column":26}},"124":{"start":{"line":279,"column":2},"end":{"line":279,"column":18}},"125":{"start":{"line":281,"column":2},"end":{"line":286,"column":5}},"126":{"start":{"line":282,"column":4},"end":{"line":285,"column":6}},"127":{"start":{"line":289,"column":0},"end":{"line":293,"column":2}},"128":{"start":{"line":290,"column":2},"end":{"line":290,"column":26}},"129":{"start":{"line":291,"column":2},"end":{"line":291,"column":55}},"130":{"start":{"line":292,"column":2},"end":{"line":292,"column":112}},"131":{"start":{"line":295,"column":0},"end":{"line":299,"column":2}},"132":{"start":{"line":296,"column":2},"end":{"line":296,"column":26}},"133":{"start":{"line":297,"column":2},"end":{"line":297,"column":64}},"134":{"start":{"line":298,"column":2},"end":{"line":298,"column":44}},"135":{"start":{"line":301,"column":0},"end":{"line":312,"column":2}},"136":{"start":{"line":302,"column":2},"end":{"line":302,"column":18}},"137":{"start":{"line":303,"column":2},"end":{"line":306,"column":5}},"138":{"start":{"line":308,"column":2},"end":{"line":308,"column":60}},"139":{"start":{"line":309,"column":2},"end":{"line":311,"column":5}},"140":{"start":{"line":310,"column":4},"end":{"line":310,"column":39}},"141":{"start":{"line":314,"column":0},"end":{"line":345,"column":2}},"142":{"start":{"line":315,"column":2},"end":{"line":316,"column":29}},"143":{"start":{"line":318,"column":2},"end":{"line":323,"column":3}},"144":{"start":{"line":319,"column":4},"end":{"line":319,"column":21}},"145":{"start":{"line":320,"column":9},"end":{"line":323,"column":3}},"146":{"start":{"line":321,"column":4},"end":{"line":321,"column":36}},"147":{"start":{"line":322,"column":4},"end":{"line":322,"column":54}},"148":{"start":{"line":325,"column":2},"end":{"line":328,"column":3}},"149":{"start":{"line":326,"column":4},"end":{"line":326,"column":30}},"150":{"start":{"line":327,"column":4},"end":{"line":327,"column":36}},"151":{"start":{"line":330,"column":2},"end":{"line":330,"column":87}},"152":{"start":{"line":332,"column":2},"end":{"line":344,"column":5}},"153":{"start":{"line":339,"column":4},"end":{"line":343,"column":5}},"154":{"start":{"line":340,"column":6},"end":{"line":340,"column":153}},"155":{"start":{"line":342,"column":6},"end":{"line":342,"column":35}},"156":{"start":{"line":347,"column":0},"end":{"line":355,"column":2}},"157":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"158":{"start":{"line":349,"column":4},"end":{"line":349,"column":105}},"159":{"start":{"line":352,"column":2},"end":{"line":352,"column":26}},"160":{"start":{"line":353,"column":2},"end":{"line":353,"column":59}},"161":{"start":{"line":354,"column":2},"end":{"line":354,"column":98}},"162":{"start":{"line":357,"column":0},"end":{"line":374,"column":2}},"163":{"start":{"line":358,"column":2},"end":{"line":358,"column":26}},"164":{"start":{"line":359,"column":2},"end":{"line":373,"column":3}},"165":{"start":{"line":362,"column":6},"end":{"line":362,"column":93}},"166":{"start":{"line":365,"column":6},"end":{"line":365,"column":93}},"167":{"start":{"line":369,"column":6},"end":{"line":369,"column":92}},"168":{"start":{"line":371,"column":8},"end":{"line":371,"column":82}},"169":{"start":{"line":372,"column":8},"end":{"line":372,"column":50}},"170":{"start":{"line":376,"column":0},"end":{"line":397,"column":2}},"171":{"start":{"line":377,"column":2},"end":{"line":377,"column":22}},"172":{"start":{"line":378,"column":2},"end":{"line":378,"column":26}},"173":{"start":{"line":380,"column":2},"end":{"line":384,"column":3}},"174":{"start":{"line":381,"column":4},"end":{"line":381,"column":77}},"175":{"start":{"line":383,"column":4},"end":{"line":383,"column":50}},"176":{"start":{"line":386,"column":2},"end":{"line":386,"column":100}},"177":{"start":{"line":388,"column":2},"end":{"line":396,"column":3}},"178":{"start":{"line":390,"column":4},"end":{"line":390,"column":88}},"179":{"start":{"line":392,"column":4},"end":{"line":393,"column":70}},"180":{"start":{"line":395,"column":4},"end":{"line":395,"column":46}},"181":{"start":{"line":399,"column":0},"end":{"line":430,"column":2}},"182":{"start":{"line":400,"column":2},"end":{"line":400,"column":26}},"183":{"start":{"line":401,"column":2},"end":{"line":429,"column":16}},"184":{"start":{"line":402,"column":4},"end":{"line":402,"column":38}},"185":{"start":{"line":404,"column":4},"end":{"line":404,"column":22}},"186":{"start":{"line":406,"column":4},"end":{"line":411,"column":6}},"187":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"188":{"start":{"line":415,"column":6},"end":{"line":415,"column":50}},"189":{"start":{"line":418,"column":4},"end":{"line":428,"column":5}},"190":{"start":{"line":420,"column":6},"end":{"line":420,"column":109}},"191":{"start":{"line":422,"column":6},"end":{"line":426,"column":8}},"192":{"start":{"line":427,"column":6},"end":{"line":427,"column":48}},"193":{"start":{"line":432,"column":0},"end":{"line":450,"column":2}},"194":{"start":{"line":434,"column":2},"end":{"line":438,"column":3}},"195":{"start":{"line":435,"column":4},"end":{"line":435,"column":27}},"196":{"start":{"line":436,"column":4},"end":{"line":436,"column":25}},"197":{"start":{"line":437,"column":4},"end":{"line":437,"column":32}},"198":{"start":{"line":441,"column":2},"end":{"line":444,"column":3}},"199":{"start":{"line":443,"column":4},"end":{"line":443,"column":29}},"200":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}},"201":{"start":{"line":447,"column":2},"end":{"line":447,"column":30}},"202":{"start":{"line":448,"column":2},"end":{"line":448,"column":80}},"203":{"start":{"line":449,"column":2},"end":{"line":449,"column":89}},"204":{"start":{"line":452,"column":0},"end":{"line":455,"column":2}},"205":{"start":{"line":453,"column":2},"end":{"line":453,"column":69}},"206":{"start":{"line":454,"column":2},"end":{"line":454,"column":92}},"207":{"start":{"line":457,"column":0},"end":{"line":459,"column":2}},"208":{"start":{"line":458,"column":2},"end":{"line":458,"column":64}},"209":{"start":{"line":461,"column":0},"end":{"line":486,"column":2}},"210":{"start":{"line":462,"column":2},"end":{"line":462,"column":18}},"211":{"start":{"line":463,"column":2},"end":{"line":463,"column":26}},"212":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"213":{"start":{"line":466,"column":4},"end":{"line":466,"column":31}},"214":{"start":{"line":469,"column":2},"end":{"line":485,"column":5}},"215":{"start":{"line":470,"column":4},"end":{"line":470,"column":132}},"216":{"start":{"line":472,"column":4},"end":{"line":472,"column":20}},"217":{"start":{"line":474,"column":4},"end":{"line":482,"column":7}},"218":{"start":{"line":475,"column":6},"end":{"line":477,"column":7}},"219":{"start":{"line":476,"column":8},"end":{"line":476,"column":65}},"220":{"start":{"line":479,"column":6},"end":{"line":481,"column":9}},"221":{"start":{"line":480,"column":8},"end":{"line":480,"column":33}},"222":{"start":{"line":484,"column":4},"end":{"line":484,"column":18}},"223":{"start":{"line":488,"column":0},"end":{"line":492,"column":2}},"224":{"start":{"line":489,"column":2},"end":{"line":489,"column":26}},"225":{"start":{"line":490,"column":2},"end":{"line":490,"column":83}},"226":{"start":{"line":491,"column":2},"end":{"line":491,"column":44}},"227":{"start":{"line":494,"column":0},"end":{"line":506,"column":2}},"228":{"start":{"line":495,"column":2},"end":{"line":495,"column":37}},"229":{"start":{"line":496,"column":2},"end":{"line":496,"column":69}},"230":{"start":{"line":497,"column":2},"end":{"line":497,"column":114}},"231":{"start":{"line":499,"column":2},"end":{"line":499,"column":35}},"232":{"start":{"line":500,"column":2},"end":{"line":500,"column":30}},"233":{"start":{"line":502,"column":2},"end":{"line":505,"column":5}},"234":{"start":{"line":503,"column":4},"end":{"line":503,"column":45}},"235":{"start":{"line":503,"column":18},"end":{"line":503,"column":45}},"236":{"start":{"line":504,"column":4},"end":{"line":504,"column":18}},"237":{"start":{"line":508,"column":0},"end":{"line":563,"column":2}},"238":{"start":{"line":509,"column":2},"end":{"line":512,"column":46}},"239":{"start":{"line":514,"column":2},"end":{"line":514,"column":29}},"240":{"start":{"line":516,"column":2},"end":{"line":518,"column":3}},"241":{"start":{"line":517,"column":4},"end":{"line":517,"column":23}},"242":{"start":{"line":521,"column":2},"end":{"line":523,"column":5}},"243":{"start":{"line":522,"column":4},"end":{"line":522,"column":24}},"244":{"start":{"line":525,"column":2},"end":{"line":536,"column":5}},"245":{"start":{"line":526,"column":4},"end":{"line":535,"column":5}},"246":{"start":{"line":528,"column":6},"end":{"line":533,"column":9}},"247":{"start":{"line":529,"column":8},"end":{"line":531,"column":9}},"248":{"start":{"line":530,"column":10},"end":{"line":530,"column":33}},"249":{"start":{"line":532,"column":8},"end":{"line":532,"column":21}},"250":{"start":{"line":534,"column":6},"end":{"line":534,"column":32}},"251":{"start":{"line":538,"column":2},"end":{"line":546,"column":5}},"252":{"start":{"line":539,"column":4},"end":{"line":545,"column":5}},"253":{"start":{"line":540,"column":6},"end":{"line":540,"column":17}},"254":{"start":{"line":541,"column":6},"end":{"line":543,"column":9}},"255":{"start":{"line":542,"column":8},"end":{"line":542,"column":44}},"256":{"start":{"line":544,"column":6},"end":{"line":544,"column":25}},"257":{"start":{"line":548,"column":2},"end":{"line":548,"column":26}},"258":{"start":{"line":550,"column":2},"end":{"line":550,"column":35}},"259":{"start":{"line":551,"column":2},"end":{"line":551,"column":21}},"260":{"start":{"line":553,"column":2},"end":{"line":553,"column":121}},"261":{"start":{"line":554,"column":2},"end":{"line":562,"column":5}},"262":{"start":{"line":555,"column":4},"end":{"line":557,"column":5}},"263":{"start":{"line":556,"column":6},"end":{"line":556,"column":22}},"264":{"start":{"line":561,"column":4},"end":{"line":561,"column":26}},"265":{"start":{"line":565,"column":0},"end":{"line":570,"column":2}},"266":{"start":{"line":566,"column":2},"end":{"line":566,"column":35}},"267":{"start":{"line":567,"column":2},"end":{"line":567,"column":35}},"268":{"start":{"line":568,"column":2},"end":{"line":568,"column":89}},"269":{"start":{"line":569,"column":2},"end":{"line":569,"column":44}},"270":{"start":{"line":572,"column":0},"end":{"line":598,"column":2}},"271":{"start":{"line":573,"column":2},"end":{"line":573,"column":35}},"272":{"start":{"line":574,"column":2},"end":{"line":574,"column":99}},"273":{"start":{"line":577,"column":2},"end":{"line":579,"column":114}},"274":{"start":{"line":582,"column":2},"end":{"line":582,"column":35}},"275":{"start":{"line":585,"column":2},"end":{"line":594,"column":3}},"276":{"start":{"line":586,"column":4},"end":{"line":587,"column":29}},"277":{"start":{"line":589,"column":4},"end":{"line":593,"column":5}},"278":{"start":{"line":590,"column":6},"end":{"line":592,"column":7}},"279":{"start":{"line":591,"column":8},"end":{"line":591,"column":24}},"280":{"start":{"line":596,"column":2},"end":{"line":596,"column":30}},"281":{"start":{"line":597,"column":2},"end":{"line":597,"column":44}},"282":{"start":{"line":600,"column":0},"end":{"line":610,"column":2}},"283":{"start":{"line":601,"column":2},"end":{"line":601,"column":37}},"284":{"start":{"line":602,"column":2},"end":{"line":602,"column":79}},"285":{"start":{"line":602,"column":38},"end":{"line":602,"column":79}},"286":{"start":{"line":604,"column":2},"end":{"line":606,"column":95}},"287":{"start":{"line":608,"column":2},"end":{"line":608,"column":24}},"288":{"start":{"line":609,"column":2},"end":{"line":609,"column":44}},"289":{"start":{"line":612,"column":0},"end":{"line":652,"column":2}},"290":{"start":{"line":613,"column":2},"end":{"line":615,"column":89}},"291":{"start":{"line":617,"column":2},"end":{"line":617,"column":35}},"292":{"start":{"line":620,"column":2},"end":{"line":633,"column":3}},"293":{"start":{"line":621,"column":4},"end":{"line":623,"column":20}},"294":{"start":{"line":625,"column":4},"end":{"line":632,"column":5}},"295":{"start":{"line":626,"column":6},"end":{"line":626,"column":57}},"296":{"start":{"line":627,"column":6},"end":{"line":631,"column":7}},"297":{"start":{"line":630,"column":8},"end":{"line":630,"column":49}},"298":{"start":{"line":635,"column":2},"end":{"line":651,"column":5}},"299":{"start":{"line":636,"column":4},"end":{"line":647,"column":7}},"300":{"start":{"line":638,"column":6},"end":{"line":640,"column":7}},"301":{"start":{"line":639,"column":8},"end":{"line":639,"column":33}},"302":{"start":{"line":642,"column":6},"end":{"line":642,"column":61}},"303":{"start":{"line":642,"column":37},"end":{"line":642,"column":61}},"304":{"start":{"line":644,"column":6},"end":{"line":646,"column":9}},"305":{"start":{"line":645,"column":8},"end":{"line":645,"column":41}},"306":{"start":{"line":649,"column":4},"end":{"line":649,"column":32}},"307":{"start":{"line":650,"column":4},"end":{"line":650,"column":46}},"308":{"start":{"line":654,"column":0},"end":{"line":661,"column":2}},"309":{"start":{"line":655,"column":2},"end":{"line":655,"column":37}},"310":{"start":{"line":656,"column":2},"end":{"line":656,"column":47}},"311":{"start":{"line":657,"column":2},"end":{"line":657,"column":79}},"312":{"start":{"line":657,"column":38},"end":{"line":657,"column":79}},"313":{"start":{"line":659,"column":2},"end":{"line":659,"column":83}},"314":{"start":{"line":660,"column":2},"end":{"line":660,"column":44}},"315":{"start":{"line":663,"column":0},"end":{"line":672,"column":2}},"316":{"start":{"line":664,"column":2},"end":{"line":664,"column":37}},"317":{"start":{"line":665,"column":2},"end":{"line":665,"column":35}},"318":{"start":{"line":666,"column":2},"end":{"line":666,"column":24}},"319":{"start":{"line":668,"column":2},"end":{"line":671,"column":4}},"320":{"start":{"line":674,"column":0},"end":{"line":682,"column":2}},"321":{"start":{"line":675,"column":2},"end":{"line":675,"column":98}},"322":{"start":{"line":677,"column":2},"end":{"line":677,"column":35}},"323":{"start":{"line":679,"column":2},"end":{"line":679,"column":35}},"324":{"start":{"line":680,"column":2},"end":{"line":680,"column":30}},"325":{"start":{"line":681,"column":2},"end":{"line":681,"column":44}},"326":{"start":{"line":684,"column":0},"end":{"line":730,"column":2}},"327":{"start":{"line":685,"column":2},"end":{"line":690,"column":3}},"328":{"start":{"line":686,"column":4},"end":{"line":689,"column":7}},"329":{"start":{"line":692,"column":2},"end":{"line":692,"column":37}},"330":{"start":{"line":693,"column":2},"end":{"line":697,"column":5}},"331":{"start":{"line":699,"column":2},"end":{"line":699,"column":71}},"332":{"start":{"line":701,"column":2},"end":{"line":703,"column":3}},"333":{"start":{"line":702,"column":4},"end":{"line":702,"column":58}},"334":{"start":{"line":705,"column":2},"end":{"line":729,"column":5}},"335":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"336":{"start":{"line":707,"column":6},"end":{"line":707,"column":18}},"337":{"start":{"line":710,"column":4},"end":{"line":710,"column":55}},"338":{"start":{"line":712,"column":4},"end":{"line":726,"column":5}},"339":{"start":{"line":713,"column":6},"end":{"line":713,"column":38}},"340":{"start":{"line":715,"column":6},"end":{"line":725,"column":7}},"341":{"start":{"line":716,"column":8},"end":{"line":716,"column":36}},"342":{"start":{"line":717,"column":13},"end":{"line":725,"column":7}},"343":{"start":{"line":718,"column":8},"end":{"line":718,"column":38}},"344":{"start":{"line":719,"column":13},"end":{"line":725,"column":7}},"345":{"start":{"line":720,"column":8},"end":{"line":722,"column":9}},"346":{"start":{"line":721,"column":10},"end":{"line":721,"column":36}},"347":{"start":{"line":723,"column":13},"end":{"line":725,"column":7}},"348":{"start":{"line":728,"column":4},"end":{"line":728,"column":18}},"349":{"start":{"line":732,"column":0},"end":{"line":740,"column":2}},"350":{"start":{"line":733,"column":2},"end":{"line":733,"column":139}},"351":{"start":{"line":734,"column":2},"end":{"line":734,"column":26}},"352":{"start":{"line":735,"column":2},"end":{"line":739,"column":3}},"353":{"start":{"line":736,"column":4},"end":{"line":736,"column":46}},"354":{"start":{"line":738,"column":4},"end":{"line":738,"column":29}},"355":{"start":{"line":742,"column":0},"end":{"line":751,"column":2}},"356":{"start":{"line":743,"column":2},"end":{"line":743,"column":68}},"357":{"start":{"line":744,"column":2},"end":{"line":744,"column":26}},"358":{"start":{"line":746,"column":2},"end":{"line":750,"column":3}},"359":{"start":{"line":747,"column":4},"end":{"line":747,"column":46}},"360":{"start":{"line":749,"column":4},"end":{"line":749,"column":29}},"361":{"start":{"line":753,"column":0},"end":{"line":762,"column":2}},"362":{"start":{"line":754,"column":2},"end":{"line":754,"column":89}},"363":{"start":{"line":755,"column":2},"end":{"line":755,"column":26}},"364":{"start":{"line":757,"column":2},"end":{"line":761,"column":3}},"365":{"start":{"line":758,"column":4},"end":{"line":758,"column":46}},"366":{"start":{"line":760,"column":4},"end":{"line":760,"column":29}},"367":{"start":{"line":764,"column":0},"end":{"line":773,"column":2}},"368":{"start":{"line":765,"column":2},"end":{"line":765,"column":106}},"369":{"start":{"line":766,"column":2},"end":{"line":766,"column":26}},"370":{"start":{"line":768,"column":2},"end":{"line":772,"column":3}},"371":{"start":{"line":769,"column":4},"end":{"line":769,"column":46}},"372":{"start":{"line":771,"column":4},"end":{"line":771,"column":29}},"373":{"start":{"line":775,"column":0},"end":{"line":784,"column":2}},"374":{"start":{"line":776,"column":2},"end":{"line":776,"column":67}},"375":{"start":{"line":777,"column":2},"end":{"line":777,"column":26}},"376":{"start":{"line":779,"column":2},"end":{"line":783,"column":3}},"377":{"start":{"line":780,"column":4},"end":{"line":780,"column":46}},"378":{"start":{"line":782,"column":4},"end":{"line":782,"column":29}},"379":{"start":{"line":786,"column":0},"end":{"line":795,"column":2}},"380":{"start":{"line":787,"column":2},"end":{"line":787,"column":89}},"381":{"start":{"line":788,"column":2},"end":{"line":788,"column":26}},"382":{"start":{"line":790,"column":2},"end":{"line":794,"column":3}},"383":{"start":{"line":791,"column":4},"end":{"line":791,"column":46}},"384":{"start":{"line":793,"column":4},"end":{"line":793,"column":29}},"385":{"start":{"line":804,"column":0},"end":{"line":806,"column":2}},"386":{"start":{"line":805,"column":2},"end":{"line":805,"column":64}},"387":{"start":{"line":808,"column":0},"end":{"line":810,"column":2}},"388":{"start":{"line":809,"column":2},"end":{"line":809,"column":52}},"389":{"start":{"line":817,"column":0},"end":{"line":819,"column":2}},"390":{"start":{"line":818,"column":2},"end":{"line":818,"column":66}},"391":{"start":{"line":824,"column":0},"end":{"line":826,"column":2}},"392":{"start":{"line":825,"column":2},"end":{"line":825,"column":43}},"393":{"start":{"line":828,"column":0},"end":{"line":848,"column":2}},"394":{"start":{"line":829,"column":2},"end":{"line":831,"column":3}},"395":{"start":{"line":830,"column":4},"end":{"line":830,"column":94}},"396":{"start":{"line":832,"column":2},"end":{"line":835,"column":3}},"397":{"start":{"line":834,"column":4},"end":{"line":834,"column":29}},"398":{"start":{"line":837,"column":2},"end":{"line":839,"column":5}},"399":{"start":{"line":841,"column":2},"end":{"line":843,"column":5}},"400":{"start":{"line":845,"column":2},"end":{"line":845,"column":37}},"401":{"start":{"line":845,"column":12},"end":{"line":845,"column":37}},"402":{"start":{"line":847,"column":2},"end":{"line":847,"column":44}},"403":{"start":{"line":850,"column":0},"end":{"line":870,"column":2}},"404":{"start":{"line":851,"column":2},"end":{"line":853,"column":3}},"405":{"start":{"line":852,"column":4},"end":{"line":852,"column":99}},"406":{"start":{"line":854,"column":2},"end":{"line":857,"column":3}},"407":{"start":{"line":856,"column":4},"end":{"line":856,"column":29}},"408":{"start":{"line":859,"column":2},"end":{"line":861,"column":5}},"409":{"start":{"line":863,"column":2},"end":{"line":865,"column":5}},"410":{"start":{"line":867,"column":2},"end":{"line":867,"column":37}},"411":{"start":{"line":867,"column":12},"end":{"line":867,"column":37}},"412":{"start":{"line":869,"column":2},"end":{"line":869,"column":44}},"413":{"start":{"line":872,"column":0},"end":{"line":884,"column":2}},"414":{"start":{"line":873,"column":2},"end":{"line":875,"column":3}},"415":{"start":{"line":874,"column":4},"end":{"line":874,"column":81}},"416":{"start":{"line":877,"column":2},"end":{"line":879,"column":5}},"417":{"start":{"line":880,"column":2},"end":{"line":880,"column":79}},"418":{"start":{"line":881,"column":2},"end":{"line":881,"column":67}},"419":{"start":{"line":883,"column":2},"end":{"line":883,"column":44}},"420":{"start":{"line":886,"column":0},"end":{"line":898,"column":2}},"421":{"start":{"line":887,"column":2},"end":{"line":889,"column":5}},"422":{"start":{"line":891,"column":2},"end":{"line":891,"column":63}},"423":{"start":{"line":893,"column":2},"end":{"line":895,"column":3}},"424":{"start":{"line":894,"column":4},"end":{"line":894,"column":46}},"425":{"start":{"line":897,"column":2},"end":{"line":897,"column":27}},"426":{"start":{"line":900,"column":0},"end":{"line":920,"column":2}},"427":{"start":{"line":901,"column":2},"end":{"line":903,"column":3}},"428":{"start":{"line":902,"column":4},"end":{"line":902,"column":82}},"429":{"start":{"line":904,"column":2},"end":{"line":907,"column":3}},"430":{"start":{"line":906,"column":4},"end":{"line":906,"column":29}},"431":{"start":{"line":909,"column":2},"end":{"line":912,"column":5}},"432":{"start":{"line":914,"column":2},"end":{"line":914,"column":68}},"433":{"start":{"line":915,"column":2},"end":{"line":915,"column":51}},"434":{"start":{"line":917,"column":2},"end":{"line":917,"column":34}},"435":{"start":{"line":919,"column":2},"end":{"line":919,"column":17}},"436":{"start":{"line":922,"column":0},"end":{"line":938,"column":2}},"437":{"start":{"line":923,"column":2},"end":{"line":925,"column":3}},"438":{"start":{"line":924,"column":4},"end":{"line":924,"column":84}},"439":{"start":{"line":927,"column":2},"end":{"line":930,"column":5}},"440":{"start":{"line":931,"column":2},"end":{"line":931,"column":79}},"441":{"start":{"line":932,"column":2},"end":{"line":932,"column":70}},"442":{"start":{"line":933,"column":2},"end":{"line":933,"column":51}},"443":{"start":{"line":935,"column":2},"end":{"line":935,"column":36}},"444":{"start":{"line":937,"column":2},"end":{"line":937,"column":17}},"445":{"start":{"line":940,"column":0},"end":{"line":940,"column":32}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":25}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},{"start":{"line":29,"column":23},"end":{"line":29,"column":25}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":19}},{"start":{"line":35,"column":23},"end":{"line":35,"column":25}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"5":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":38},"end":{"line":60,"column":55}},{"start":{"line":60,"column":58},"end":{"line":60,"column":63}}]},"6":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":28}},{"start":{"line":80,"column":32},"end":{"line":80,"column":34}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":57},"end":{"line":98,"column":82}},{"start":{"line":98,"column":86},"end":{"line":98,"column":93}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"12":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":10}},{"start":{"line":113,"column":10},"end":{"line":113,"column":10}}]},"13":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":56},"end":{"line":114,"column":81}},{"start":{"line":114,"column":85},"end":{"line":114,"column":92}}]},"14":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":17}},{"start":{"line":119,"column":17},"end":{"line":119,"column":17}}]},"15":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":21},"end":{"line":119,"column":39}},{"start":{"line":119,"column":43},"end":{"line":119,"column":50}}]},"16":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":14},"end":{"line":129,"column":14}},{"start":{"line":129,"column":14},"end":{"line":129,"column":14}}]},"17":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":16}},{"start":{"line":130,"column":16},"end":{"line":130,"column":16}}]},"18":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":21},"end":{"line":133,"column":21}},{"start":{"line":133,"column":21},"end":{"line":133,"column":21}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"20":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":27}},{"start":{"line":146,"column":9},"end":{"line":146,"column":23}},{"start":{"line":146,"column":28},"end":{"line":146,"column":35}},{"start":{"line":146,"column":39},"end":{"line":146,"column":52}}]},"21":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":20},"end":{"line":149,"column":27}},{"start":{"line":149,"column":31},"end":{"line":149,"column":44}},{"start":{"line":149,"column":49},"end":{"line":149,"column":63}}]},"22":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"23":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":25}},{"start":{"line":164,"column":7},"end":{"line":164,"column":21}},{"start":{"line":164,"column":26},"end":{"line":164,"column":33}},{"start":{"line":164,"column":37},"end":{"line":164,"column":50}}]},"24":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":18},"end":{"line":167,"column":25}},{"start":{"line":167,"column":29},"end":{"line":167,"column":42}},{"start":{"line":167,"column":47},"end":{"line":167,"column":61}}]},"25":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":12},"end":{"line":182,"column":28}},{"start":{"line":182,"column":32},"end":{"line":182,"column":34}}]},"26":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":20},"end":{"line":183,"column":35}},{"start":{"line":183,"column":39},"end":{"line":183,"column":52}},{"start":{"line":183,"column":56},"end":{"line":183,"column":61}}]},"27":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"28":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"29":{"line":197,"type":"cond-expr","locations":[{"start":{"line":197,"column":89},"end":{"line":197,"column":91}},{"start":{"line":197,"column":94},"end":{"line":197,"column":114}}]},"30":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":28},"end":{"line":197,"column":36}},{"start":{"line":197,"column":40},"end":{"line":197,"column":55}},{"start":{"line":197,"column":59},"end":{"line":197,"column":86}}]},"31":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":10},"end":{"line":204,"column":10}},{"start":{"line":204,"column":10},"end":{"line":204,"column":10}}]},"32":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":12},"end":{"line":221,"column":19}},{"start":{"line":221,"column":23},"end":{"line":221,"column":25}}]},"33":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":9},"end":{"line":222,"column":21}},{"start":{"line":222,"column":25},"end":{"line":222,"column":27}}]},"34":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"35":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":23},"end":{"line":227,"column":42}},{"start":{"line":227,"column":46},"end":{"line":227,"column":55}}]},"36":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"37":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"38":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":10},"end":{"line":254,"column":10}},{"start":{"line":254,"column":10},"end":{"line":254,"column":10}}]},"39":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"40":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":19}},{"start":{"line":277,"column":23},"end":{"line":277,"column":25}}]},"41":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":12},"end":{"line":290,"column":19}},{"start":{"line":290,"column":23},"end":{"line":290,"column":25}}]},"42":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":19}},{"start":{"line":296,"column":23},"end":{"line":296,"column":25}}]},"43":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":318,"column":2}},{"start":{"line":318,"column":2},"end":{"line":318,"column":2}}]},"44":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":9},"end":{"line":320,"column":9}},{"start":{"line":320,"column":9},"end":{"line":320,"column":9}}]},"45":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":13},"end":{"line":320,"column":40}},{"start":{"line":320,"column":44},"end":{"line":320,"column":60}}]},"46":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":13},"end":{"line":321,"column":27}},{"start":{"line":321,"column":31},"end":{"line":321,"column":35}}]},"47":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":22},"end":{"line":322,"column":45}},{"start":{"line":322,"column":49},"end":{"line":322,"column":53}}]},"48":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"49":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":35}},{"start":{"line":325,"column":39},"end":{"line":325,"column":57}}]},"50":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"51":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"52":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":12}},{"start":{"line":348,"column":16},"end":{"line":348,"column":20}},{"start":{"line":348,"column":24},"end":{"line":348,"column":34}}]},"53":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":12},"end":{"line":352,"column":19}},{"start":{"line":352,"column":23},"end":{"line":352,"column":25}}]},"54":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":12},"end":{"line":358,"column":19}},{"start":{"line":358,"column":23},"end":{"line":358,"column":25}}]},"55":{"line":359,"type":"switch","locations":[{"start":{"line":360,"column":4},"end":{"line":362,"column":93}},{"start":{"line":363,"column":4},"end":{"line":365,"column":93}},{"start":{"line":366,"column":4},"end":{"line":366,"column":17}},{"start":{"line":367,"column":4},"end":{"line":369,"column":92}},{"start":{"line":370,"column":4},"end":{"line":372,"column":50}}]},"56":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":12},"end":{"line":378,"column":19}},{"start":{"line":378,"column":23},"end":{"line":378,"column":25}}]},"57":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":380,"column":2}},{"start":{"line":380,"column":2},"end":{"line":380,"column":2}}]},"58":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":2},"end":{"line":388,"column":2}},{"start":{"line":388,"column":2},"end":{"line":388,"column":2}}]},"59":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":12},"end":{"line":400,"column":19}},{"start":{"line":400,"column":23},"end":{"line":400,"column":25}}]},"60":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":11},"end":{"line":402,"column":31}},{"start":{"line":402,"column":35},"end":{"line":402,"column":37}}]},"61":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"62":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":34}},{"start":{"line":414,"column":38},"end":{"line":414,"column":53}}]},"63":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":418,"column":4}},{"start":{"line":418,"column":4},"end":{"line":418,"column":4}}]},"64":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":2},"end":{"line":434,"column":2}},{"start":{"line":434,"column":2},"end":{"line":434,"column":2}}]},"65":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"66":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":12},"end":{"line":463,"column":19}},{"start":{"line":463,"column":23},"end":{"line":463,"column":25}}]},"67":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"68":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"69":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":12},"end":{"line":489,"column":19}},{"start":{"line":489,"column":23},"end":{"line":489,"column":25}}]},"70":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":23},"end":{"line":496,"column":31}},{"start":{"line":496,"column":35},"end":{"line":496,"column":68}}]},"71":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":63},"end":{"line":497,"column":71}},{"start":{"line":497,"column":75},"end":{"line":497,"column":103}}]},"72":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":503,"column":4}},{"start":{"line":503,"column":4},"end":{"line":503,"column":4}}]},"73":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":2},"end":{"line":516,"column":2}},{"start":{"line":516,"column":2},"end":{"line":516,"column":2}}]},"74":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":4},"end":{"line":526,"column":4}},{"start":{"line":526,"column":4},"end":{"line":526,"column":4}}]},"75":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":8},"end":{"line":529,"column":8}},{"start":{"line":529,"column":8},"end":{"line":529,"column":8}}]},"76":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":4},"end":{"line":539,"column":4}},{"start":{"line":539,"column":4},"end":{"line":539,"column":4}}]},"77":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":4},"end":{"line":555,"column":4}},{"start":{"line":555,"column":4},"end":{"line":555,"column":4}}]},"78":{"line":566,"type":"binary-expr","locations":[{"start":{"line":566,"column":12},"end":{"line":566,"column":28}},{"start":{"line":566,"column":32},"end":{"line":566,"column":34}}]},"79":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":20},"end":{"line":573,"column":27}},{"start":{"line":573,"column":31},"end":{"line":573,"column":33}}]},"80":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":26},"end":{"line":574,"column":34}},{"start":{"line":574,"column":38},"end":{"line":574,"column":60}},{"start":{"line":574,"column":64},"end":{"line":574,"column":97}}]},"81":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"82":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":6},"end":{"line":585,"column":22}},{"start":{"line":585,"column":26},"end":{"line":585,"column":55}}]},"83":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":6},"end":{"line":590,"column":6}},{"start":{"line":590,"column":6},"end":{"line":590,"column":6}}]},"84":{"line":590,"type":"binary-expr","locations":[{"start":{"line":590,"column":10},"end":{"line":590,"column":54}},{"start":{"line":590,"column":58},"end":{"line":590,"column":111}},{"start":{"line":590,"column":115},"end":{"line":590,"column":183}}]},"85":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"86":{"line":605,"type":"cond-expr","locations":[{"start":{"line":605,"column":44},"end":{"line":605,"column":53}},{"start":{"line":605,"column":56},"end":{"line":605,"column":80}}]},"87":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":12},"end":{"line":617,"column":28}},{"start":{"line":617,"column":32},"end":{"line":617,"column":34}}]},"88":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":2},"end":{"line":620,"column":2}},{"start":{"line":620,"column":2},"end":{"line":620,"column":2}}]},"89":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":6},"end":{"line":620,"column":22}},{"start":{"line":620,"column":26},"end":{"line":620,"column":55}}]},"90":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":6},"end":{"line":627,"column":6}},{"start":{"line":627,"column":6},"end":{"line":627,"column":6}}]},"91":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":10},"end":{"line":627,"column":29}},{"start":{"line":627,"column":33},"end":{"line":627,"column":61}},{"start":{"line":628,"column":8},"end":{"line":628,"column":64}},{"start":{"line":629,"column":8},"end":{"line":629,"column":45}}]},"92":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":6},"end":{"line":638,"column":6}},{"start":{"line":638,"column":6},"end":{"line":638,"column":6}}]},"93":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":6},"end":{"line":642,"column":6}},{"start":{"line":642,"column":6},"end":{"line":642,"column":6}}]},"94":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"95":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":12},"end":{"line":677,"column":28}},{"start":{"line":677,"column":32},"end":{"line":677,"column":34}}]},"96":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"97":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":2},"end":{"line":701,"column":2}},{"start":{"line":701,"column":2},"end":{"line":701,"column":2}}]},"98":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":4},"end":{"line":706,"column":4}},{"start":{"line":706,"column":4},"end":{"line":706,"column":4}}]},"99":{"line":710,"type":"cond-expr","locations":[{"start":{"line":710,"column":24},"end":{"line":710,"column":47}},{"start":{"line":710,"column":50},"end":{"line":710,"column":54}}]},"100":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":4},"end":{"line":712,"column":4}},{"start":{"line":712,"column":4},"end":{"line":712,"column":4}}]},"101":{"line":712,"type":"binary-expr","locations":[{"start":{"line":712,"column":8},"end":{"line":712,"column":15}},{"start":{"line":712,"column":19},"end":{"line":712,"column":35}}]},"102":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":6},"end":{"line":715,"column":6}},{"start":{"line":715,"column":6},"end":{"line":715,"column":6}}]},"103":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":10},"end":{"line":715,"column":47}},{"start":{"line":715,"column":51},"end":{"line":715,"column":86}}]},"104":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":13},"end":{"line":717,"column":13}},{"start":{"line":717,"column":13},"end":{"line":717,"column":13}}]},"105":{"line":717,"type":"binary-expr","locations":[{"start":{"line":717,"column":17},"end":{"line":717,"column":54}},{"start":{"line":717,"column":58},"end":{"line":717,"column":94}}]},"106":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":13},"end":{"line":719,"column":13}},{"start":{"line":719,"column":13},"end":{"line":719,"column":13}}]},"107":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":8},"end":{"line":720,"column":8}},{"start":{"line":720,"column":8},"end":{"line":720,"column":8}}]},"108":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":12},"end":{"line":720,"column":35}},{"start":{"line":720,"column":39},"end":{"line":720,"column":62}}]},"109":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":13},"end":{"line":723,"column":13}},{"start":{"line":723,"column":13},"end":{"line":723,"column":13}}]},"110":{"line":734,"type":"binary-expr","locations":[{"start":{"line":734,"column":12},"end":{"line":734,"column":19}},{"start":{"line":734,"column":23},"end":{"line":734,"column":25}}]},"111":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":2},"end":{"line":735,"column":2}},{"start":{"line":735,"column":2},"end":{"line":735,"column":2}}]},"112":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":12},"end":{"line":744,"column":19}},{"start":{"line":744,"column":23},"end":{"line":744,"column":25}}]},"113":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":2},"end":{"line":746,"column":2}},{"start":{"line":746,"column":2},"end":{"line":746,"column":2}}]},"114":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":12},"end":{"line":755,"column":19}},{"start":{"line":755,"column":23},"end":{"line":755,"column":25}}]},"115":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":2},"end":{"line":757,"column":2}},{"start":{"line":757,"column":2},"end":{"line":757,"column":2}}]},"116":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":12},"end":{"line":766,"column":19}},{"start":{"line":766,"column":23},"end":{"line":766,"column":25}}]},"117":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":2},"end":{"line":768,"column":2}},{"start":{"line":768,"column":2},"end":{"line":768,"column":2}}]},"118":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":12},"end":{"line":777,"column":19}},{"start":{"line":777,"column":23},"end":{"line":777,"column":25}}]},"119":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":2},"end":{"line":779,"column":2}},{"start":{"line":779,"column":2},"end":{"line":779,"column":2}}]},"120":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":12},"end":{"line":788,"column":19}},{"start":{"line":788,"column":23},"end":{"line":788,"column":25}}]},"121":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"122":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":2},"end":{"line":829,"column":2}},{"start":{"line":829,"column":2},"end":{"line":829,"column":2}}]},"123":{"line":829,"type":"binary-expr","locations":[{"start":{"line":829,"column":6},"end":{"line":829,"column":18}},{"start":{"line":829,"column":22},"end":{"line":829,"column":59}}]},"124":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"125":{"line":838,"type":"binary-expr","locations":[{"start":{"line":838,"column":17},"end":{"line":838,"column":35}},{"start":{"line":838,"column":39},"end":{"line":838,"column":50}}]},"126":{"line":845,"type":"if","locations":[{"start":{"line":845,"column":2},"end":{"line":845,"column":2}},{"start":{"line":845,"column":2},"end":{"line":845,"column":2}}]},"127":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":2},"end":{"line":851,"column":2}},{"start":{"line":851,"column":2},"end":{"line":851,"column":2}}]},"128":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":6},"end":{"line":851,"column":18}},{"start":{"line":851,"column":22},"end":{"line":851,"column":59}}]},"129":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":2},"end":{"line":854,"column":2}},{"start":{"line":854,"column":2},"end":{"line":854,"column":2}}]},"130":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":17},"end":{"line":860,"column":35}},{"start":{"line":860,"column":39},"end":{"line":860,"column":50}}]},"131":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":2},"end":{"line":867,"column":2}},{"start":{"line":867,"column":2},"end":{"line":867,"column":2}}]},"132":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":2},"end":{"line":873,"column":2}},{"start":{"line":873,"column":2},"end":{"line":873,"column":2}}]},"133":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":6},"end":{"line":873,"column":18}},{"start":{"line":873,"column":22},"end":{"line":873,"column":59}}]},"134":{"line":878,"type":"binary-expr","locations":[{"start":{"line":878,"column":17},"end":{"line":878,"column":35}},{"start":{"line":878,"column":39},"end":{"line":878,"column":50}}]},"135":{"line":880,"type":"cond-expr","locations":[{"start":{"line":880,"column":50},"end":{"line":880,"column":66}},{"start":{"line":880,"column":69},"end":{"line":880,"column":78}}]},"136":{"line":888,"type":"binary-expr","locations":[{"start":{"line":888,"column":17},"end":{"line":888,"column":35}},{"start":{"line":888,"column":39},"end":{"line":888,"column":50}}]},"137":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":2},"end":{"line":893,"column":2}},{"start":{"line":893,"column":2},"end":{"line":893,"column":2}}]},"138":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":2},"end":{"line":901,"column":2}},{"start":{"line":901,"column":2},"end":{"line":901,"column":2}}]},"139":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":6},"end":{"line":901,"column":18}},{"start":{"line":901,"column":22},"end":{"line":901,"column":59}}]},"140":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":2},"end":{"line":904,"column":2}},{"start":{"line":904,"column":2},"end":{"line":904,"column":2}}]},"141":{"line":910,"type":"binary-expr","locations":[{"start":{"line":910,"column":17},"end":{"line":910,"column":35}},{"start":{"line":910,"column":39},"end":{"line":910,"column":50}}]},"142":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":2},"end":{"line":923,"column":2}},{"start":{"line":923,"column":2},"end":{"line":923,"column":2}}]},"143":{"line":923,"type":"binary-expr","locations":[{"start":{"line":923,"column":6},"end":{"line":923,"column":18}},{"start":{"line":923,"column":22},"end":{"line":923,"column":59}}]},"144":{"line":928,"type":"binary-expr","locations":[{"start":{"line":928,"column":17},"end":{"line":928,"column":35}},{"start":{"line":928,"column":39},"end":{"line":928,"column":50}}]},"145":{"line":931,"type":"cond-expr","locations":[{"start":{"line":931,"column":50},"end":{"line":931,"column":66}},{"start":{"line":931,"column":69},"end":{"line":931,"column":78}}]}},"code":["'use strict';","","var Utils = require('./utils')","  , _ = require('lodash')","  , DataTypes = require('./data-types')","  , SQLiteQueryInterface = require('./dialects/sqlite/query-interface')","  , MSSSQLQueryInterface = require('./dialects/mssql/query-interface')","  , MySQLQueryInterface = require('./dialects/mysql/query-interface')","  , Transaction = require('./transaction')","  , Promise = require('./promise')","  , QueryTypes = require('./query-types');","","/*"," * The interface that Sequelize uses to talk to all databases"," * @class QueryInterface","**/","var QueryInterface = function(sequelize) {","  this.sequelize = sequelize;","  this.QueryGenerator = this.sequelize.dialect.QueryGenerator;","};","","QueryInterface.prototype.createSchema = function(schema, options) {","  options = options || {};","  var sql = this.QueryGenerator.createSchema(schema);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.dropSchema = function(schema, options) {","  options = options || {};","  var sql = this.QueryGenerator.dropSchema(schema);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.dropAllSchemas = function(options) {","  options = options || {};","","  var self = this;","  if (!this.QueryGenerator._dialect.supports.schemas) {","    return this.sequelize.drop(options);","  } else {","    return this.showAllSchemas(options).map(function(schemaName) {","      return self.dropSchema(schemaName, options);","    });","  }","};","","QueryInterface.prototype.showAllSchemas = function(options) {","  var self = this;","","  options = _.assign({}, options, {","    raw: true,","    type: this.sequelize.QueryTypes.SELECT","  });","","  var showSchemasSql = self.QueryGenerator.showSchemasQuery();","","  return this.sequelize.query(showSchemasSql, options).then(function(schemaNames) {","    return Utils._.flatten(","      Utils._.map(schemaNames, function(value) {","        return (!!value.schema_name ? value.schema_name : value);","      })","    );","  });","};","","QueryInterface.prototype.databaseVersion = function(options) {","  return this.sequelize.query(","    this.QueryGenerator.versionQuery(),","    _.assign({}, options, { type: QueryTypes.VERSION })","  );","};","","QueryInterface.prototype.createTable = function(tableName, attributes, options, model) {","  var keys = Object.keys(attributes)","    , keyLen = keys.length","    , self = this","    , sql = ''","    , i = 0;","","  options = _.clone(options) || {};","","  attributes = Utils._.mapValues(attributes, function(attribute) {","    if (!Utils._.isPlainObject(attribute)) {","      attribute = { type: attribute, allowNull: true };","    }","","    attribute = self.sequelize.normalizeAttribute(attribute);","","    return attribute;","  });","","  // Postgres requires a special SQL command for enums","  if (self.sequelize.options.dialect === 'postgres') {","    var promises = [];","","    for (i = 0; i < keyLen; i++) {","      if (attributes[keys[i]].type instanceof DataTypes.ENUM) {","        sql = self.QueryGenerator.pgListEnums(tableName, attributes[keys[i]].field || keys[i], options);","        promises.push(self.sequelize.query(","          sql,","          _.assign({}, options, { plain: true, raw: true, type: QueryTypes.SELECT })","        ));","      }","    }","","    return Promise.all(promises).then(function(results) {","      var promises = []","        , enumIdx = 0;","","      for (i = 0; i < keyLen; i++) {","        if (attributes[keys[i]].type instanceof DataTypes.ENUM) {","          // If the enum type doesn't exist then create it","          if (!results[enumIdx]) {","            sql = self.QueryGenerator.pgEnum(tableName, attributes[keys[i]].field || keys[i], attributes[keys[i]], options);","            promises.push(self.sequelize.query(","              sql,","              _.assign({}, options, { raw: true })","            ));","          } else if (!!results[enumIdx] && !!model) {","            var enumVals = self.QueryGenerator.fromArray(results[enumIdx].enum_value)","              , vals = model.rawAttributes[keys[i]].values;","","            vals.forEach(function(value, idx) {","              // reset out after/before options since it's for every enum value","              var valueOptions = _.clone(options);","              valueOptions.before = null;","              valueOptions.after = null;","","              if (enumVals.indexOf(value) === -1) {","                if (!!vals[idx + 1]) {","                  valueOptions.before = vals[idx + 1];","                }","                else if (!!vals[idx - 1]) {","                  valueOptions.after = vals[idx - 1];","                }","                valueOptions.supportsSearchPath = false;","                promises.push(self.sequelize.query(self.QueryGenerator.pgEnumAdd(tableName, keys[i], value, valueOptions), valueOptions));","              }","            });","            enumIdx++;","          }","        }","      }","","      if (!tableName.schema &&","        (options.schema || (!!model && model.$schema))) {","        tableName = self.QueryGenerator.addSchema({","          tableName: tableName,","          $schema: (!!model && model.$schema) || options.schema","        });","      }","","      attributes = self.QueryGenerator.attributesToSQL(attributes, {","        context: 'createTable'","      });","      sql = self.QueryGenerator.createTableQuery(tableName, attributes, options);","","      return Promise.all(promises).then(function() {","        return self.sequelize.query(sql, options);","      });","    });","  } else {","    if (!tableName.schema &&","      (options.schema || (!!model && model.$schema))) {","      tableName = self.QueryGenerator.addSchema({","        tableName: tableName,","        $schema: (!!model && model.$schema) || options.schema","      });","    }","","    attributes = self.QueryGenerator.attributesToSQL(attributes, {","      context: 'createTable'","    });","    sql = self.QueryGenerator.createTableQuery(tableName, attributes, options);","","    return self.sequelize.query(sql, options);","  }","};","","QueryInterface.prototype.dropTable = function(tableName, options) {","  // if we're forcing we should be cascading unless explicitly stated otherwise","  options = _.clone(options) || {};","  options.cascade = options.cascade || options.force || false;","","  var sql = this.QueryGenerator.dropTableQuery(tableName, options)","    , self = this;","","  return this.sequelize.query(sql, options).then(function() {","    var promises = [];","","    // Since postgres has a special case for enums, we should drop the related","    // enum type within the table and attribute","    if (self.sequelize.options.dialect === 'postgres') {","      var instanceTable = self.sequelize.modelManager.getModel(tableName, { attribute: 'tableName' });","","      if (!!instanceTable) {","        var getTableName = (!options || !options.schema || options.schema === 'public' ? '' : options.schema + '_') + tableName;","","        var keys = Object.keys(instanceTable.rawAttributes)","          , keyLen = keys.length","          , i = 0;","","        for (i = 0; i < keyLen; i++) {","          if (instanceTable.rawAttributes[keys[i]].type instanceof DataTypes.ENUM) {","            sql = self.QueryGenerator.pgEnumDrop(getTableName, keys[i]);","            options.supportsSearchPath = false;","            promises.push(self.sequelize.query(sql, _.assign({}, options, { raw: true })));","          }","        }","      }","    }","","    return Promise.all(promises).get(0);","  });","};","","QueryInterface.prototype.dropAllTables = function(options) {","  var self = this","    , skip;","","  options = options || {};","  skip = options.skip || [];","","  var dropAllTables = function(tableNames) {","    return Promise.each(tableNames, function(tableName) {","      // if tableName is not in the Array of tables names then dont drop it","      if (skip.indexOf(tableName.tableName || tableName) === -1) {","        return self.dropTable(tableName, _.assign({}, options, { cascade: true }) );","      }","    });","  };","","  return self.showAllTables(options).then(function(tableNames) {","    if (self.sequelize.options.dialect === 'sqlite') {","      return self.sequelize.query('PRAGMA foreign_keys;', options).then(function(result) {","        var foreignKeysAreEnabled = result.foreign_keys === 1;","","        if (foreignKeysAreEnabled) {","          return self.sequelize.query('PRAGMA foreign_keys = OFF', options).then(function() {","            return dropAllTables(tableNames).then(function() {","              return self.sequelize.query('PRAGMA foreign_keys = ON', options);","            });","          });","        } else {","          return dropAllTables(tableNames);","        }","      });","    } else {","      return self.getForeignKeysForTables(tableNames, options).then(function(foreignKeys) {","        var promises = [];","","        tableNames.forEach(function(tableName) {","          var normalizedTableName = tableName;","          if (Utils._.isObject(tableName)) {","             normalizedTableName = tableName.schema + '.' + tableName.tableName;","          }","","          foreignKeys[normalizedTableName].forEach(function(foreignKey) {","            var sql = self.QueryGenerator.dropForeignKeyQuery(tableName, foreignKey);","            promises.push(self.sequelize.query(sql, options));","          });","        });","","        return Promise.all(promises).then(function() {","          return dropAllTables(tableNames);","        });","      });","    }","  });","};","","QueryInterface.prototype.dropAllEnums = function(options) {","  if (this.sequelize.getDialect() !== 'postgres') {","    return Promise.resolve();","  }","","  options = options || {};","","  var self = this;","","  return this.pgListEnums(null, options).map(function(result) {","    return self.sequelize.query(","      self.QueryGenerator.pgEnumDrop(null, null, self.QueryGenerator.pgEscapeAndQuote(result.enum_name)),","      _.assign({}, options, { raw: true })","    );","  });","};","","QueryInterface.prototype.pgListEnums = function (tableName, options) {","  options = options || {};","  var sql = this.QueryGenerator.pgListEnums(tableName);","  return this.sequelize.query(sql, _.assign({}, options, { plain: false, raw: true, type: QueryTypes.SELECT }));","};","","QueryInterface.prototype.renameTable = function(before, after, options) {","  options = options || {};","  var sql = this.QueryGenerator.renameTableQuery(before, after);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.showAllTables = function(options) {","  var self = this;","  options = _.assign({}, options, {","    raw: true,","    type: QueryTypes.SHOWTABLES","  });","","  var showTablesSql = self.QueryGenerator.showTablesQuery();","  return self.sequelize.query(showTablesSql, options).then(function(tableNames) {","    return Utils._.flatten(tableNames);","  });","};","","QueryInterface.prototype.describeTable = function(tableName, options) {","  var schema = null","    , schemaDelimiter = null;","","  if (typeof options === 'string') {","    schema = options;","  } else if (typeof options === 'object' && options !== null) {","    schema = options.schema || null;","    schemaDelimiter = options.schemaDelimiter || null;","  }","","  if (typeof tableName === 'object' && tableName !== null) {","    schema = tableName.schema;","    tableName = tableName.tableName;","  }","","  var sql = this.QueryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);","","  return this.sequelize.query(","    sql,","    _.assign({}, options, { type: QueryTypes.DESCRIBE })","  ).then(function(data) {","    // If no data is returned from the query, then the table name may be wrong.","    // Query generators that use information_schema for retrieving table info will just return an empty result set,","    // it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).","    if (Utils._.isEmpty(data)) {","      return Promise.reject('No description found for \"' + tableName + '\" table. Check the table name and schema; remember, they _are_ case sensitive.');","    } else {","      return Promise.resolve(data);","    }","  });","};","","QueryInterface.prototype.addColumn = function(table, key, attribute, options) {","  if (!table || !key || !attribute) {","    throw new Error('addColumn takes atleast 3 arguments (table, attribute name, attribute definition)');","  }","","  options = options || {};","  attribute = this.sequelize.normalizeAttribute(attribute);","  return this.sequelize.query(this.QueryGenerator.addColumnQuery(table, key, attribute), options);","};","","QueryInterface.prototype.removeColumn = function(tableName, attributeName, options) {","  options = options || {};","  switch (this.sequelize.options.dialect) {","    case 'sqlite':","      // sqlite needs some special treatment as it cannot drop a column","      return SQLiteQueryInterface.removeColumn.call(this, tableName, attributeName, options);","    case 'mssql':","      // mssql needs special treatment as it cannot drop a column with a default or foreign key constraint","      return MSSSQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);","    case 'mysql':","    case 'mariadb':","      // mysql/maria needs special treatment as it cannot drop a column with a foreign key constraint","      return MySQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);","    default:","        var sql = this.QueryGenerator.removeColumnQuery(tableName, attributeName);","        return this.sequelize.query(sql, options);","  }","};","","QueryInterface.prototype.changeColumn = function(tableName, attributeName, dataTypeOrOptions, options) {","  var attributes = {};","  options = options || {};","","  if (Utils._.values(DataTypes).indexOf(dataTypeOrOptions) > -1) {","    attributes[attributeName] = { type: dataTypeOrOptions, allowNull: true };","  } else {","    attributes[attributeName] = dataTypeOrOptions;","  }","","  attributes[attributeName].type = this.sequelize.normalizeDataType(attributes[attributeName].type);","","  if (this.sequelize.options.dialect === 'sqlite') {","    // sqlite needs some special treatment as it cannot change a column","    return SQLiteQueryInterface.changeColumn.call(this, tableName, attributes, options);","  } else {","    var query = this.QueryGenerator.attributesToSQL(attributes)","      , sql = this.QueryGenerator.changeColumnQuery(tableName, query);","","    return this.sequelize.query(sql, options);","  }","};","","QueryInterface.prototype.renameColumn = function(tableName, attrNameBefore, attrNameAfter, options) {","  options = options || {};","  return this.describeTable(tableName, options).then(function(data) {","    data = data[attrNameBefore] || {};","","    var _options = {};","","    _options[attrNameAfter] = {","      attribute: attrNameAfter,","      type: data.type,","      allowNull: data.allowNull,","      defaultValue: data.defaultValue","    };","","    // fix: a not-null column cannot have null as default value","    if (data.defaultValue === null && !data.allowNull) {","      delete _options[attrNameAfter].defaultValue;","    }","","    if (this.sequelize.options.dialect === 'sqlite') {","      // sqlite needs some special treatment as it cannot rename a column","      return SQLiteQueryInterface.renameColumn.call(this, tableName, attrNameBefore, attrNameAfter, options);","    } else {","      var sql = this.QueryGenerator.renameColumnQuery(","        tableName,","        attrNameBefore,","        this.QueryGenerator.attributesToSQL(_options)","      );","      return this.sequelize.query(sql, options);","    }","  }.bind(this));","};","","QueryInterface.prototype.addIndex = function(tableName, attributes, options, rawTablename) {","  // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)","  if (!Array.isArray(attributes)) {","    rawTablename = options;","    options = attributes;","    attributes = options.fields;","  }","  // testhint argsConform.end","","  if (!rawTablename) {","    // Map for backwards compat","    rawTablename = tableName;","  }","","  options = Utils.cloneDeep(options);","  options.fields = attributes;","  var sql = this.QueryGenerator.addIndexQuery(tableName, options, rawTablename);","  return this.sequelize.query(sql, _.assign({}, options, { supportsSearchPath: false }));","};","","QueryInterface.prototype.showIndex = function(tableName, options) {","  var sql = this.QueryGenerator.showIndexesQuery(tableName, options);","  return this.sequelize.query(sql, _.assign({}, options, { type: QueryTypes.SHOWINDEXES }));","};","","QueryInterface.prototype.nameIndexes = function(indexes, rawTablename) {","  return this.QueryGenerator.nameIndexes(indexes, rawTablename);","};","","QueryInterface.prototype.getForeignKeysForTables = function(tableNames, options) {","  var self = this;","  options = options || {};","","  if (tableNames.length === 0) {","    return Promise.resolve({});","  }","","  return Promise.map(tableNames, function(tableName) {","    return self.sequelize.query(self.QueryGenerator.getForeignKeysQuery(tableName, self.sequelize.config.database), options).get(0);","  }).then(function(results) {","    var result = {};","","    tableNames.forEach(function(tableName, i) {","      if (Utils._.isObject(tableName)) {","        tableName = tableName.schema + '.' + tableName.tableName;","      }","","      result[tableName] = Utils._.compact(results[i]).map(function(r) {","        return r.constraint_name;","      });","    });","","    return result;","  });","};","","QueryInterface.prototype.removeIndex = function(tableName, indexNameOrAttributes, options) {","  options = options || {};","  var sql = this.QueryGenerator.removeIndexQuery(tableName, indexNameOrAttributes);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.insert = function(instance, tableName, values, options) {","  options = Utils.cloneDeep(options);","  options.hasTrigger = instance && instance.Model.options.hasTrigger;","  var sql = this.QueryGenerator.insertQuery(tableName, values, instance && instance.Model.rawAttributes, options);","","  options.type = QueryTypes.INSERT;","  options.instance = instance;","","  return this.sequelize.query(sql, options).then(function(result) {","    if (instance) result.isNewRecord = false;","    return result;","  });","};","","QueryInterface.prototype.upsert = function(tableName, valuesByField, updateValues, where, model, options) {","  var wheres = []","    , indexFields","    , indexes = []","    , attributes = Object.keys(valuesByField);","","  options = _.clone(options);","","  if (!Utils._.isEmpty(where)) {","    wheres.push(where);","  }","","  // Lets combine uniquekeys and indexes into one","  indexes = Utils._.map(model.options.uniqueKeys, function (value) {","    return value.fields;","  });","","  Utils._.each(model.options.indexes, function (value) {","    if (value.unique === true) {","      // fields in the index may both the strings or objects with an attribute property - lets sanitize that","      indexFields = Utils._.map(value.fields, function (field) {","        if (Utils._.isPlainObject(field)) {","          return field.attribute;","        }","        return field;","      });","      indexes.push(indexFields);","    }","  });","","  indexes.forEach(function (index) {","    if (Utils._.intersection(attributes, index).length === index.length) {","      where = {};","      index.forEach(function (field) {","        where[field] = valuesByField[field];","      });","      wheres.push(where);","    }","  });","","  where = { $or: wheres };","","  options.type = QueryTypes.UPSERT;","  options.raw = true;","","  var sql = this.QueryGenerator.upsertQuery(tableName, valuesByField, updateValues, where, model.rawAttributes, options);","  return this.sequelize.query(sql, options).then(function (rowCount) {","    if (rowCount === undefined) {","      return rowCount;","    }","","    // MySQL returns 1 for inserted, 2 for updated http://dev.mysql.com/doc/refman/5.0/en/insert-on-duplicate.html. Postgres has been modded to do the same","","    return rowCount === 1;","  });","};","","QueryInterface.prototype.bulkInsert = function(tableName, records, options, attributes) {","  options = _.clone(options) || {};","  options.type = QueryTypes.INSERT;","  var sql = this.QueryGenerator.bulkInsertQuery(tableName, records, options, attributes);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.update = function(instance, tableName, values, identifier, options) {","  options = _.clone(options || {});","  options.hasTrigger = !!(instance && instance.$modelOptions && instance.$modelOptions.hasTrigger);","","","  var self = this","    , restrict = false","    , sql = self.QueryGenerator.updateQuery(tableName, values, identifier, options, instance.Model.rawAttributes);","","","  options.type = QueryTypes.UPDATE;","","  // Check for a restrict field","  if (!!instance.Model && !!instance.Model.associations) {","    var keys = Object.keys(instance.Model.associations)","      , length = keys.length;","","    for (var i = 0; i < length; i++) {","      if (instance.Model.associations[keys[i]].options && instance.Model.associations[keys[i]].options.onUpdate && instance.Model.associations[keys[i]].options.onUpdate === 'restrict') {","        restrict = true;","      }","    }","  }","","  options.instance = instance;","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.bulkUpdate = function(tableName, values, identifier, options, attributes) {","  options = Utils.cloneDeep(options);","  if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);","","  var sql = this.QueryGenerator.updateQuery(tableName, values, identifier, options, attributes)","    , table = Utils._.isObject(tableName) ? tableName : { tableName: tableName }","    , model = Utils._.find(this.sequelize.modelManager.models, { tableName: table.tableName });","","  options.model = model;","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.delete = function(instance, tableName, identifier, options) {","  var self = this","    , cascades = []","    , sql = self.QueryGenerator.deleteQuery(tableName, identifier, null, instance.Model);","","  options = _.clone(options) || {};","","  // Check for a restrict field","  if (!!instance.Model && !!instance.Model.associations) {","    var keys = Object.keys(instance.Model.associations)","      , length = keys.length","      , association;","","    for (var i = 0; i < length; i++) {","      association = instance.Model.associations[keys[i]];","      if (association.options && association.options.onDelete &&","        association.options.onDelete.toLowerCase() === 'cascade' &&","        association.options.useHooks === true) {","        cascades.push(association.accessors.get);","      }","    }","  }","","  return Promise.each(cascades, function (cascade) {","    return instance[cascade](options).then(function (instances) {","      // Check for hasOne relationship with non-existing associate (\"has zero\")","      if (!instances) {","        return Promise.resolve();","      }","","      if (!Array.isArray(instances)) instances = [instances];","","      return Promise.each(instances, function (instance) {","        return instance.destroy(options);","      });","    });","  }).then(function () {","    options.instance = instance;","    return self.sequelize.query(sql, options);","  });","};","","QueryInterface.prototype.bulkDelete = function(tableName, identifier, options, model) {","  options = Utils.cloneDeep(options);","  options = _.defaults(options, {limit: null});","  if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);","","  var sql = this.QueryGenerator.deleteQuery(tableName, identifier, options, model);","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.select = function(model, tableName, options) {","  options = Utils.cloneDeep(options);","  options.type = QueryTypes.SELECT;","  options.model = model;","","  return this.sequelize.query(","    this.QueryGenerator.selectQuery(tableName, options, model),","    options","  );","};","","QueryInterface.prototype.increment = function(instance, tableName, values, identifier, options) {","  var sql = this.QueryGenerator.incrementQuery(tableName, values, identifier, options.attributes);","","  options = _.clone(options) || {};","","  options.type = QueryTypes.UPDATE;","  options.instance = instance;","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.rawSelect = function(tableName, options, attributeSelector, Model) {","  if (options.schema) {","    tableName = this.QueryGenerator.addSchema({","      tableName: tableName,","      $schema: options.schema","    });","  }","","  options = Utils.cloneDeep(options);","  options = _.defaults(options, {","    raw: true,","    plain: true,","    type: QueryTypes.SELECT","  });","","  var sql = this.QueryGenerator.selectQuery(tableName, options, Model);","","  if (attributeSelector === undefined) {","    throw new Error('Please pass an attribute selector!');","  }","","  return this.sequelize.query(sql, options).then(function(data) {","    if (!options.plain) {","      return data;","    }","","    var result = data ? data[attributeSelector] : null;","","    if (options && options.dataType) {","      var dataType = options.dataType;","","      if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {","        result = parseFloat(result);","      } else if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {","        result = parseInt(result, 10);","      } else if (dataType instanceof DataTypes.DATE) {","        if (!Utils._.isNull(result) && !Utils._.isDate(result)) {","          result = new Date(result);","        }","      } else if (dataType instanceof DataTypes.STRING) {","        // Nothing to do, result is already a string.","      }","    }","","    return result;","  });","};","","QueryInterface.prototype.createTrigger = function(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray, options) {","  var sql = this.QueryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);","  options = options || {};","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","QueryInterface.prototype.dropTrigger = function(tableName, triggerName, options) {","  var sql = this.QueryGenerator.dropTrigger(tableName, triggerName);","  options = options || {};","","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","QueryInterface.prototype.renameTrigger = function(tableName, oldTriggerName, newTriggerName, options) {","  var sql = this.QueryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);","  options = options || {};","","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","QueryInterface.prototype.createFunction = function(functionName, params, returnType, language, body, options) {","  var sql = this.QueryGenerator.createFunction(functionName, params, returnType, language, body, options);","  options = options || {};","","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","QueryInterface.prototype.dropFunction = function(functionName, params, options) {","  var sql = this.QueryGenerator.dropFunction(functionName, params);","  options = options || {};","","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","QueryInterface.prototype.renameFunction = function(oldFunctionName, params, newFunctionName, options) {","  var sql = this.QueryGenerator.renameFunction(oldFunctionName, params, newFunctionName);","  options = options || {};","","  if (sql) {","    return this.sequelize.query(sql, options);","  } else {","    return Promise.resolve();","  }","};","","// Helper methods useful for querying","","/**"," * Escape an identifier (e.g. a table or attribute name). If force is true,"," * the identifier will be quoted even if the `quoteIdentifiers` option is"," * false."," */","QueryInterface.prototype.quoteIdentifier = function(identifier, force) {","  return this.QueryGenerator.quoteIdentifier(identifier, force);","};","","QueryInterface.prototype.quoteTable = function(identifier) {","  return this.QueryGenerator.quoteTable(identifier);","};","","/**"," * Split an identifier into .-separated tokens and quote each part."," * If force is true, the identifier will be quoted even if the"," * `quoteIdentifiers` option is false."," */","QueryInterface.prototype.quoteIdentifiers = function(identifiers, force) {","  return this.QueryGenerator.quoteIdentifiers(identifiers, force);","};","","/**"," * Escape a value (e.g. a string, number or date)"," */","QueryInterface.prototype.escape = function(value) {","  return this.QueryGenerator.escape(value);","};","","QueryInterface.prototype.setAutocommit = function(transaction, value, options) {","  if (!transaction || !(transaction instanceof Transaction)) {","    throw new Error('Unable to set autocommit for a transaction without transaction object!');","  }","  if (transaction.parent) {","    // Not possible to set a seperate isolation level for savepoints","    return Promise.resolve();","  }","","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction","  });","","  var sql = this.QueryGenerator.setAutocommitQuery(value, {","    parent: transaction.parent","  });","","  if (!sql) return Promise.resolve();","","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.setIsolationLevel = function(transaction, value, options) {","  if (!transaction || !(transaction instanceof Transaction)) {","    throw new Error('Unable to set isolation level for a transaction without transaction object!');","  }","  if (transaction.parent) {","    // Not possible to set a seperate isolation level for savepoints","    return Promise.resolve();","  }","","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction","  });","","  var sql = this.QueryGenerator.setIsolationLevelQuery(value, {","    parent: transaction.parent","  });","","  if (!sql) return Promise.resolve();","","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.startTransaction = function(transaction, options) {","  if (!transaction || !(transaction instanceof Transaction)) {","    throw new Error('Unable to start a transaction without transaction object!');","  }","","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction","  });","  options.transaction.name = transaction.parent ? transaction.name : undefined;","  var sql = this.QueryGenerator.startTransactionQuery(transaction);","","  return this.sequelize.query(sql, options);","};","","QueryInterface.prototype.deferConstraints = function (transaction, options) {","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction","  });","","  var sql = this.QueryGenerator.deferConstraintsQuery(options);","","  if (sql) {","    return this.sequelize.query(sql, options);","  }","","  return Promise.resolve();","};","","QueryInterface.prototype.commitTransaction = function(transaction, options) {","  if (!transaction || !(transaction instanceof Transaction)) {","    throw new Error('Unable to commit a transaction without transaction object!');","  }","  if (transaction.parent) {","    // Savepoints cannot be committed","    return Promise.resolve();","  }","","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction,","    supportsSearchPath: false","  });","","  var sql = this.QueryGenerator.commitTransactionQuery(transaction);","  var promise = this.sequelize.query(sql, options);","","  transaction.finished = 'commit';","","  return promise;","};","","QueryInterface.prototype.rollbackTransaction = function(transaction, options) {","  if (!transaction || !(transaction instanceof Transaction)) {","    throw new Error('Unable to rollback a transaction without transaction object!');","  }","","  options = _.assign({}, options, {","    transaction: transaction.parent || transaction,","    supportsSearchPath: false","  });","  options.transaction.name = transaction.parent ? transaction.name : undefined;","  var sql = this.QueryGenerator.rollbackTransactionQuery(transaction);","  var promise = this.sequelize.query(sql, options);","","  transaction.finished = 'rollback';","","  return promise;","};","","module.exports = QueryInterface;",""],"l":{"3":1,"17":1,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"28":1,"29":0,"30":0,"31":0,"34":1,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"47":1,"48":0,"50":0,"55":0,"57":0,"58":0,"60":0,"66":1,"67":0,"73":1,"74":0,"80":0,"82":0,"83":0,"84":0,"87":0,"89":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"106":0,"107":0,"110":0,"111":0,"113":0,"114":0,"115":0,"119":0,"120":0,"123":0,"125":0,"126":0,"127":0,"129":0,"130":0,"131":0,"133":0,"134":0,"136":0,"137":0,"140":0,"145":0,"147":0,"153":0,"156":0,"158":0,"159":0,"163":0,"165":0,"171":0,"174":0,"176":0,"180":1,"182":0,"183":0,"185":0,"188":0,"189":0,"193":0,"194":0,"196":0,"197":0,"199":0,"203":0,"204":0,"205":0,"206":0,"207":0,"213":0,"217":1,"218":0,"221":0,"222":0,"224":0,"225":0,"227":0,"228":0,"233":0,"234":0,"235":0,"236":0,"238":0,"239":0,"240":0,"241":0,"245":0,"249":0,"250":0,"252":0,"253":0,"254":0,"255":0,"258":0,"259":0,"260":0,"264":0,"265":0,"272":1,"273":0,"274":0,"277":0,"279":0,"281":0,"282":0,"289":1,"290":0,"291":0,"292":0,"295":1,"296":0,"297":0,"298":0,"301":1,"302":0,"303":0,"308":0,"309":0,"310":0,"314":1,"315":0,"318":0,"319":0,"320":0,"321":0,"322":0,"325":0,"326":0,"327":0,"330":0,"332":0,"339":0,"340":0,"342":0,"347":1,"348":0,"349":0,"352":0,"353":0,"354":0,"357":1,"358":0,"359":0,"362":0,"365":0,"369":0,"371":0,"372":0,"376":1,"377":0,"378":0,"380":0,"381":0,"383":0,"386":0,"388":0,"390":0,"392":0,"395":0,"399":1,"400":0,"401":0,"402":0,"404":0,"406":0,"414":0,"415":0,"418":0,"420":0,"422":0,"427":0,"432":1,"434":0,"435":0,"436":0,"437":0,"441":0,"443":0,"446":0,"447":0,"448":0,"449":0,"452":1,"453":0,"454":0,"457":1,"458":0,"461":1,"462":0,"463":0,"465":0,"466":0,"469":0,"470":0,"472":0,"474":0,"475":0,"476":0,"479":0,"480":0,"484":0,"488":1,"489":0,"490":0,"491":0,"494":1,"495":0,"496":0,"497":0,"499":0,"500":0,"502":0,"503":0,"504":0,"508":1,"509":0,"514":0,"516":0,"517":0,"521":0,"522":0,"525":0,"526":0,"528":0,"529":0,"530":0,"532":0,"534":0,"538":0,"539":0,"540":0,"541":0,"542":0,"544":0,"548":0,"550":0,"551":0,"553":0,"554":0,"555":0,"556":0,"561":0,"565":1,"566":0,"567":0,"568":0,"569":0,"572":1,"573":0,"574":0,"577":0,"582":0,"585":0,"586":0,"589":0,"590":0,"591":0,"596":0,"597":0,"600":1,"601":0,"602":0,"604":0,"608":0,"609":0,"612":1,"613":0,"617":0,"620":0,"621":0,"625":0,"626":0,"627":0,"630":0,"635":0,"636":0,"638":0,"639":0,"642":0,"644":0,"645":0,"649":0,"650":0,"654":1,"655":0,"656":0,"657":0,"659":0,"660":0,"663":1,"664":0,"665":0,"666":0,"668":0,"674":1,"675":0,"677":0,"679":0,"680":0,"681":0,"684":1,"685":0,"686":0,"692":0,"693":0,"699":0,"701":0,"702":0,"705":0,"706":0,"707":0,"710":0,"712":0,"713":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"723":0,"728":0,"732":1,"733":0,"734":0,"735":0,"736":0,"738":0,"742":1,"743":0,"744":0,"746":0,"747":0,"749":0,"753":1,"754":0,"755":0,"757":0,"758":0,"760":0,"764":1,"765":0,"766":0,"768":0,"769":0,"771":0,"775":1,"776":0,"777":0,"779":0,"780":0,"782":0,"786":1,"787":0,"788":0,"790":0,"791":0,"793":0,"804":1,"805":0,"808":1,"809":0,"817":1,"818":0,"824":1,"825":0,"828":1,"829":0,"830":0,"832":0,"834":0,"837":0,"841":0,"845":0,"847":0,"850":1,"851":0,"852":0,"854":0,"856":0,"859":0,"863":0,"867":0,"869":0,"872":1,"873":0,"874":0,"877":0,"880":0,"881":0,"883":0,"886":1,"887":0,"891":0,"893":0,"894":0,"897":0,"900":1,"901":0,"902":0,"904":0,"906":0,"909":0,"914":0,"915":0,"917":0,"919":0,"922":1,"923":0,"924":0,"927":0,"931":0,"932":0,"933":0,"935":0,"937":0,"940":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/sqlite/query-interface.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/sqlite/query-interface.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":63}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":53},"end":{"line":32,"column":70}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":43},"end":{"line":36,"column":55}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":55}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":19},"end":{"line":59,"column":60}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":53},"end":{"line":64,"column":70}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":43},"end":{"line":68,"column":55}}},"8":{"name":"(anonymous_8)","line":70,"loc":{"start":{"line":70,"column":36},"end":{"line":70,"column":55}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":19},"end":{"line":92,"column":79}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":53},"end":{"line":96,"column":70}}},"11":{"name":"(anonymous_11)","line":101,"loc":{"start":{"line":101,"column":43},"end":{"line":101,"column":55}}},"12":{"name":"(anonymous_12)","line":103,"loc":{"start":{"line":103,"column":36},"end":{"line":103,"column":55}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":39}},"2":{"start":{"line":28,"column":0},"end":{"line":42,"column":2}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}},"5":{"start":{"line":32,"column":2},"end":{"line":41,"column":5}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"7":{"start":{"line":35,"column":4},"end":{"line":36,"column":77}},"8":{"start":{"line":36,"column":57},"end":{"line":36,"column":73}},"9":{"start":{"line":38,"column":4},"end":{"line":40,"column":7}},"10":{"start":{"line":39,"column":6},"end":{"line":39,"column":88}},"11":{"start":{"line":59,"column":0},"end":{"line":74,"column":2}},"12":{"start":{"line":60,"column":2},"end":{"line":61,"column":18}},"13":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"14":{"start":{"line":64,"column":2},"end":{"line":73,"column":5}},"15":{"start":{"line":65,"column":4},"end":{"line":65,"column":54}},"16":{"start":{"line":67,"column":4},"end":{"line":68,"column":77}},"17":{"start":{"line":68,"column":57},"end":{"line":68,"column":73}},"18":{"start":{"line":70,"column":4},"end":{"line":72,"column":7}},"19":{"start":{"line":71,"column":6},"end":{"line":71,"column":88}},"20":{"start":{"line":92,"column":0},"end":{"line":107,"column":2}},"21":{"start":{"line":93,"column":2},"end":{"line":93,"column":18}},"22":{"start":{"line":94,"column":2},"end":{"line":94,"column":26}},"23":{"start":{"line":96,"column":2},"end":{"line":106,"column":5}},"24":{"start":{"line":97,"column":4},"end":{"line":97,"column":66}},"25":{"start":{"line":98,"column":4},"end":{"line":98,"column":34}},"26":{"start":{"line":100,"column":4},"end":{"line":101,"column":77}},"27":{"start":{"line":101,"column":57},"end":{"line":101,"column":73}},"28":{"start":{"line":103,"column":4},"end":{"line":105,"column":7}},"29":{"start":{"line":104,"column":6},"end":{"line":104,"column":88}},"30":{"start":{"line":109,"column":0},"end":{"line":113,"column":2}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":19}},{"start":{"line":30,"column":23},"end":{"line":30,"column":25}}]},"2":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":19}},{"start":{"line":62,"column":23},"end":{"line":62,"column":25}}]},"3":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":19}},{"start":{"line":94,"column":23},"end":{"line":94,"column":25}}]}},"code":["'use strict';","","var Utils = require('../../utils')","  , Promise = require('../../promise');","","/**"," Returns an object that treats SQLite's inabilities to do certain queries.",""," @class QueryInterface"," @static"," */","","/**","  A wrapper that fixes SQLite's inability to remove columns from existing tables.","  It will create a backup of the table, drop the table afterwards and create a","  new table with the same name but without the obsolete column.","","  @method removeColumn","  @for    QueryInterface","","  @param  {String} tableName     The name of the table.","  @param  {String} attributeName The name of the attribute that we want to remove.","  @param  {Object} options","  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries","","  @since 1.6.0"," */","var removeColumn = function(tableName, attributeName, options) {","  var self = this;","  options = options || {};","","  return this.describeTable(tableName, options).then(function(fields) {","    delete fields[attributeName];","","    var sql = self.QueryGenerator.removeColumnQuery(tableName, fields)","      , subQueries = sql.split(';').filter(function(q) { return q !== ''; });","","    return Promise.each(subQueries, function(subQuery) {","      return self.sequelize.query(subQuery + ';', Utils._.assign({raw: true}, options));","    });","  });","};","","/**","  A wrapper that fixes SQLite's inability to change columns from existing tables.","  It will create a backup of the table, drop the table afterwards and create a","  new table with the same name but with a modified version of the respective column.","","  @method changeColumn","  @for    QueryInterface","","  @param  {String} tableName The name of the table.","  @param  {Object} attributes An object with the attribute's name as key and it's options as value object.","  @param  {Object} options","  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries","","  @since 1.6.0"," */","var changeColumn = function(tableName, attributes, options) {","  var attributeName = Utils._.keys(attributes)[0]","    , self = this;","  options = options || {};","","  return this.describeTable(tableName, options).then(function(fields) {","    fields[attributeName] = attributes[attributeName];","","    var sql = self.QueryGenerator.removeColumnQuery(tableName, fields)","      , subQueries = sql.split(';').filter(function(q) { return q !== ''; });","","    return Promise.each(subQueries, function(subQuery) {","      return self.sequelize.query(subQuery + ';', Utils._.assign({raw: true}, options));","    });","  });","};","","/**","  A wrapper that fixes SQLite's inability to rename columns from existing tables.","  It will create a backup of the table, drop the table afterwards and create a","  new table with the same name but with a renamed version of the respective column.","","  @method renameColumn","  @for    QueryInterface","","  @param  {String} tableName The name of the table.","  @param  {String} attrNameBefore The name of the attribute before it was renamed.","  @param  {String} attrNameAfter The name of the attribute after it was renamed.","  @param  {Object} options","  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries","","  @since 1.6.0"," */","var renameColumn = function(tableName, attrNameBefore, attrNameAfter, options) {","  var self = this;","  options = options || {};","","  return this.describeTable(tableName, options).then(function(fields) {","    fields[attrNameAfter] = Utils._.clone(fields[attrNameBefore]);","    delete fields[attrNameBefore];","","    var sql = self.QueryGenerator.renameColumnQuery(tableName, attrNameBefore, attrNameAfter, fields)","      , subQueries = sql.split(';').filter(function(q) { return q !== ''; });","","    return Promise.each(subQueries, function(subQuery) {","      return self.sequelize.query(subQuery + ';', Utils._.assign({raw: true}, options));","    });","  });","};","","module.exports = {","  removeColumn: removeColumn,","  changeColumn: changeColumn,","  renameColumn: renameColumn","};",""],"l":{"3":1,"28":1,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"59":1,"60":0,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"92":1,"93":0,"94":0,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mssql/query-interface.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mssql/query-interface.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":64}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":31}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":10},"end":{"line":35,"column":22}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":31}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":21}}},"6":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":29}}},"7":{"name":"(anonymous_7)","line":59,"loc":{"start":{"line":59,"column":10},"end":{"line":59,"column":22}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":63,"column":2}},"2":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":98}},"5":{"start":{"line":26,"column":2},"end":{"line":62,"column":7}},"6":{"start":{"line":28,"column":6},"end":{"line":31,"column":7}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":15}},"8":{"start":{"line":32,"column":6},"end":{"line":32,"column":98}},"9":{"start":{"line":33,"column":6},"end":{"line":33,"column":93}},"10":{"start":{"line":36,"column":6},"end":{"line":36,"column":95}},"11":{"start":{"line":37,"column":6},"end":{"line":37,"column":94}},"12":{"start":{"line":40,"column":6},"end":{"line":43,"column":7}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":15}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":109}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":94}},"16":{"start":{"line":49,"column":6},"end":{"line":49,"column":111}},"17":{"start":{"line":50,"column":6},"end":{"line":50,"column":100}},"18":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"19":{"start":{"line":54,"column":8},"end":{"line":54,"column":15}},"20":{"start":{"line":56,"column":6},"end":{"line":56,"column":107}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":93}},"22":{"start":{"line":60,"column":6},"end":{"line":60,"column":86}},"23":{"start":{"line":61,"column":6},"end":{"line":61,"column":85}},"24":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":25}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]}},"code":["'use strict';","","/**"," Returns an object that treats MSSQL's inabilities to do certain queries.",""," @class QueryInterface"," @static"," */","","/**","  A wrapper that fixes MSSQL's inability to cleanly remove columns from existing tables if they have a default constraint.","","  @method removeColumn","  @for    QueryInterface","","  @param  {String} tableName     The name of the table.","  @param  {String} attributeName The name of the attribute that we want to remove.","  @param  {Object} options","  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries"," */","var removeColumn = function (tableName, attributeName, options) {","  var self = this;","  options = options || {};","","  var findConstraintSql = self.QueryGenerator.getDefaultConstraintQuery(tableName, attributeName);","  return self.sequelize.query(findConstraintSql, { raw: true, logging: options.logging})","    .spread(function (results) {","      if (!results.length) {","        // No default constraint found -- we can cleanly remove the column","        return;","      }","      var dropConstraintSql = self.QueryGenerator.dropConstraintQuery(tableName, results[0].name);","      return self.sequelize.query(dropConstraintSql, { raw: true, logging: options.logging});","    })","    .then(function () {","      var findForeignKeySql = self.QueryGenerator.getForeignKeyQuery(tableName, attributeName);","      return self.sequelize.query(findForeignKeySql , { raw: true, logging: options.logging});","    })","    .spread(function (results) {","      if (!results.length) {","        // No foreign key constraints found, so we can remove the column","        return;","      }","      var dropForeignKeySql = self.QueryGenerator.dropForeignKeyQuery(tableName, results[0].constraint_name);","      return self.sequelize.query(dropForeignKeySql , { raw: true, logging: options.logging});","    })","    .then(function() {","      //Check if the current column is a primaryKey","      var primaryKeyConstraintSql = self.QueryGenerator.getPrimaryKeyConstraintQuery(tableName, attributeName);","      return self.sequelize.query(primaryKeyConstraintSql, { raw: true, logging: options.logging });","    })","    .spread(function(result) {","      if (!result.length) {","        return;","      }","      var dropConstraintSql = self.QueryGenerator.dropConstraintQuery(tableName, result[0].constraintName);","      return self.sequelize.query(dropConstraintSql, { raw: true, logging: options.logging});","    })","    .then(function () {","      var removeSql = self.QueryGenerator.removeColumnQuery(tableName, attributeName);","      return self.sequelize.query(removeSql, { raw: true, logging: options.logging});","    });","};","","module.exports = {","  removeColumn: removeColumn","};",""],"l":{"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"30":0,"32":0,"33":0,"36":0,"37":0,"40":0,"42":0,"44":0,"45":0,"49":0,"50":0,"53":0,"54":0,"56":0,"57":0,"60":0,"61":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mysql/query-interface.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/dialects/mysql/query-interface.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":61}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":31}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":10},"end":{"line":41,"column":22}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"2":{"start":{"line":22,"column":0},"end":{"line":47,"column":2}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"5":{"start":{"line":26,"column":2},"end":{"line":46,"column":7}},"6":{"start":{"line":32,"column":6},"end":{"line":35,"column":7}},"7":{"start":{"line":34,"column":8},"end":{"line":34,"column":15}},"8":{"start":{"line":36,"column":6},"end":{"line":39,"column":10}},"9":{"start":{"line":42,"column":6},"end":{"line":45,"column":10}},"10":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":69}}]}},"code":["'use strict';","","/**"," Returns an object that treats MySQL's inabilities to do certain queries.",""," @class QueryInterface"," @static"," */","","var _ = require('lodash');","","/**","  A wrapper that fixes MySQL's inability to cleanly remove columns from existing tables if they have a foreign key constraint.","","  @method removeColumn","  @for    QueryInterface","","  @param  {String} tableName     The name of the table.","  @param  {String} columnName    The name of the attribute that we want to remove.","  @param  {Object} options"," */","var removeColumn = function (tableName, columnName, options) {","  var self = this;","  options = options || {};","","  return self.sequelize.query(","      self.QueryGenerator.getForeignKeyQuery(tableName, columnName),","      _.assign({ raw: true }, options)","    )","    .spread(function (results) {","      //Exclude primary key constraint","      if (!results.length || results[0].constraint_name === 'PRIMARY') {","        // No foreign key constraints found, so we can remove the column","        return;","      }","      return self.sequelize.query(","          self.QueryGenerator.dropForeignKeyQuery(tableName, results[0].constraint_name),","          _.assign({ raw: true }, options)","        );","    })","    .then(function () {","      return self.sequelize.query(","          self.QueryGenerator.removeColumnQuery(tableName, columnName),","          _.assign({ raw: true }, options)","        );","    });","};","","module.exports = {","  removeColumn: removeColumn","};",""],"l":{"10":1,"22":1,"23":0,"24":0,"26":0,"32":0,"34":0,"36":0,"42":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-sequelize/sequelize/lib/associations/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}}},"branchMap":{},"code":["'use strict';","","var Association = require('./base');","Association.BelongsTo = require('./belongs-to');","Association.HasOne = require('./has-one');","Association.HasMany = require('./has-many');","Association.BelongsToMany = require('./belongs-to-many');","","module.exports = Association;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1}}}